{"boosts": {}, "exp_mgmt": {"any_loaded": true, "authenticated": false, "current_manager": "", "experiment": "asdf", "experiments": {"null": {"all_procs": {"procedure_1.csv": [["item", "trial type", "max time", "text", "Shuffle 1", ""], ["2", "mousetracker", "user", "This is the start of a new experiment.", "off", ""], ["", "", "", "", "", ""]]}, "cond_array": [["name", "notes", "stimuli", "procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", ""], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "random", "", "", "5", ""], ["", "", "", "", "", "", "", "", "", "", ""]], "all_stims": {"stimuli_1.csv": [["Movie", "correctid", "incorrectid", "pic_now", "pic_target", "pic_default", "face_side", "init_ball", "movement", "end_ball", "target_loc", "belief_participant", "belief_agent", "condition", "faceid", "skip_line_display", "phase", "cue", "background", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Prac", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Prac", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Prac", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Prac", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/8va3c4un6x0bneu/F1LStay.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/4wumw3qvewwdbm3/F1RStay.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/7w20mle7dwn9ogx/F1LSwitch.mp4?dl=0", "Left", "Right", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/ijw16lm5kd67aif/F1LeftTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["https://dl.dropbox.com/s/03yjqm6f7r0dzne/F1RSwitch.mp4?dl=0", "Right", "Left", "https://dl.dropbox.com/s/7mtgeau2b781un4/F1Now.jpg?dl=0", "https://dl.dropbox.com/s/kbmyeltiynqlrmx/F1RightTarget.jpg?dl=0", "https://dl.dropbox.com/s/8kqykpgysg8tork/F1Blocks.jpg?dl=0", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "https://dl.dropbox.com/s/mndsxg7uxx8jzu1/Freeman_Background.png?dl=0", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]]}, "procedure": null, "stimuli": null, "public_key": "q+QFJgkGF6eb8SzHJUUnPonMQY0xHjPkPXtqHkwEo1A="}, "asdf": {"all_procs": {"procedure_1.csv": [["item", "trial type", "max time", "text", "Shuffle 1", null], ["2", "instruct", "user", "hi there", "off", null], [null, null, null, null, null, null]]}, "cond_array": [["name", "notes", "stimuli", "procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", null], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "on", "", "", 5, null], [null, null, null, null, null, null, null, null, null, null, null]], "all_stims": {"stimuli_1.csv": [["cue", "answer", null], ["A", "Apple", null], ["B", "Banana", null], [null, null, null]]}, "public_key": "q+QFJgkGF6eb8SzHJUUnPonMQY0xHjPkPXtqHkwEo1A=", "parsed_procs": {"procedure_1.csv": [{"item": "2", "trial type": "instruct", "max time": "user", "text": "hi there", "": "", "shuffle 1": "off"}]}, "surveys": {}, "trialtypes": {"instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>"}, "python_procs": {"procedure_1.csv": "item,trial type,max time,text,Shuffle 1,\r\n2,instruct,user,hi there,off,\r\n,,,,,"}, "python_conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,on,,,5,\r\n,,,,,,,,,,", "python_stims": {"stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "stimuli_1.csv", "procedure": "procedure_1.csv", "fullscreen": "off", "welcome": "", "participant_id": "on", "end_message": "", "start_message": "", "buffer": "5", "": ""}], "procedure": null, "stimuli": null}, "alcohol_gambling_exemplar": {"all_procs": {"procedure_1.csv": [["item", "trial type", "max time", "text", "Shuffle 1", "btn_width", "instruct_1", "responses_1", "instruct_2", "responses_2", "instruct_3", "responses_3", "cue_height", "cue_width", ""], ["2 to 74", "rate_image", "user", "<h1>Here's my survey title</h1><br>\n<br>\n<br>\nHello <b>this is in bold</b> <em>this is in italics</em> <br>\n<br>\n<br>\nThanks for participating<br>\n<br>\n<b>now it's in bold</b><br>\n<br>\n<br>\n<u>here's something underlined</u><br>\n<br>\n", "trials", "50px", "How pleasant is the image (1 = very unpleasant; 5 = neutral; 9 = very pleasant)", "1|2|3|4|5|6|7|8|9", "How excited/jittery does the image make you feel (1 = very bored; 5 = neutral; 9 = very excited)", "1|2|3|4|5|6|7|8|9", "", "", "300", "400", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]]}, "cond_array": [["name", "notes", "stimuli", "procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", ""], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "random", "", "", "5", ""], ["", "", "", "", "", "", "", "", "", "", ""]], "all_stims": {"stimuli_1.csv": [["cue", "image_type", ""], ["https://dl.dropbox.com/s/zcpro7lzj4lm7zu/GAAP1_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/yebc6bcwvrpfysb/gaap3_milk_bottle_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/wlqzxs00dhbkrpu/gaap4_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/6smk92qicn0kbq9/GAAP5_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/detameb7c04vgtq/gaap6_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/lhjtse3jvk1l9cf/gaap8_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/5jxkloa3o6yoobk/gaap9_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/phhjxy5jk0xftg6/GAAP10_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/tnnt60axkre1l0p/GAAP15_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/wgct2s8vy90ksbc/GAAP16_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/2vgqjebo8wn2iz1/GAAP18_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/13591yhad9p8u3l/GAAP20_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/fo15xg9he9g03jf/GAAP21_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/dobgeap4gojoo2f/gaap24_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/f621i04mrin3qw7/gaap28_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/fczdvo8xpj8ighn/gaap29_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/mynfumr0niqagog/GAAP30_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/fe1sebmo4x31plz/GAAP35_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/hl4gvv09crrqmwi/gaap46_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/oaulnw2se2vr0iv/gaap51_ar.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/1m10pi95bk6max5/GAAP52_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/eetc3llxowb7uj9/GAAP54_AR.png?dl=0", "gaap", ""], ["https://dl.dropbox.com/s/qklk5mrynyaiz0z/gaap1_fries_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/yebc6bcwvrpfysb/gaap3_milk_bottle_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/vb47onmepqaqkfj/gaap4_coffee_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/k2xmffgp0toesxg/gaap8_craft_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/saqw2qhrt1z2zoo/GAAP10_waterbottles_AR.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/qly7s11l50jzat0/gaap18_salad_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/wnotdan4hco12sn/gaap21_party_popper_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/3esdt3ebe0poxpx/GAAP24_bubbles_AR.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/jli04qfoqy8y28l/GAAP35_paint_AR.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/ou9mdwxawqf4vwx/gaap46_hotwheels_ar.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/fo3rnus3ix7h9oe/GAAP51_paddle_AR.png?dl=0", "gaap_matched", ""], ["https://dl.dropbox.com/s/s98nvglc0on5bg8/blackjack_casino.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/lfw7xknvgkciu9k/greyhounds.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/tmtop9em6i5fjrk/horse_racing_1.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/nic16jgd2jl31zp/horse_racing_2.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/vo4s6okh28vy9qd/lottery_ticket.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/d7p6opi7k60k8t3/lotto_balls.png?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/5kf1y55uusaysh4/poker_chips_cards.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/bm1bpx809m5fkec/poker_chips.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/lnbhc965wkrh5ad/roulette_table.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/qfp2d60iaw477ln/roulette_wheel.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/snj0w6emu1k1u1u/tvliveodds.png?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/5a1ewk26ak6r7n3/bettingagencylogo_1.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/v9l4paw82a9etv4/bettingagencylogo_2.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/aot03jxen8s96hs/scratchie_2.gif?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/23q4nreq8xuwen3/tabticket.gif?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/nx90u94wdfefg8y/scratchie_1.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/kdtjudvcofudqja/pokies_1.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/vdhqwisx9xjqqze/pokies_2.png?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/145321m6ewsrzlz/pokies_3.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/cirydak4wdn7dna/cards.jpg?dl=0", "gambling", ""], ["https://dl.dropbox.com/s/rfcx5jt2zwzntdk/blackjacks_course.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/mlcxm1oe95ktqv1/wolves.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/8hgysyk124lv0vr/horses_stable.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/umwnm79kqf89r8z/horses%20running.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/sgmaigzr2vzy4j6/bus-timetable.gif?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/ev8sazdi1s4dncu/cricket_balls.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/wbkkssro9yg6us5/notebooks%20and%20pencils.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/knif2lhsw7okbwz/batteries.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/oat33xo0va59pj6/football%20pitch.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/f5an1h6wvtpea9r/ship%20steering%20wheel.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/dg0yxiomd1yrn3s/weather.png?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/jv61ox8qpyka9xb/ukraine%20flag.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/sxghfay3zahjhzo/black_blue.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/d43m5nk1dfv1crq/chalkboard.jpeg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/oyrfen0mle66n2w/notebook%202.jpeg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/pdo9yz75py389bn/butterfly.png?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/oabxaeuaqhqtiyr/supermarket%20shelf.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/iubny4c9beoukpy/drinks.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/e3hvqpyjp0an7zl/arcade.jpg?dl=0", "gambling_matched", ""], ["https://dl.dropbox.com/s/ybyyabxpkzn1bze/notebooks.jpg?dl=0", "gambling_matched", ""], ["", "", ""]]}, "procedure": null, "stimuli": null, "public_key": "q+QFJgkGF6eb8SzHJUUnPonMQY0xHjPkPXtqHkwEo1A=", "parsed_procs": {"procedure_1.csv": [{"item": "2 to 74", "trial type": "rate_image", "max time": "user", "text": "<h1>Here's my survey title</h1><br>\n<br>\n<br>\nHello <b>this is in bold</b> <em>this is in italics</em> <br>\n<br>\n<br>\nThanks for participating<br>\n<br>\n<b>now it's in bold</b><br>\n<br>\n<br>\n<u>here's something underlined</u><br>\n<br>\n", "btn_width": "50px", "instruct_1": "How pleasant is the image (1 = very unpleasant; 5 = neutral; 9 = very pleasant)", "responses_1": "1|2|3|4|5|6|7|8|9", "instruct_2": "How excited/jittery does the image make you feel (1 = very bored; 5 = neutral; 9 = very excited)", "responses_2": "1|2|3|4|5|6|7|8|9", "instruct_3": "", "responses_3": "", "cue_height": "300", "cue_width": "400", "": "", "shuffle 1": "trials"}]}, "surveys": {}, "trialtypes": {"instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>", "text": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019-20) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n{{text}}", "rate_image": "<!--\nThis is from Borcsok, Fitzgibbins and Haffey (2020) investigation into gambling and alcohol behaviour\n-->\n<style>\n#face_img{\n  width:{{cue_width}};\n  height:{{cue_height}};\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n#instructions{\n  text-align: center;\n  font-size:20px;\n}\n#response_div{\n  margin: auto;\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n#submit_btn{\n  margin:0 auto;\n  display:none;\n}\n.response_btn{\n  margin:5px;\n  width:{{btn_width}};\n}\n</style>\n<img src=\"{{cue}}\" id=\"face_img\"/>  <!-- if you want to refer to a local image, you need to identify it's relative location to RunStudy.html -->\n<div id=\"response_div\"></div>\n<div id=\"button_container\">\n  <button class=\"btn btn-danger\" onclick=\"Trial.submit()\" id=\"submit_btn\">Submit</button>\n</div>\n<input type=\"hidden\" name=\"face_response\" id=\"face_response\"/>\n<script>\nno_stims = 0;\nresp_div_html = \"\";\nresp_upper    = 0;\nresponses_array =   [\"{{responses_1}}\",\n                     \"{{responses_2}}\",\n                     \"{{responses_3}}\"];\ninstruction_array = [\"{{instruct_1}}\",\n                     \"{{instruct_2}}\",\n                     \"{{instruct_3}}\"];\n\nrow_classes = [\"primary\",\n               \"info\",\n               \"secondary\"];\n\nfor(var i = 0; i < 3; i++){\n  responses = responses_array[i];\n  if(responses == \"\"){\n    break;\n  }\n  no_stims++;\n  \n  responses = responses.split(\"|\");\n  resp_div_html += \"<h3 class='text-\" + row_classes[i] + \"'>\" +  instruction_array[i] + \"</h3>\";\n  resp_div_html += \"<div style='margin:10px'>\";\n  resp_div_html += responses.map(function(response){\n    return \"<button name='face_rating_\" + (i+1) + \"' class='btn btn-\" + row_classes[i] + \" response_btn'>\" + response + \"</button>\";\n  }).join(\"\");\n  resp_div_html += \"<input type='hidden' id='face_response_\" + (i+1) + \"' name='face_response_\" + (i+1) + \"'>\";\n  resp_div_html += \"</div>\";\n};\n\n$(\"#response_div\").html(resp_div_html);\n$(\".response_btn\").on(\"click\",function(){\n  var response_id = $(this).attr(\"name\").replace(\"rating\",\"response\");\n  $(\"#\" + response_id).val(this.innerHTML);\n  $('[name=\"' + $(this).attr(\"name\") + '\"]').removeClass(\"btn-danger\");\n  $(this).addClass(\"btn-danger\");\n  check_responses();\n});\nfunction check_responses(){\n  valid_responses = 0;\n  for(var i = 1; i < no_stims + 1; i++){\n    if($(\"#face_response_\" + i).val() !== \"\"){\n      valid_responses++;\n    }\n  }\n  if(valid_responses == no_stims){\n    $(\"#submit_btn\").css(\"display\", \"block\");\n  }\n}\n</script>"}, "python_procs": {"procedure_1.csv": "item,trial type,max time,text,Shuffle 1,btn_width,instruct_1,responses_1,instruct_2,responses_2,instruct_3,responses_3,cue_height,cue_width,\r\n2 to 74,rate_image,user,\"<h1>Here's my survey title</h1><br>\n<br>\n<br>\nHello <b>this is in bold</b> <em>this is in italics</em> <br>\n<br>\n<br>\nThanks for participating<br>\n<br>\n<b>now it's in bold</b><br>\n<br>\n<br>\n<u>here's something underlined</u><br>\n<br>\n\",trials,50px,How pleasant is the image (1 = very unpleasant; 5 = neutral; 9 = very pleasant),1|2|3|4|5|6|7|8|9,How excited/jittery does the image make you feel (1 = very bored; 5 = neutral; 9 = very excited),1|2|3|4|5|6|7|8|9,,,300,400,\r\n,,,,,,,,,,,,,,"}, "python_conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,random,,,5,\r\n,,,,,,,,,,", "python_stims": {"stimuli_1.csv": "cue,image_type,\r\nhttps://dl.dropbox.com/s/zcpro7lzj4lm7zu/GAAP1_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/yebc6bcwvrpfysb/gaap3_milk_bottle_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/wlqzxs00dhbkrpu/gaap4_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/6smk92qicn0kbq9/GAAP5_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/detameb7c04vgtq/gaap6_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/lhjtse3jvk1l9cf/gaap8_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/5jxkloa3o6yoobk/gaap9_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/phhjxy5jk0xftg6/GAAP10_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/tnnt60axkre1l0p/GAAP15_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/wgct2s8vy90ksbc/GAAP16_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/2vgqjebo8wn2iz1/GAAP18_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/13591yhad9p8u3l/GAAP20_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/fo15xg9he9g03jf/GAAP21_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/dobgeap4gojoo2f/gaap24_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/f621i04mrin3qw7/gaap28_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/fczdvo8xpj8ighn/gaap29_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/mynfumr0niqagog/GAAP30_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/fe1sebmo4x31plz/GAAP35_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/hl4gvv09crrqmwi/gaap46_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/oaulnw2se2vr0iv/gaap51_ar.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/1m10pi95bk6max5/GAAP52_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/eetc3llxowb7uj9/GAAP54_AR.png?dl=0,gaap,\r\nhttps://dl.dropbox.com/s/qklk5mrynyaiz0z/gaap1_fries_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/yebc6bcwvrpfysb/gaap3_milk_bottle_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/vb47onmepqaqkfj/gaap4_coffee_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/k2xmffgp0toesxg/gaap8_craft_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/saqw2qhrt1z2zoo/GAAP10_waterbottles_AR.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/qly7s11l50jzat0/gaap18_salad_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/wnotdan4hco12sn/gaap21_party_popper_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/3esdt3ebe0poxpx/GAAP24_bubbles_AR.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/jli04qfoqy8y28l/GAAP35_paint_AR.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/ou9mdwxawqf4vwx/gaap46_hotwheels_ar.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/fo3rnus3ix7h9oe/GAAP51_paddle_AR.png?dl=0,gaap_matched,\r\nhttps://dl.dropbox.com/s/s98nvglc0on5bg8/blackjack_casino.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/lfw7xknvgkciu9k/greyhounds.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/tmtop9em6i5fjrk/horse_racing_1.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/nic16jgd2jl31zp/horse_racing_2.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/vo4s6okh28vy9qd/lottery_ticket.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/d7p6opi7k60k8t3/lotto_balls.png?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/5kf1y55uusaysh4/poker_chips_cards.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/bm1bpx809m5fkec/poker_chips.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/lnbhc965wkrh5ad/roulette_table.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/qfp2d60iaw477ln/roulette_wheel.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/snj0w6emu1k1u1u/tvliveodds.png?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/5a1ewk26ak6r7n3/bettingagencylogo_1.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/v9l4paw82a9etv4/bettingagencylogo_2.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/aot03jxen8s96hs/scratchie_2.gif?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/23q4nreq8xuwen3/tabticket.gif?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/nx90u94wdfefg8y/scratchie_1.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/kdtjudvcofudqja/pokies_1.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/vdhqwisx9xjqqze/pokies_2.png?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/145321m6ewsrzlz/pokies_3.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/cirydak4wdn7dna/cards.jpg?dl=0,gambling,\r\nhttps://dl.dropbox.com/s/rfcx5jt2zwzntdk/blackjacks_course.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/mlcxm1oe95ktqv1/wolves.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/8hgysyk124lv0vr/horses_stable.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/umwnm79kqf89r8z/horses%20running.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/sgmaigzr2vzy4j6/bus-timetable.gif?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/ev8sazdi1s4dncu/cricket_balls.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/wbkkssro9yg6us5/notebooks%20and%20pencils.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/knif2lhsw7okbwz/batteries.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/oat33xo0va59pj6/football%20pitch.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/f5an1h6wvtpea9r/ship%20steering%20wheel.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/dg0yxiomd1yrn3s/weather.png?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/jv61ox8qpyka9xb/ukraine%20flag.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/sxghfay3zahjhzo/black_blue.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/d43m5nk1dfv1crq/chalkboard.jpeg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/oyrfen0mle66n2w/notebook%202.jpeg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/pdo9yz75py389bn/butterfly.png?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/oabxaeuaqhqtiyr/supermarket%20shelf.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/iubny4c9beoukpy/drinks.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/e3hvqpyjp0an7zl/arcade.jpg?dl=0,gambling_matched,\r\nhttps://dl.dropbox.com/s/ybyyabxpkzn1bze/notebooks.jpg?dl=0,gambling_matched,\r\n,,"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "stimuli_1.csv", "procedure": "procedure_1.csv", "fullscreen": "off", "welcome": "", "participant_id": "random", "end_message": "", "start_message": "", "buffer": "5", "": ""}]}, "mousetracker": {"all_procs": {"procedure_1.csv": [["item", "trial type", "max time", "text", "Shuffle 1", ""], ["2 to 37", "mousetracker", "user", "This is the start of a new experiment.", "off", ""], ["", "", "", "", "", ""]]}, "cond_array": [["name", "notes", "stimuli", "procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", ""], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "random", "", "", "5", ""], ["", "", "", "", "", "", "", "", "", "", ""]], "all_stims": {"stimuli_1.csv": [["movie", "correctid", "incorrectid", "pic_now", "pic_target", "pic_default", "face_side", "init_ball", "movement", "end_ball", "target_loc", "belief_participant", "belief_agent", "condition", "faceid", "skip_line_display", "phase", "cue", "background", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Prac", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Prac", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Prac", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Prac", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1RStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Left", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Right", "TRUE", "TRUE", "TT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Right", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LSwitch.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Left", "TRUE", "FALSE", "TF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Stay", "Left", "Right", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Stay", "Right", "Left", "FALSE", "FALSE", "FF", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Left", "Right", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1LeftTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Left", "Switch", "Right", "Left", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["../User/Stimuli/mt_exemplar/F1LStay.mp4", "Right", "Left", "../User/Stimuli/mt_exemplar/F1Now.jpg", "../User/Stimuli/mt_exemplar/F1RightTarget.jpg", "../User/Stimuli/mt_exemplar/F1Blocks.jpg", "Left", "Right", "Switch", "Left", "Right", "FALSE", "TRUE", "FT", "F1", "Yes", "Main", "", "../User/Stimuli/mt_exemplar/Freeman_Background.png", ""], ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]], "mousetracker.csv": [["cue", "answer", null], ["A", "Apple", null], ["B", "Banana", null], [null, null, null]]}, "procedure": null, "stimuli": null, "public_key": "q+QFJgkGF6eb8SzHJUUnPonMQY0xHjPkPXtqHkwEo1A=", "parsed_procs": {"procedure_1.csv": [{"item": "2 to 37", "trial type": "mousetracker", "max time": "user", "text": "This is the start of a new experiment.", "": "", "shuffle 1": "off"}]}, "surveys": {}, "trialtypes": {"instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>", "mousetracker": "<!--\n\n/*\n* Mousetracking code for running experiments on Collector.\n* This code should also hopefully be helpful for running mousetracking without Collector\n* Stimuli in the default version of this based on videos by Dr. Robrecht van der Wel\n* Authors: Dr. Anthony Haffey, Dr Kristian Tempelmans Plat, Prasannajeet Mane\n*/\n\n-->\n<style>\n/* elements by class */\n.movie_area{\n\tposition:      absolute;\n\twidth:         1024px;\n\theight:        768px;\n\ttop:           1px;\n\tleft:          0px;\n\tz-index:       4;\n}\n\n.start_tracking{\n\tposition:      absolute;\n\ttop:           726px;\n\tleft:          502px;\n\tz-index:       5;\n\tborder-style:  solid;\n\tborder-color:  red;\n\twidth:         20px;\n\theight:        20px;\n\tborder-radius: 10px;\n\tdisplay:       none;\n}\n\n.start_video{\n  position:         absolute;\n  top:              726px;\n  left:             502px;\n\tz-index:          5;\n\tborder:           none;\n\theight:           20px;\n\twidth:            20px;\n\tdisplay:          none;\n\tborder-radius:    50%;\n\tbackground-color: green;\n}\n\n/* elements by id */\n\n#background{\n\tposition: absolute;\n\ttop:      1px;\n\twidth:    1024px;\n\theight:   768px;\n\tz-index:  2;\n}\n#canvas{\n  position:     absolute;\n\ttop:          1px;\n\tleft:         1px;\n  border-style: solid;\n  border-color: black;\n  height:       1024px;\n  width:        768x;\n}\n#correct_button{\n\tposition: absolute;\n\ttop:      400px;\n\tleft:     437px;\n\tz-index:  6;\n}\n#error_button{\n\tposition: absolute;\n\ttop:      400px;\n\tleft:     390px;\n\tz-index:  6;\n}\n#error_feedback{\n\tposition: absolute;\n\ttop:      234px;\n\tleft:     362px;\n\twidth:    300;\n\theight:   300px;\n\tz-index:  7;\n\tdisplay:  none;\n}\n#loading_vid{\n  position: absolute;\n\tmargin:   auto;\n\twidth:    400px;\n\ttop:      50%;\n}\n#pic_default{\n\tposition: absolute;\n\twidth:    1024px;\n\theight:   768px;\n\tz-index:  2;\n}\n#prepare_screen{\n\tposition: absolute;\n\ttop:      1px;\n\tleft:     1px;\n\twidth:    1024px;\n\theight:   768px;\n}\n#processing_div{\n  display:  none;\n}\n#response_area{\n\tposition: absolute;\n  width:    1024px;\n  height:   768px;\n\ttop:      1px;\n\tleft:     1px;\n\tz-index:  1;\n}\n#response_area_target{\n\tposition: absolute;\n  width:    1024px;\n  height:   768px;\n\ttop:      1px;\n\tleft:     1px;\n\tz-index:  2;\n}\n#resp_left{\n\tposition:         absolute;\n\twidth:            190px;\n\theight:           70px;\n\ttop:              128px;\n\tleft:             70px;\n\tz-index:          5;\n\tbackground-color: transparent;\n\tborder:           none;\n}\n#resp_right{\n\tposition:         absolute;\n\twidth:            190px;\n\theight:           70px;\n\ttop:              128px;\n\tleft:             766px;\n\tz-index:          5;\n\tbackground-color: transparent;\n\tborder:           none;\n}\n#rotated_canvas{\n  position:     relative;\n  border-style: solid;\n  border-color: black;\n  height:       1024px;\n  width:        768px;\n}\n#too_slow_button{\n\tposition: absolute;\n\ttop:      400px;\n\tleft:     390px;\n\tz-index:  6;\n}\n#too_slow_feedback{\n\tposition: absolute;\n\ttop:      234px;\n\tleft:     362px;\n\tz-index:  7;\n\tdisplay:  none;\n}\n#trial_content_div{\n  position: absolute;\n  top:      1;\n  bottom:   0;\n  left:     0;\n  right:    0;\n  margin:   auto;\n  height:   768px;\n  width:    1024px;\n  position: relative;\n}\n</style>\n\n\n<div id=\"trial_content_div\">\n  <span id=\"replaceable_movie_span\"></span>\n  <input id=\"resp_left\"        type=\"button\"                       value = \"\"                                                           style=\"display:none\">\n  <input id=\"resp_right\"       type=\"button\"                       value = \"\"                                                           style=\"display:none\">\n  <input id=\"too_slow_button\"  type=\"button\" class=\"process_trial\" value = \"Please respond faster next time\"                            style=\"display:none\">\n  <input id=\"error_button\"     type=\"button\" class=\"process_trial\" value = \"Please click on the ball next time\"                         style=\"display:none\">\n  <input id=\"correct_button\"   type=\"button\" class=\"process_trial\" value = \"Click here to continue\"                                     style=\"display:none\">\n  <input id=\"RequiredResponse\" type=\"text\"                         value = \"{{correctid}}\"                      name=\"RequiredResponse\" style=\"display:none\">\n    \t\t\t\n  <div id=\"prepare_screen\">\n  \t<img id=\"response_area\"         src = \"{{pic_now}}\"       style = \"display:none\">\n  \t<img id=\"response_area_target\"  src = \"{{pic_target}}\"    style = \"display:none\">\n  \t<img id=\"pic_default\"           src = \"{{pic_default}}\"   style = \"display:none\">\n  \t<img id=\"background\"            src = \"{{background}}\"    style = \"display:none\">\n  </div>\n  \n  <div id=\"error_feedback\">\n    <img id=\"ErrorImg\"   src = \"../User/Stimuli/mt_exemplar/Errorimg.png\">\n  </div>\n    \n  <div id=\"too_slow_feedback\">\n    <img id=\"TooSlowImg\" src = \"../User/Stimuli/mt_exemplar/TooSlow.png?dl=0\">\n  </div>\n    \n  <textarea name=\"x_array\" style=\"display:none\" id=\"x_array_textarea\"></textarea>\n  <textarea name=\"y_array\" style=\"display:none\" id=\"y_array_textarea\"></textarea>\n    \n  <textarea name=\"ActualResponseId\"    id=\"ActualResponseId\"    style=\"display:none\"></textarea>\n  <textarea name=\"correct_response_id\" id=\"correct_response_id\" style=\"display:none\"></textarea>\n  <!-- ActualResponse will be stored as follows: 0 = too slow; 1 = left; 2 = right; -->\n  <!-- CorrectResponse will be stored as follows: 1 = should be left; 2 = should be right -->\n    \n  <input type=\"hidden\" name=\"time_to_start_tracking\" id=\"start_tracking_input\">\n</div>   \n\n<div id='loading_vid'>Loading the trial... If it doesn't load within 30 seconds the task will try to reload the stimuli. \n                      If it doesn't load within a couple of minutes, please contact the researcher who recruited you. \n                      DO not refresh the page! </div>\n\n<input type=\"hidden\" name=\"error_message\"     id=\"error_message\">\n<input type=\"hidden\" name=\"trial_accuracy\"    id=\"trial_accuracy\">\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n\n\n<script>\nCorrectSide          = \"{{correctid}}\";\nskip_processing_view = \"{{skip_line_display}}\";\nphase_type           = \"{{phase}}\";\nshuffle_type         = \"{{shuffle 1}}\";\nbackground_img       = \"{{background}}\";\nvideo_src            = \"{{movie}}\";\n\ndraw_trial();\n\nvar viewportWidth  = $(\"body\").innerWidth();\nvar viewportHeight = $(\"body\").innerHeight();\n\nvar response_window_timeout;\n\nTracker_stopper             = 1;                                                // to stop attempts at tracking before the task is ready.\nbackground_and_video_loaded = 0;\n\nif (CorrectSide == \"Left\") {\n  CorrectResponseVal = 1;\n} else if (CorrectSide == \"Right\") {\n  CorrectResponseVal = 2;\n}\n\n$(\"#correct_response_id\").val(CorrectResponseVal);\n\ntimed_check_of_video_loading = setInterval (function(){\n  if(background_and_video_loaded !== 2){\n    bootbox.alert(\"video slow to load, trying to reload it\");\n    draw_trial();\n  } else {\n    clearInterval(timed_check_of_video_loading);\n  }\n},30000);\n\n/*\n* Functions\n*/\nfunction auto_start_tracking(){\n  clicked_start = 1;\n  $(\".movie_area\").hide();\n  $(\".start_tracking\").hide();\n  \n  if (Slow_state == 0){\n    $(\"#resp_left\").show();\n    $(\"#resp_right\").show();\n  }\n  \n  Tracker_stopper         = 0;\n  x_array                 = [];\n  y_array                 = [];\n  baseline_time           = (new Date()).getTime();\n  timestamp_array         = [];\n  response_window_timeout = setTimeout(response_window,3000);\n  $(\".start_tracking_input\").val(baseline_time-post_video_baseline_time);\n  \n  $(\"#background, #resp_left, #resp_right,#prepare_screen\").mousemove(function(event){\n    var _mouseX = event.clientX;\n    var _mouseY = event.clientY;\n    var offset = $(\".movie_area\").offset(); \n    _mouseX -= offset.left;\n    _mouseY -= offset.top;\n    new_x = _mouseX;\n    new_y = _mouseY;\n    x_array.push(_mouseX);\n    y_array.push(_mouseY);\n    this_timestamp = (new Date()).getTime()-baseline_time;\n    timestamp_array.push(this_timestamp);\n    $(\"#x_array_textarea\").val(x_array);\n    $(\"#y_array_textarea\").val(y_array);\n    if(new_y < 686 & changed_pic == 0){                                         //this is 50px above the midpoint of the .start_tracking button.\n      changed_pic = 1;  \n      $('#response_area_target').show();\n    }\n  });\n};\n\nfunction draw_movie(){\n  var video_html = '<video id=\"movie_area\" class=\"movie_area\" style = \"display:none\">'+\n                      '<source src=\"{{movie}}\" type=\"video/mp4\">'+\n                       ' Your browser does not support the video tag.'+\n                    '</video>'+\n                    '<input id=\"start_video\"    class=\"start_video\"     type=\"button\" style=\"display:none\">'+ \n                    '<input id=\"start_tracking\" class=\"start_tracking\"  type=\"button\" style=\"display:none\">';\n  $(\"#replaceable_movie_span\").html(video_html);\n\n  $(\".movie_area\").on('loadstart', function() { \n    if(background_and_video_loaded > 0){\n      background_and_video_loaded = 2;\n      $(\"#loading_vid\").hide();\n      $(\"#background\").show();\n      $(\".start_video\").show();\n    } else {\n      background_and_video_loaded = 1;\n    }\n  })\n  .on('error', function() { \n    console.log(\"error loading movie\");\n  });\n  myVideo = document.getElementById(\"movie_area\");\n}\n\n\nfunction draw_trial(){\n  draw_movie();\n  $(\".start_video\").on(\"click\", function(){\n    function playPause() { \n      if (myVideo.paused) {\n        myVideo.play(); \n      } else {\n        myVideo.pause(); \n      }\n    }\n    changed_pic = 0;\n    clicked_start = 0;\n    $(\"#background\").hide();\n    $(\".start_tracking\").hide();\n    $(\".start_video\").hide();\n    $(\"#response_area\").hide();\n    $(\"#response_area_target\").hide();                                          //for quick movement specifically\n    $(\".movie_area\").show();\n    playPause();\n    $('.movie_area').show().trigger(\"play\").bind('ended', function () {\n      post_video_baseline_time = (new Date()).getTime();\n      $('.start_tracking').show();\n      $(\"#response_area\").show();\n      $(\".movie_area\").hide();\n    });\n  \tSlow_state = 0;\n  \tTimeLimit_stopper = 0;\n  });\n  $('.start_tracking').on('click', function(){\n    auto_start_tracking();\n  });    \n}\n\nfunction participant_error(long_message,short_error){\n  clearTimeout(response_window_timeout);                                        // cancel timer \n  if(phase_type.toLowerCase().indexOf(\"prac\") !== -1){\n    bootbox.alert (\"Restarting practice trial\");\n    $(\"#too_slow_feedback\").hide();                                             //only necessary for the too slow click trials\n    $(\"#too_slow_button\").hide();                                               //only necessary for the too slow click trials\n    $(\"#error_button\").hide();                                                  //only necessary for wrong trials\n    draw_trial();\n  } else {\n    bootbox.alert(\"Moving on to next trial.\", function(){                       //these errors always have mouse co-ordinates, so need to be reported before processing the trial.\n      process_trial_function(short_error);\n    }); \n  }\n  bootbox.alert(long_message);\n}\n\nfunction process_trial_function(error_message){\n  $(\"#error_message\").val(error_message);\n    \n\n  /* Trajectory start and end */\n\n  start_x = parseFloat($(\".start_tracking\").css(\"left\").replace(\"px\",\"\")) + \n            parseFloat($(\".start_tracking\").css(\"width\").replace(\"px\",\"\"))/2; \n  start_y = parseFloat($(\".start_tracking\").css(\"top\").replace(\"px\",\"\")) + \n            parseFloat($(\".start_tracking\").css(\"height\").replace(\"px\",\"\"))/2;\n    \n  if(CorrectSide == \"Left\"){                                                  // end_x and end_y depend on the trial type (whether it ends on the left or right)\n    end_x   =  parseFloat($(\"#resp_left\").css(\"left\").replace(\"px\",\"\"));    \n    end_y   =  parseFloat($(\"#resp_left\").css(\"top\").replace(\"px\",\"\")) + \n               parseFloat($(\"#resp_left\").css(\"height\").replace(\"px\",\"\"));\n  } else {                                                                    // assume it is right\n    end_x   =  parseFloat($(\"#resp_right\").css(\"left\").replace(\"px\",\"\")) + \n               parseFloat($(\"#resp_left\").css(\"width\").replace(\"px\",\"\"));   \n    end_y   =  parseFloat($(\"#resp_right\").css(\"top\").replace(\"px\",\"\")) + \n               parseFloat($(\"#resp_left\").css(\"height\").replace(\"px\",\"\"));\n  }\n    \n  /* Line properties */                                                       \n  m       = (start_y - end_y)/(end_x-start_x);                                //y = mx+c\n  c       = start_y - m*start_x;\n  \n  auc_object = {\n    calculate_x_gap: function(y_value, \n                              x_value){\n      quickest_x = (y_value-c)/m;\n      return (quickest_x-x_value);\n    }\n  }\n  x_gap_array = [];\n  y_gap_array = [];\n    \n  /* Trajectory rotation */\n\n  // rotate here\n  var deltaX = end_x - start_x;\n  var deltaY = start_y - end_y;\n  var rad = Math.atan2(deltaY, deltaX); // In radians\n  var deg = rad * (180 / Math.PI);\n  \n  [rot_end_x,rot_end_y] = rotate(start_x,start_y,end_x,end_y,-deg);\n  rotated_x = [];\n  rotated_y = [];\n    \n    if(typeof(parent.x_array) !== \"undefined\"){\n      for(i=0;i<parent.x_array.length;i++){\n        \n        [new_x_val,new_y_val] = rotate(start_x,start_y,parent.x_array[i],parent.y_array[i],-deg);\n        rotated_x.push(new_x_val);\n        rotated_y.push(new_y_val);\n      }\n      \n      parent.x_line_start = start_x;\n    \tparent.x_line_end = rot_end_x;\n    \tparent.y_line_start = start_y;\n    \tparent.y_line_end = rot_end_y;\n      \n      canvas.appendChild(createLine(start_x, start_y, end_x, end_y,\"black\"));\n      rotated_canvas.appendChild(createLine(start_x, start_y, rot_end_x, rot_end_y,\"black\"));\n      \n      // process rotated data - identify y-values that are equidistant on the x-axis //\n      \n      // use rounded up values\n      for(i=0;i<rotated_x.length;i++){\n        rotated_x[i]=Math.ceil(rotated_x[i]);\n        rotated_y[i]=Math.ceil(rotated_y[i]);\n      }\n  \t\n      /* Filling of gaps by interpolation */\n       \t\n      every_y_array=[];\n      every_x_array=[];\n      every_timestamp_array=[];\n      \n      for(i=0;i<rotated_x.length-1;i++){\n        var x_gap_size= rotated_x[i+1]-rotated_x[i];\n        every_y_array.push(rotated_y[i]);\n        every_x_array.push(rotated_x[i]);\n        every_timestamp_array.push(parent.timestamp_array[i]);\n      \n        if(x_gap_size > 1){\n          for(j=0;j<x_gap_size-1;j++){\n            new_x_value = rotated_x[i]+1+j;\n            new_y_value = rotated_y[i]+(1+j)*(rotated_y[i+1]-rotated_y[i])/x_gap_size;\n      \t  new_time_value = parent.timestamp_array[i]+(1+j)*(parent.timestamp_array[i+1] - parent.timestamp_array[i])/x_gap_size;\n            every_x_array.push(new_x_value);\n            every_y_array.push(new_y_value);\n      \t  every_timestamp_array.push(new_time_value);\n          }\n        }\n        \n      \telse if(x_gap_size < -1){\n      \t\tvar inverted_gap_size = x_gap_size*(-1);\n      \t\tfor(j=0;j<inverted_gap_size-1;j++){\n      \t\t\tnew_x_value = rotated_x[i]-1-j;\n      \t\t\tnew_y_value = rotated_y[i]-(1+j)*(rotated_y[i+1]-rotated_y[i])/x_gap_size;\n      \t\t\tnew_time_value = parent.timestamp_array[i]+(1+j)*(parent.timestamp_array[i+1] - parent.timestamp_array[i])/inverted_gap_size;\n      \t\t\tevery_x_array.push(new_x_value);\n      \t\t\tevery_y_array.push(new_y_value);\n      \t\t\tevery_timestamp_array.push(new_time_value);\n      \t\t}\n      \t}\n      } \n  \n      // Add last value of rotated_x and rotated_y to every_x_array and every_y_array, respectively, as these values were not included in the iterations above\n      every_x_array.push(rotated_x[rotated_x.length-1]);\n      every_y_array.push(rotated_y[rotated_y.length-1]);\n      every_timestamp_array.push(parent.timestamp_array[parent.timestamp_array.length-1]);\n      \n      /* Get reaction time */\n          \n      // X, Y & T arrays; RT (corrected for the fact that timepoint 1 in timestamp_array has a value of 1 instead of 0)\n      // But not sure if this offset of 1 ms is also reflected in final timepoint\n      ReactionTime = parent.timestamp_array[parent.timestamp_array.length-1];\n      console.dir(ReactionTime);\n      $(\"#RT\").val(ReactionTime);\n      \n  \t/* Average Y distance calculation */\n  \t\n      var y_sum = 0;\n      for( var i = 0; i < every_y_array.length; i++ ){\n          y_sum += every_y_array[i];\n      }\n      \n      // y_avg is now calculated with difference between horizontal line and recorded Y value\n      // instead of with absolute y values only\n      \n      var y_avg = rot_end_y - (y_sum/every_y_array.length);\n      $(\"#y_average_dist\").val(y_avg);\n      \n      \n      // calculate standard deviation \n      y_stdev = calculate_sd(every_y_array);\n      \n      $(\"#y_stdev_dist\").val(y_stdev);\n      \n      for(i=end_y;i<start_y;i++){\n        y_gap_array[i-end_y]=i;\n      }\n      for(i=end_y;i<start_y;i++){\n        y_gap_array[i-end_y]=i;\n      }\n      \n      // add coloring in to convey time\n      \n      // based on Madox on http://stackoverflow.com/questions/4270485/drawing-lines-on-html-page\n      \n      \n  /* calculate maximum deviation from curve */\n      //Max_dev is the highest value (e.g. would pick 20 instead of -100)\n      //Max_dev is the highest deviation from 0 and can be either positive or negative\n      \n      var y_diff = [];\n      for(var i=0; i<every_y_array.length; i++) {\n      \ty_diff.push(rot_end_y - every_y_array[i]);\n      }\n      \n      var diff_max = Math.max.apply(Math,y_diff);\n      var diff_min = Math.min.apply(Math,y_diff);\n      \n      var abs_diff_max = Math.abs(diff_max);\n      var abs_diff_min = Math.abs(diff_min);\n      \n      var Max_dev = [];\n      \n      if ((abs_diff_max - abs_diff_min) > 0){\n          Max_dev.push(diff_max);\n      }\n      else if ((abs_diff_max - abs_diff_min) < 0) {\n      \tMax_dev.push(diff_min);\n      }\n      else if ((abs_diff_max - abs_diff_min) == 0) {\n      \tMax_dev.push(0);\n      }\n      \n      \n   /* Calculate number of X flips and Y flips, based on original, non-rotated trajectory */\n      \n      // Currently, also a 'jitter count' is kept. This saves how many times a flip occurs for just one value (e.g. x_direction_memory: 1,1,1,1,1,-1,1,1,1)\n      //   This is most probably an artefact, caused by 1. miniscule hand movement 2. rough surface\n      //   3. most likely: issue with updating of picture when trajectory crosses the 600 px line.\n      // \t 'filtered_x_flips' and 'filtered_y_flips' solve this issue, but are currently not displayed in the post-trial response boxes.\n      //   Another possible issue: length of arrays and delta_arrays not the same. But this could be because delta_arrays probably begins at the first actual change.\n      \n      x_flips = 0;\n      filtered_x_flips = 0;\n      x_delta_array = [];\n      x_direction_memory = [];\n      x_jitter_count = 0;\n      y_flips = 0;\n      filtered_y_flips = 0;\n      y_delta_array = [];\n      y_direction_memory = [];\n      y_jitter_count = 0;\n      \n      for (var i=1; i<parent.x_array.length; i++)  {\n      x_delta_array.push(parent.x_array[i] - parent.x_array[i-1]);}\t\t\n      \n      for (var i=0; i<x_delta_array.length; i++)   {\n      \tif (x_delta_array[i] == 0) {\n      \t\tx_direction_memory.push(x_direction_memory[i-1]);}\n      \telse if (x_delta_array[i] > 0) {\n      \t\tx_direction_memory.push(1);}\n      \telse if (x_delta_array[i] < 0)  {\n      \t\tx_direction_memory.push(-1);}\n      \t}\n      \n      for (var i=1; i<x_direction_memory.length; i++)   {\n      \tif ((x_direction_memory[i] * x_direction_memory[i-1]) == -1) {\n      \t\tx_flips += 1;}\n      \tif ((x_direction_memory[i] != x_direction_memory[i-1]) && (x_direction_memory[i] != x_direction_memory[i+1]))\n      \t\t{x_jitter_count += 1;}\n      \t} \n      \n      if (x_jitter_count > 0) {\n      filtered_x_flips = x_flips - (2*x_jitter_count);}\n      \n      \n      for (var i=1; i<parent.y_array.length; i++)  {\n      y_delta_array.push(parent.y_array[i] - parent.y_array[i-1]);}\t\t\n      \n       for (var i=0; i<y_delta_array.length; i++)   {\n      \tif (y_delta_array[i] == 0) {\n      \t\ty_direction_memory.push(y_direction_memory[i-1]);}\n      \telse if (y_delta_array[i] > 0) {\n      \t\ty_direction_memory.push(1);}\n      \telse if (y_delta_array[i] < 0)  {\n      \t\ty_direction_memory.push(-1);}\t\n       }\n      \n        for (var i=1; i<y_direction_memory.length; i++)   {\n      \t\tif (((y_direction_memory[i] * y_direction_memory[i-1]) == -1) && (y_direction_memory[i-1] != y_direction_memory[i+1])) {\n      \t\ty_flips += 1;}\n      \t\tif ((y_direction_memory[i] != y_direction_memory[i-1]) && (y_direction_memory[i] != y_direction_memory[i+1]))\n      \t\t{y_jitter_count += 1;}\n      \t} \n      \t\n      if (y_jitter_count > 0) {\n          filtered_y_flips = y_flips - (2*y_jitter_count);\n      }\n  \t\n  \n      $(\"#X_flips\").val(x_flips);\n      // Keep in mind that this includes jitter.\n      // Also, x_flips and y_flips are calculated based on the rotated trajectory.\n      // An 'ideal' curve in a False_participant trial would show 1 x_flip in the original trajectory, but 0 x_flips in the rotated trajectory.\n      $(\"#Y_flips\").val(y_flips);\n      \n  /* Array storage */\n  \n      // Store x, y and timestamp values as response\n      $(\"#y_diff_array_textarea\").val(y_diff);\n      $(\"#x_val_array_textarea\").val(every_x_array);\n      $(\"#timestamp_textarea\").val(parent.timestamp_array);\n  \t$(\"#every_timestamp_textarea\").val(every_timestamp_array);\n      \n      // X-array corrected for its starting position, i.e. all values reduced by x[0]\n      \n      x1_val_array = [];\n      for (i=0;i<every_x_array.length;i++){\n      \tx1_val_array[i] = every_x_array[i]-every_x_array[0]+1\n      }\n      $(\"#x1_val_array_textarea\").val(x1_val_array);\n     \n  \n   /* Trajectory length */\n   \n      // Calculate length of trajectory, by using Pythagorean theorem\n       // Note: the minus in these for-loops is justified, as calculation of dx and dy should stop at the penultimate value\n       // Due to zero-based indexing, last iteration should work with i = length-2 and i = length-1\n      \n      every_x_delta_array = [];\n      every_y_delta_array = [];\n      \n      for (var i=0;i<every_x_array.length-1;i++){\n      \tevery_x_delta_array[i] = every_x_array[i+1] - every_x_array[i]\n      }\n      \n      for (var i=0;i<every_y_array.length-1;i++){\n      \tevery_y_delta_array[i] = every_y_array[i+1] - every_y_array[i]\n      }\n      \n       // Array with length of hypotenuses: for every increase in x, get the difference in y and calculate the length of the hypotenuse\n      Pyt_array = [];\n      \n      for (var i=0;i<every_x_delta_array.length;i++){\n      \tdx = every_x_delta_array[i];\n      \tdy = every_y_delta_array[i];\n      \tsquared_dx = Math.pow(dx,2);\n      \tsquared_dy = Math.pow(dy,2);\n      \tsquared_hyp = squared_dx + squared_dy;\n      \thypotenuse = Math.sqrt(squared_hyp);\n      \tPyt_array[i] = hypotenuse;\n      }\n      \t\n      \n      $(\"#d_length_array_textarea\").val(Pyt_array);\n      \n      Traj_length_val = 0;\n      \n      for (i=0;i<Pyt_array.length;i++){\n      \tTraj_length_val += Pyt_array[i];\n      }\n      \n      $(\"#Traj_length\").val(Traj_length_val);\n      \n   /* AUC calculation */\n   \n      var area = [];\n      var AUC_above = 0;\n      var AUC_below = 0;\n      \n      for (i=0;i<every_x_array.length-1;i++){\n      \t\n      \tif (every_x_array[i+1] == every_x_array[i]){\n      \t\tarea[i] = 0; \n      \t}\telse if (every_x_array[i+1] != every_x_array[i]){\n      \t\tarea[i] = (y_diff[i+1] + y_diff[i])/2;\n      \t\tif (area[i] > 0){\n      \t\t\tAUC_above += area[i];\n      \t\t}\telse if (area[i] < 0){\n      \t\t\tAUC_below += area[i];\n    \t    }\n        }\n      }\n  \t\n  \t// Store AUC_above and AUV_below correctly based on target position\n  \t if( CorrectSide == \"Left\"){\n          real_AUC_above = AUC_below;\n          real_AUC_below = AUC_above;\n  \t\t\n  \t\tAUC_above = real_AUC_above * -1;\n  \t\t\n  \t\tif (AUC_above != 0){\n  \t\tAUC_above *-1;}\n  \t\t\n  \t\tAUC_below = real_AUC_below * -1;\n  \t\tif (AUC_below != 0){\n  \t\tAUC_below *-1;}\n      }\n      \n      // This part is needed to summate AUC_above and AUC_below (makes AUC_below positive)\n      var rectified_below = AUC_below * -1;\n      var total_AUC = AUC_above + rectified_below;\n      \n      var area_sum = 0;\n      for (var i=0;i<area.length;i++){\n      \tarea_sum += area[i];\n      }\n      \n  \tif( CorrectSide == \"Left\"){\n  \tarea_sum = area_sum * -1;}\n  \t\n      $(\"#AUC_array_textarea\").val(area);\n      $(\"#AUC_diff\").val(area_sum);\n      $(\"#AUC\").val(total_AUC);\n      $(\"#AUC_above_val\").val(AUC_above);\n      $(\"#AUC_below_val\").val(AUC_below);\n      \n      $(\"#Max_dev\").val(Max_dev);\n      \n  /* store data for final processing */\n      \n  \ttrial_data = {},\n  \n      parent.uber_data.x_arrays.push(every_x_array);\n      trial_data.x_arrays = [every_x_array];\n      \n      if( CorrectSide == \"Left\"){\n          var y_array = y_diff.map(function(x){ return x*-1 });\n          parent.uber_data.y_arrays.push(y_array);\n          trial_data.y_arrays  =[y_array];\n      } else {\n          parent.uber_data.y_arrays.push(y_diff);\n          trial_data.y_arrays  = [y_diff];\n      }\n      \n    parent.uber_data.mean_y.push(y_avg);\n  \tparent.uber_data.std_y.push(y_stdev);\n  \tparent.uber_data.max_dev.push(Max_dev);\n  \tparent.uber_data.RT.push(ReactionTime);\n  \tparent.uber_data.AUC_total.push(total_AUC);\n  \tparent.uber_data.AUC_diff.push(area_sum);\n  \tparent.uber_data.AUC_above.push(AUC_above);\n  \tparent.uber_data.AUC_below.push(AUC_below);\n  \tparent.uber_data.x_flips.push(x_flips);\n  \tparent.uber_data.y_flips.push(y_flips);\n  \tparent.uber_data.condition.push(this_condition);\n    parent.uber_data.timestamps.push(every_timestamp_array);  \n  \tparent.uber_data.traj_length.push(Traj_length_val);\n  \tconsole.dir(parent.uber_data);\n  \tparent.uber_data.shuffle_type.push(shuffle_type);\n  \n  \t// save trial by trial\n  \ttrial_data.mean_y=[y_avg];\n  \ttrial_data.std_y=[y_stdev];\n  \ttrial_data.max_dev=[Max_dev];\n  \ttrial_data.RT=[ReactionTime];\n  \ttrial_data.AUC_total=[total_AUC];\n  \ttrial_data.AUC_diff=[area_sum];\n  \ttrial_data.AUC_above=[AUC_above];\n  \ttrial_data.AUC_below=[AUC_below];\n  \ttrial_data.x_flips=[x_flips];\n  \ttrial_data.y_flips=[y_flips];\n  \ttrial_data.condition=[this_condition];\n    trial_data.timestamps=[every_timestamp_array];  \n  \ttrial_data.traj_length=[Traj_length_val];\n  \ttrial_data.shuffle_type=[shuffle_type];\n  \t\n  \t\n  \tif(typeof(parent.User_Data) == \"undefined\" | parent.User_Data.Username == \"Admin:Simulator\"){\n      var this_username = \"simulator\";\n      var experiment_name = \"simulator_blah\";\n    } else {\n      var this_username   = parent.User_Data.Username;\n      var experiment_name = parent.User_Data.Exp_Name;\n    }\n      \n    // need to add experiment name\n    var trial_no = parent.Collector_Experiment.data.globals.position;\n    //var trial_no = parent.uber_data.mean_y.length; //arbitrary which variable from parent.uber_data is used\n    \n    Trial.submit();\n    //ajax_json_read_write(experiment_name+\"_\"+this_username+\"_\"+\"TrialNo_\"+trial_no+\".json\",JSON.stringify(trial_data),\"Write\",\"json\");\n  }\n}\n\nfunction response_window() {\n\tif (TimeLimit_stopper == 0){\n\t\t$(\"#too_slow_feedback\").show();\n\t\tTracker_stopper = 1;\n\t\t$(\"#too_slow_feedback\").delay(3000).hide(0);\n\t\t$(\"#too_slow_button\").show();\n\t\t$(\"#trial_accuracy\").val(0);\n\t\t$(\"#resp_left\").hide();\n\t\t$(\"#resp_right\").hide();\n\t\tSlow_state = 1;\n\t\tActualResponseVal = 0;\n\t\t$(\"#ActualResponseId\").val(ActualResponseVal);\n\t\tvar message = \"Too slow!\";\n\t\tparticipant_error(message,\"slow_click\");\n\t}\n}\n\n\n/*\n* Actions by id\n*/\n$(\"#background\").on('load', function() {\n  if(background_and_video_loaded == 1){\n    background_and_video_loaded = 2;\n    $(\"#loading_vid\").hide();\n    $(\"#background\").show();\n\n    if(response_area.complete == 0){\n      $(\"#response_area\").on(\"load\",function(){\n        $(\".start_video\").show();\n      })\n    } else {\n      $(\".start_video\").show();\n    }\n  } else {\n    background_and_video_loaded = 1;\n  }\n}).on('error', function() { \n  console.log(\"error loading image\"); \n});\n$('#resp_left').on('click', function(){\n  ActualResponseVal = 1;\n  TimeLimit_stopper = 1;\n  Tracker_stopper = 1;\n  $(\"#resp_left\").hide();\n  $(\"#resp_right\").hide();\n  $(\"#ActualResponseId\").val(ActualResponseVal);\n    \n\tif (CorrectSide == \"Left\") {\n\t  $(\"#trial_accuracy\").val(1);\n    $(\"#correct_button\").show();\n  } else if (CorrectSide == \"Right\") {\n    $(\"#trial_accuracy\").val(0);\n    $(\"#error_button\").show();\n    $(\"#error_feedback\").show(0);\n    $(\"#error_feedback\").delay(3000).hide(0);\n    participant_error(\"Incorrect response. Please click on the box with the ball in it.\",\n                      \"incorrect_response\");\n\t}\n});\n  \n$('#resp_right').on('click', function(){\n\tActualResponseVal = 2;\n  TimeLimit_stopper = 1;\n  Tracker_stopper = 1;\n  $(\"#resp_left\").hide();\n  $(\"#resp_right\").hide();\n  $(\"#ActualResponseId\").val(ActualResponseVal);    \n\t\n\tif (CorrectSide == \"Left\") {\n    $(\"#trial_accuracy\").val(0);\n    $(\"#error_button\").show();\n    $(\"#error_feedback\").show(0);\n    $(\"#error_feedback\").delay(3000).hide(0);\n    participant_error(\"Incorrect response. Please click on the box with the ball in it.\",\n                      \"incorrect_response\");\n\t}\telse if (CorrectSide == \"Right\") {\n    $(\"#trial_accuracy\").val(1);\n    $(\"#correct_button\").show();\n\t}\n});\n\n/*\n* Actions by class\n*/\n$(\".process_trial\").on(\"click\",function(){\n  $(\"#trial_content_div\").hide();\n  if(skip_processing_view.toLowerCase() == \"no\"){\n    $(\"#processing_div\").hide();\n\t}\n  process_trial_function();\n});\n</script>\n\n<!-- \n  /*\n  * Analysis \n  */\n-->\n<div id=\"processing_div\">\n  <input id=\"submit\" type=\"submit\" value=\"Finish trial\" readonly>\n  <table>\n    <tr>\n      <td>\n        <div id=\"canvas\"></div>\n      </td>\n      <td>\n        <div id=\"rotated_canvas\"></div>\n      </td>\n    </tr>\n  </table>\n  <input type=\"button\" value=\"Create picture\" id=\"create_picture\" onclick=\"draw_picture()\">\n  <div id=\"data_table\">\n    <table width = \"1100\">\n      <tr>\n        <td><p>Mean Y distance </p></td>\n        <td><input type=\"text\" name=\"y_average_dist\" id=\"y_average_dist\" readonly></td>\n        <td><p>SD for Y distance</p> </td>\n        <td><input type=\"text\" name=\"y_stdev_dist\" id=\"y_stdev_dist\" readonly> </td>\n      </tr>\n\n      <tr>\n        <td><p>Maximum deviation</p></td>\n        <td><input type=\"text\" name=\"Max_dev\" id=\"Max_dev\" readonly></td>\n        <td><p>RT</p></td>\n        <td><input type=\"text\" name=\"RT\" id=\"RT\" readonly></td>\n      </tr>\n      \n      <tr>\n      <td><p>AUC above hor line in pixels</p></td>\n        <td><input type=\"text\" name=\"AUC_above\" id=\"AUC_above_val\" readonly></td>\n      <td><p>AUC below hor line in pixels</p></td>\n        <td><input type=\"text\" name=\"AUC_below\" id=\"AUC_below_val\" readonly></td>\n      </tr>\n      \n      <tr>\n      <td><p>AUC (Above-Below)</p></td>\n        <td><input type=\"text\" name=\"AUC_diff\" id=\"AUC_diff\" readonly></td>\n      <td><p>Overall AUC in pixels</p></td>\n        <td><input type=\"text\" name=\"AUC\" id=\"AUC\" readonly></td>\n      </tr>\n      \n      <tr>\n        <td><p>Raw timestamp array</p></td>\n        <td><textarea name=\"timestamp_textarea\" id=\"timestamp_textarea\" readonly></textarea></td>\n        <td><p>Full timestamp array</p></td>\n        <td><textarea name=\"every_timestamp_textarea\" id=\"every_timestamp_textarea\" readonly></textarea></td>\n      </tr>\n\n      <tr>\n        <td><p>X-flips</p></td>\n        <td><input type=\"text\" name=\"X_flips\" id=\"X_flips\" readonly></td>\n        <td><p>Y-flips</p></td>\n        <td><input type=\"text\" name=\"Y_flips\" id=\"Y_flips\" readonly></td>\n      </tr>\n\n      <tr>\n        <td><p>X values</p></td>\n        <td><textarea name=\"x_val_array\" id=\"x_val_array_textarea\" readonly></textarea></td>\n        <td><p>Y values</p></td>\n        <td><textarea name=\"y_diff_array\" id=\"y_diff_array_textarea\" readonly></textarea></td>\n      </tr>\n\n      <tr>\n        <td><p>X values (1-)</p></td>\n        <td><textarea name=\"x1_val_array\" id=\"x1_val_array_textarea\" readonly></textarea></td>\n        <td><p>AUC array</p></td>\n        <td><textarea name=\"AUC_array\" id=\"AUC_array_textarea\" readonly></textarea></td>\n      </tr>\n      \n      <tr>\n        <td><p>Hypotenuse array</p></td>\n        <td><textarea name=\"d_length_array\" id=\"d_length_array_textarea\" readonly></textarea></td>\n        <td><p>Trajectory length</p></td>\n        <td><input type=\"text\" name=\"Traj_length\" id=\"Traj_length\" readonly></td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<script>\n\nfunction draw_picture(){\n  for(i=0;i<(parent.y_array.length-1);i++){    \n    canvas.appendChild(createLine(parent.x_array[i], \n                                  parent.y_array[i], \n                                  parent.x_array[i+1], \n                                  parent.y_array[i+1],\n                                  \"red\"));\n  }\n  for(i=0;i<(parent.y_array.length-1);i++){    \n    rotated_canvas.appendChild(createLine(rotated_x[i], \n                                          rotated_y[i],\n                                          rotated_x[i+1],\n                                          rotated_y[i+1],\n                                          \"blue\"));\n  }\n  for(i=0;i<(every_x_array.length-1);i++){    \n    rotated_canvas.appendChild(createLine(every_x_array[i], \n                                          every_y_array[i], \n                                          every_x_array[i+1], \n                                          every_y_array[i+1],\n                                          \"yellow\"));\n  }\n}\n\n\n/* Rotation setup */\n\nfunction rotate(cx, cy, x, y, angle) { // from theftprevention on http://stackoverflow.com/questions/17410809/how-to-calculate-rotation-in-2d-in-javascript\n    var radians = (Math.PI / 180) * angle,\n        cos = Math.cos(radians),\n        sin = Math.sin(radians),\n        nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\n        ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n    return [nx, ny];\n}\n\n/* Calculate general line characteristics */\n\nfunction calculate_mean(input_array){\n  var sum = 0;\n  array_length = input_array.filter(Number).length;\n  \n  for( var i = 0; i < input_array.length; i++ ){\n    if(!isNaN(parseInt(input_array[i]))){\n      sum += parseInt( input_array[i], 10 ); //don't forget to add the base\n    }\n  }\n  return sum/array_length;\n}\n\nfunction calculate_sd(input_array){\n  var sd = 0;\n  array_length = input_array.filter(Number).length;\n      \n  for( var i = 0; i < input_array.length; i++ ){\n    if(!isNaN(parseInt(input_array[i]))){\n      sd += Math.pow((Math.abs(parseInt( input_array[i], 10 ) - calculate_mean(input_array))),2); //don't forget to add the base\n    }\n  }\n  return Math.sqrt(sd/(array_length-1));\n}\n\n\nfunction createLineElement(x, y, length, angle, this_colour) {\n    var line = document.createElement(\"div\");\n    var styles = 'border: 1px solid '+ this_colour +'; '\n               + 'width: ' + length + 'px; '\n               + 'height: 0px; '\n               + '-moz-transform: rotate(' + angle + 'rad); '\n               + '-webkit-transform: rotate(' + angle + 'rad); '\n               + '-o-transform: rotate(' + angle + 'rad); '  \n               + '-ms-transform: rotate(' + angle + 'rad); '  \n               + 'position: absolute; '\n               + 'top: ' + y + 'px; '\n               + 'left: ' + x + 'px; ';\n    line.setAttribute('style', styles);  \n    return line;\n}\n\nfunction createLine(x1, y1, x2, y2, this_color) {\n    var a = x1 - x2,\n        b = y1 - y2,\n        c = Math.sqrt(a * a + b * b);\n\n    var sx = (x1 + x2) / 2,\n        sy = (y1 + y2) / 2;\n\n    var x = sx - c / 2,\n        y = sy;\n\n    var alpha = Math.PI - Math.atan2(-b, a);\n    //var this_color = \"blue\";\n\n    return createLineElement(x, y, c, alpha, this_color);\n}\n\n\nif(typeof(parent.uber_data) == \"undefined\"){\n    //create it\n    parent.uber_data = {\n        accuracy : [],\n        mean_y: [],\n\t\tstd_y: [],\n        max_dev: [],\n\t\tRT: [],\n\t\tAUC_total: [],\n\t\tAUC_diff: [],\n\t\tAUC_above: [],\n\t\tAUC_below: [],\n\t\tx_flips: [],\n\t\ty_flips: [],\n\t\tx_arrays: [],\n        y_arrays: [],\n\t\ttimestamps: [],\n\t\ttraj_length: [],\n        condition: [],\n        shuffle_type: [],\n    }\n}\n\n\n\n/* Create raw trajectory */\n\n\n/* --- Trajectory and data processing per trial --- */\n\n\n</script>"}, "python_procs": {"procedure_1.csv": "item,trial type,max time,text,Shuffle 1,\r\n2 to 37,mousetracker,user,This is the start of a new experiment.,off,\r\n,,,,,"}, "python_conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,random,,,5,\r\n,,,,,,,,,,", "python_stims": {"stimuli_1.csv": "movie,correctid,incorrectid,pic_now,pic_target,pic_default,face_side,init_ball,movement,end_ball,target_loc,belief_participant,belief_agent,condition,faceid,skip_line_display,phase,cue,background,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Left,TRUE,TRUE,TT,F1,Yes,Prac,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Left,TRUE,FALSE,TF,F1,Yes,Prac,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Left,FALSE,FALSE,FF,F1,Yes,Prac,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Left,FALSE,TRUE,FT,F1,Yes,Prac,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Left,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Left,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Right,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Right,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Right,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Right,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Left,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Left,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Right,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Right,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Left,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Left,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Left,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1RStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Left,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Right,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Right,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Left,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Left,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Right,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Right,TRUE,TRUE,TT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Right,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Right,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LSwitch.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Left,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Left,TRUE,FALSE,TF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Right,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Stay,Left,Right,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Left,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Stay,Right,Left,FALSE,FALSE,FF,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Left,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Left,Right,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1LeftTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Left,Switch,Right,Left,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Right,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n../User/Stimuli/mt_exemplar/F1LStay.mp4,Right,Left,../User/Stimuli/mt_exemplar/F1Now.jpg,../User/Stimuli/mt_exemplar/F1RightTarget.jpg,../User/Stimuli/mt_exemplar/F1Blocks.jpg,Left,Right,Switch,Left,Right,FALSE,TRUE,FT,F1,Yes,Main,,../User/Stimuli/mt_exemplar/Freeman_Background.png,\r\n,,,,,,,,,,,,,,,,,,,", "mousetracker.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "stimuli_1.csv", "procedure": "procedure_1.csv", "fullscreen": "off", "welcome": "", "participant_id": "random", "end_message": "", "start_message": "", "buffer": "5", "": ""}]}}, "incomp_process": false, "pipe_position": 0, "pipe_direction": "", "versions": [], "exp_condition": "condition_1"}, "surveys": {"preview": true, "user_surveys": {}, "default_surveys": {}}, "trialtypes": {"default_trialtypes": {"text": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019-20) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n{{text}}", "survey": "<!--\r\n  Author: Dr. Anthony Haffey\r\n\r\n  Collector: Cat/Kitten release\r\n  A program for running experiments on the web\r\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\r\n\r\n\r\n  This program is free software: you can redistribute it and/or modify\r\n  it under the terms of the GNU General Public License version 3 as published by\r\n  the Free Software Foundation.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n\r\n  Kitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\r\n-->\r\n<style>\r\nbody{\r\n  background-color:#5F9EA0;\r\n  width:100%;\r\n  height:100%;\r\n}\r\ntd{\r\n  padding:10px;\r\n  vertical-align: top;\r\n}\r\n\r\n/*\r\n*\telements by id\r\n*/\r\n\r\n#content{\r\n  width:95%;\r\n}\r\n#proceed_button{\r\n  display:none;\r\n  float:right;\r\n}\r\n#this_survey_id{\r\n  padding:            20px;\r\n  display:            none;\r\n}\r\n#survey_outline{\r\n\tposition: \t\t\t\t\tfixed;\r\n  top: \t\t\t\t\t\t\t\t50%;\r\n  left: \t\t\t\t\t\t\t50%;\r\n\theight: \t\t\t\t\t\t90%;\r\n\toverflow: \t\t\t\t\tauto;\r\n\t-webkit-transform: \ttranslate(-50%, -50%);\r\n  transform: \t\t\t\t\ttranslate(-50%, -50%);\r\n  background-color: \twhite;\r\n\tmin-width:        \t900px;\r\n\tmax-width:        \t9000px;\r\n\tborder-radius:    \t20px;\r\n  border-color:     \t#069; \r\n  border-style:     \tsolid;\r\n  border-width:     \t5px;\r\n\tpadding:            10px;\r\n}\r\n#survey_tabs{\r\n  padding:            20px;\r\n}\r\n\r\n\r\n/*\r\n*\telements by class\r\n*/\r\n.feedback_span_multiple{\r\n  display: none;\r\n  margin:  10px;\r\n}\r\n.feedback_span_single{\r\n  display: none;\r\n  padding: 10px;\r\n}\r\n.likert_table td{\r\n  padding:    1px;\r\n  text-align: center;\r\n}\r\n.likert_table td:hover{\r\n  color: blue;\r\n}\r\n.score_total{\r\n  display: none;\r\n}\r\n.show_tab{\r\n  margin: 5px;\r\n}\r\n.survey_btn{\r\n\twhite-space: normal;\r\n\tword-wrap: \t initial;\r\n}\r\n.table_break{\r\n\twidth:    100%;\r\n\theight:   300px;\r\n\toverflow: auto;\t\r\n}\r\n\r\n\r\n/*\r\n* by Bora Alp Arat at https://stackoverflow.com/questions/21684101/css-vertical-scrollbar-padding-left-right-in-ul-possible\r\n*/\r\n::-webkit-scrollbar {\r\n  width: 14px;\r\n  height: 18px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  height: 6px;\r\n  border: 4px solid rgba(0, 0, 0, 0);\r\n  background-clip: padding-box;\r\n\t-webkit-border-radius: 7px;\r\n  background-color: rgba(0, 102, 153, 0.5); \r\n  -webkit-box-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05), inset 1px 1px 0px rgba(0, 0, 0, 0.05);\r\n}\r\n::-webkit-scrollbar-button {\r\n  width: 0;\r\n  height: 0;\r\n  display: none;\r\n}\r\n::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n<div id=\"everything\">\r\n\t<div id=\"survey_outline\"></div>\r\n</div>\r\n<script>\r\n/////////////////////////\r\n// Retrieving settings //\r\n/////////////////////////\r\n\r\nif(typeof(settings) !== \"undefined\"){\r\n  settings = [settings];\r\n} else {\r\n  settings = {};\r\n}\r\n\r\n//////////////////////////////////\r\n// vertical vs. horizontal tabs //\r\n//////////////////////////////////\r\n\r\nif(typeof(settings.tab_hor_vert) == \"undefined\" || settings.tab_hor_vert.toLowerCase() == \"horizontal\"){\r\n  settings.tab_hor_vert = \"horizontal\";\r\n  $(\"#survey_outline\").html(  '<div id=\"please_wait_div\">Loading... Please wait</div>'+\r\n                              '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>'+\r\n                              '<div id=\"survey_tabs\" style=\"text-align:right\" class=\"border-top border-primary\"></div><input type=\"submit\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">');\r\n\r\n} else if (settings.tab_hor_vert.toLowerCase() == \"vertical\"){\r\n  $(\"#survey_outline\").html( '<table>'+\r\n                                '<tr>'+\r\n                                  '<td valign=\"top\" class=\"border-right border-primary\">'+\r\n                                    '<div id=\"survey_tabs\"></div></td>' +\r\n                                  '<td>'+\r\n                                    '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n                                    '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>' +\r\n                                    '<input type=\"button\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">'+\r\n                                  '</td>'+\r\n                                '</tr>'+\r\n                              '</table>');\r\n} else if(settings.tab_hor_vert.toLowerCase() == \"none\"){\r\n  $(\"#survey_outline\").html(  '<div id=\"survey_tabs\" style=\"display:none\"></div>' +\r\n                              '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n                              '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>');\r\n} else {\r\n  bootbox.alert(\"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\");\r\n}\r\n</script>\r\n\r\n<span id=\"scales_span\"></span>\r\n\r\n<script>\r\n\r\n//////////////////////\r\n// Defining objects //\r\n//////////////////////\r\n\r\npage_break_management = {\r\n  breaks_remaining : 0,\r\n  breaks_index     : 0\r\n}\r\n\r\nproceed_object = {\r\n  type:[],\r\n  name:[],\r\n  break_no:[]\r\n};\r\n\r\nscoring_object={\r\n  scales:[],\r\n  scale_scores:[],\r\n  update_scales:function(this_survey){\r\n    headers = Object.keys(this_survey[0]);\r\n    this.scales = headers.filter(elm => elm.includes(\"score:\"));\r\n    var scales_html = '';\r\n    this.scales.forEach(function(element){\r\n      element = element.replace(\": \",\":\");\r\n      scales_html += \"<input name='\"+element.replace(/ |:/g,\"_\")+\"' class='score_total \"+element.replace(/ |:/g,\"_\")+\"' disabled>\";\r\n    });\r\n    $(\"#scales_span\").html(scales_html);\r\n  }\r\n}\r\n\r\nsurvey_obj = {};\r\n\r\n\r\n/////////////////////\r\n// Element actions //\r\n/////////////////////\r\n\r\n/*\r\n$(function() {\r\n  $( \".datepicker\" ).datepicker({\r\n    dateFormat : 'mm/dd/yy',\r\n    changeMonth : true,\r\n    changeYear : true,\r\n    yearRange: '-100y:c+nn',\r\n    maxDate: '-1d'\r\n  });\r\n});\r\n*/\r\n\r\n\r\n$('#ExperimentContainer').css('transform','scale(1,1)');\r\n\r\n$(\"#proceed_button\").on(\"click\",function(){\r\n  var proceed = true;\r\n  var tabs    = document.getElementsByClassName('show_tab active');\r\n  if(tabs.length > 0){\r\n    var current_tab       = document.getElementsByClassName('show_tab active')[0].id.replace(\"_button\",\"\").replace(\"tab_\",\"\");\r\n    var response_elements = $('#table_'+current_tab).find('.response_element');\r\n\r\n  } else {\r\n    response_elements = $(\".table_break:visible\").find(\".response_element\");\r\n    //response_elements     = $('.response_element');\r\n  }\r\n\r\n  for(var i = 0; i < response_elements.length; i++){\r\n    [this_row_no,item_name] = retrieve_row_no_item_name(response_elements[i]);\r\n    var this_optional = survey_obj.data[this_row_no].optional.toLowerCase();\r\n\r\n    if(this_optional.indexOf(\"no\") !== -1){\r\n      this_optional = this_optional.split(\"-\");       // find out whether there's a minimal number of responses\r\n      if(this_optional.length == 1){                  // default is that length needs to be at least 1\r\n        var min_resp_length = 1;\r\n      } else if(this_optional.length == 2) {\r\n        var min_resp_length = this_optional[1];\r\n      } else {\r\n        bootbox.alert(\"Error - you appear to have too many '-' characters in the 'optional' column\");\r\n        return false;\r\n      }\r\n    } else {\r\n      min_resp_length = 0;\r\n    }\r\n\r\n    var quest_resp = isJSON($(\"#\"+response_elements[i].id).val());\r\n    if (quest_resp.length < min_resp_length){\r\n      proceed = false;\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-success\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-danger\");\r\n    } else {\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-danger\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-success\");\r\n    }\r\n  }\r\n\r\n  if(current_tab == survey_obj.tabs && proceed){\r\n    if(typeof(sql_surveys) == \"undefined\"){\r\n      //$(\".table_break\");\r\n      var next_table_no = parseFloat($(\".table_break:visible\")[0].id.replace(\"table\",\"\")) + 1;\r\n      \r\n      if($(\".table_break#table\"+next_table_no).length == 0){\r\n        if(typeof(Trial) !== \"undefined\"){\r\n          Trial.submit();\r\n        } else {\r\n          bootbox.alert(\"You've finished! Click on the preview button to restart.\")\r\n        }\r\n      } else {\r\n        $(\".table_break\").hide();\r\n        $(\".table_break#table\" + next_table_no).show();\r\n      }\r\n    } else {\r\n      $(\"#survey_outline\").html(\"<h1> You have finished the preview of this survey.</h1>\");\r\n    }\r\n  } else if(current_tab < survey_obj.tabs && proceed) {\r\n    current_tab ++;\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"btn-secondary\");\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"disabled\");\r\n    $(\"#tab_\"+current_tab+\"_button\").addClass(\"btn-outline-dark\");\r\n    $(\"#tab_\"+current_tab+\"_button\").click();\r\n  } else if(proceed == false){\r\n    bootbox.alert(\"You have failed to complete at least one compulsory input.\");\r\n  } else if(current_tab > survey_obj.tabs){\r\n    bootbox.alert(\"Error - please contact the Collector team about this problem, error 'Survey_001'.\");\r\n  }\r\n});\r\n\r\n\r\n///////////////\r\n// Functions //\r\n///////////////\r\n\r\n\r\nfunction load_survey(survey){\r\n  // are we in preview?\r\n  /////////////////////\r\n  if(typeof(parent.master_json) !== \"undefined\" && parent.master_json.surveys.preview){     // Yes\r\n    survey_content = survey;                                                    // i.e. the content has been passed through directly\r\n    survey_obj.mods = parent.master_json.mods;                                //no need to be efficient in preview\r\n\r\n  } else {                                                                      // No\r\n    survey = survey.toLowerCase().replace(\".csv\",\"\") + \".csv\";\r\n\r\n    if(typeof(parent.parent.exp_json.surveys) !== \"undefined\" && \r\n       typeof(parent.parent.exp_json.surveys[survey]) !== \"undefined\"){\r\n      survey_content = parent.parent.exp_json.surveys[survey];\r\n      survey_obj.mods = parent.parent.exp_json.mods;                     //take mods from exp_json\r\n\r\n    } else if(typeof(parent.parent.exp_json.surveys) !== \"undefined\" && \r\n\t\t\t\t\t\t\ttypeof(parent.parent.exp_json.surveys[survey.replace(\".csv\",\"\")])){\r\n\t\t\tsurvey_content = parent.parent.exp_json.surveys[survey.replace(\".csv\",\"\")];\r\n      survey_obj.mods = parent.parent.exp_json.mods;                     //take mods from exp_json\r\n\t\t}\telse {\r\n      bootbox.alert(\"Survey \" + survey  + \" doesn't appear to exist\");\r\n    }\r\n  }\r\n  process_returned_questionnaire(survey_content);\r\n}\r\n\r\nfunction generate_feedback_string(feedback_array,this_index,feedback_color,row_no,this_row){\r\n  if(feedback_array){                 //i.e. if it's not null\r\n    if(feedback_array.length > 1){\r\n      return \"<div class='feedback_span_multiple \"+this_row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\r\n    } else {\r\n      return \"<div class='feedback_span_single \"+this_row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction isJSON(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n\r\n\r\nfunction likert_update(this_element,this_response,this_value){\r\n  [row_no,item_name] = retrieve_row_no_item_name(this_element);\r\n  $(\".row_\"+row_no).removeClass(\"active\");\r\n  $(\".row_\"+row_no).removeClass(\"btn-primary\");\r\n  $(\".row_\"+row_no).addClass(\"btn-outline-primary\");\r\n  $(this_element).removeClass(\"btn-outline-primary\");\r\n  $(this_element).addClass(\"btn-primary\");\r\n  $(\"#survey_\"+item_name+\"_response\").val(this_response);\r\n  response_check(this_element);\r\n}\r\n\t\r\n\r\nfunction process_item_score(survey_obj,row_no,values_col,this_response,item,values_reverse){\r\n  item_values       = survey_obj.data[row_no][values_col].split(\"|\");\r\n  if(typeof(values_reverse) !== \"undefined\" && values_reverse == \"r\"){\r\n    item_values.reverse();\r\n  }\r\n  item_answers      = survey_obj.data[row_no][\"answers\"].split(\"|\");\r\n  var this_value    = item_values[item_answers.indexOf(this_response)];\r\n  $(\"#survey_\" + item + \"_score\").val(this_value);\r\n  if(typeof(this_value) !== \"undefined\"){\r\n    return parseFloat(this_value);\r\n  }\r\n}\r\n\r\nfunction process_returned_questionnaire(data){\r\n  survey_obj.data = data;\r\n  survey_obj.data = Papa.parse(Papa.unparse(survey_obj.data),{\r\n                      header:true,\r\n                      beforeFirstChunk: function(chunk) {\r\n                        var rows = chunk.split( /\\r\\n|\\r|\\n/ );\r\n                        var headings = rows[0].toLowerCase();\r\n                        rows[0] = headings;\r\n                        return rows.join(\"\\r\\n\");\r\n                      },\r\n                    }).data;\r\n\r\n  var col_headers = Object.keys(survey_obj.data[0]);\r\n  survey_obj.scales = {};\r\n\r\n  col_headers.forEach(function(header){\r\n    if(header.indexOf(\"score:\")==0){\r\n      var original_header = header;\r\n      header = header.replace(\"score: \",\"\");\r\n      header = header.replace(\"score:\",\"\");\r\n\r\n      survey_obj.scales[header] = {};\r\n      survey_obj.scales[header].questions = {};\r\n\r\n      //identify which questions\r\n      for(var i = 1; i< survey_obj.data.length; i++){\r\n        row = survey_obj.data[i];\r\n        if(row[original_header] !== \"\" && typeof(row[original_header]) !== \"undefined\"){\r\n          survey_obj.scales[header].questions[i] = row[original_header];\r\n        }\r\n      }\r\n    }\r\n  });\r\n  write_survey(survey_obj.data,\"this_survey_id\");\r\n  $(\"#please_wait_div\").hide();\r\n  $(\"#proceed_button\").show();\r\n\r\n  $('html, body').animate({\r\n    scrollTop: $(\"#survey_outline\").offset().top\r\n  }, 1000);\r\n}\r\n\r\nfunction process_survey_question(this_row,row_no){\r\n\r\n  if(this_row.values == \"\"){\r\n    this_row.values = this_row.answers;\r\n  }\r\n\r\n  if(typeof(this_row[\"text\"]) !== \"undefined\" && \r\n\t\t typeof(this_row[\"type\"]) !== \"undefined\" && \r\n\t\t this_row['text'].toLowerCase() == \"page_break\" | \r\n\t\t this_row['type'].toLowerCase() == \"page_break\"){\r\n        page_break_management.breaks_remaining++;\r\n        question_td = \"</tr></table><table id='table\" + page_break_management.breaks_remaining + \"' style='display:none' class='table_break'></tr>\";\r\n  } else {\r\n\r\n    if(typeof(this_row[\"values\"]) !== \"undefined\" & typeof(this_row[\"values\"]) !== \"function\"){ //to address microsoft edge issue.\r\n      value_array = this_row[\"values\"].split(\"|\");\r\n    } else {\r\n      value_array='';\r\n    }\r\n\r\n    if(this_row[\"item_name\"].indexOf(\" \") !== -1){\r\n      bootbox.alert(\"Please note that the 'item name' '\" + this_row['item_name'] + \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\");\r\n    }\r\n\r\n    // class for scoring\r\n    this_class = \"\";\r\n    for(var i=0;i<scoring_object.scales.length;i++){\r\n      if(this_row[scoring_object.scales[i].toLowerCase()]==\"1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(/ |-/,\"\")+\" \";\r\n      }\r\n      if(this_row[scoring_object.scales[i].toLowerCase()]==\"r1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(\" \",\"_\")+\"-r1 \";\r\n      }\r\n    }\r\n\r\n    [feedback_array,feedback_color] = retrieve_feedback(this_row);\r\n\r\n    response_html = '<input type=\"hidden\" class=\"response_element row_'+row_no+'\" id=\"survey_'+this_row[\"item_name\"].toLowerCase()+'_response\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'_response\"  value=\"\">';\r\n\r\n\r\n    // Survey settings\r\n    ////////////////////\r\n\t\t\r\n    [row_ques_perc,row_resp_perc] = quest_resp_perc(this_row[\"question_width\"]);\r\n\r\n    if(typeof(settings.feedback_before_response) == \"undefined\"){\r\n        settings.feedback_before_response = true;\r\n    }\r\n\r\n    if(typeof(settings.lock_after_feedback) == \"undefined\"){\r\n        settings.lock_after_feedback = false;\r\n    }\r\n    var question_td='';\r\n\r\n    if(typeof(this_row[\"type\"]) == \"undefined\"){\r\n        return false;\r\n    }\r\n\r\n    // Item types\r\n    ///////////////\r\n\r\n    if(typeof(survey_obj.mods) !== \"undefined\" && \r\n\t\t\t typeof(survey_obj.mods[this_row.type]) !== \"undefined\"){\r\n\r\n      var mod_html = survey_obj.mods[this_row.type].contents;\r\n      \r\n      //for each row variable, insert it into the mod if possible?\r\n      Object.keys(this_row).forEach(function(attribute){\r\n        mod_html = mod_html.replaceAll(\"{{\"+attribute+\"}}\",this_row[attribute]);\r\n      });\r\n      question_td += mod_html;\r\n    } else {\r\n\r\n      switch(this_row[\"type\"].toLowerCase()){\r\n        case \"page_start\":\r\n          var tabs_html = $(\"#survey_tabs\").html();\r\n          if(settings.tab_hor_vert == \"horizontal\"){\r\n            span_div = \"span\";\r\n          } else if(settings.tab_hor_vert == \"vertical\"){\r\n            span_div = \"div\";\r\n          }\r\n          if(typeof(survey_obj.tabs) == \"undefined\"){\r\n            survey_obj.tabs = 0;\r\n          } else {\r\n            survey_obj.tabs++;\r\n          }\r\n          if(survey_obj.tabs == 0){ //i.e. is the first tab\r\n            active_button = \"btn-outline-primary active\";\r\n          } else {\r\n            active_button = \"btn-secondary disabled\";\r\n          }\r\n          if(settings.tab_hor_vert == \"vertical\"){\r\n            var vert_btn_block = \"btn-block\";\r\n          } else {\r\n            var vert_btn_block = \"\";\r\n          }\r\n\r\n          tabs_html +=  '<'+span_div+' class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\r\n            '<label id=\"tab_' + survey_obj.tabs + '_button\" class=\"btn show_tab '+active_button+' '+vert_btn_block+'\">'+\r\n              '<input type=\"checkbox\" checked autocomplete=\"off\">'+ this_row['text'] +\r\n            '</label>'+\r\n          '</'+span_div+'>';\r\n\r\n          $(\"#survey_tabs\").html(tabs_html);\r\n\r\n          page_break_indexes = [];\r\n          survey_obj.data.forEach(function(this_row,this_index){\r\n            if(typeof(this_row.type) !== \"undefined\" && this_row.type.toLowerCase() == \"page_start\"){\r\n              page_break_indexes.push(this_index);\r\n            }\r\n          });\r\n\r\n          if(survey_obj.tabs > 0){\r\n            question_td += \"</td><td></td></tr></table></div><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' style='display:none'><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\r\n          } else {\r\n            question_td += \"</td><td></td></tr></table><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' ><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\r\n          }\r\n        break;\r\n\r\n        case \"checkbox\":\r\n        case \"checkbox_vertical\":\r\n          var options = this_row[\"answers\"].split(\"|\");\r\n          question_td +=  response_html;\r\n          for(var i=0; i<options.length;i++){\r\n            feedback_string = generate_feedback_string(feedback_array,i,feedback_color,row_no,this_row);\r\n            question_td +=  '<div class=\"custom-control custom-checkbox\">'+\r\n                '<input type=\"checkbox\" class=\"custom-control-input '+this_class+' custom-control custom-checkbox '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\r\n                '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\r\n                feedback_string +\r\n            '</div>';\r\n          }\r\n          break;\r\n\r\n          case \"checkbox_horizontal\":\r\n            feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n            var options = this_row[\"answers\"].split(\"|\");\r\n            question_td += response_html;\r\n            question_td += '<table><tr>';\r\n            for(var i=0; i<options.length;i++){\r\n              question_td +=  '<td>'+\r\n                                '<div class=\"custom-control custom-checkbox\">'+\r\n                                  '<input type=\"checkbox\" class=\"custom-control-input '+this_class+' custom-control custom-checkbox '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\r\n                                    '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\r\n                                '</div>'+\r\n                              '</td>';\r\n            }\r\n            question_td += '</tr></table>'+feedback_string;\r\n          break;\r\n\r\n          case \"checkbox_single\":\r\n            feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n            var this_option = this_row[\"answers\"];\r\n            question_td +=  response_html +\r\n                            '<div class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\r\n                                '<label class=\"btn btn-outline-primary\">'+\r\n                                    '<input type=\"checkbox\" class=\"'+this_row[\"item_name\"]+'_item row_'+row_no+'\"  checked autocomplete=\"off\" id=\"'+this_row[\"item_name\"]+'\" onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+ this_option +\r\n                                '</label>'+\r\n                            '</div>' + feedback_string;\r\n          break;\r\n\r\n          case \"date\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              question_td+=   response_html+\r\n                              \"<input onchange='response_check(this)' class='custom-control datepicker date \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\"+\r\n                              feedback_string;\r\n          break;\r\n\r\n          case \"dropdown\":\r\n\t\t\t\t\tcase \"select\":\r\n              feedback_string = generate_feedback_string(feedback_array,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t feedback_color,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t row_no,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t this_row);\r\n              var options = this_row[\"answers\"].split(\"|\");\r\n              question_td += response_html +\r\n\t\t\t\t\t\t\t\t'<select ' +\r\n\t\t\t\t\t\t\t\t\t'class=\"custom-select ' + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'text-primary ' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis_row[\"item_name\"] + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'_item row_' + row_no + '\" ' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'collector_button' +\r\n\t\t\t\t\t\t\t\t\t\t'onchange=\"response_check(this)\" ' +\r\n\t\t\t\t\t\t\t\t\t\t'name=\"survey_' + this_row[\"item_name\"].toLowerCase() + '\">' +\r\n\t\t\t\t\t\t\t\t\t\t'<option selected disabled hidden>-- no option selected --</option>';\r\n              for(var i=0; i<options.length;i++){\r\n\t\t\t\t\t\t\t\tquestion_td += \"<option>\" + options[i] + \"</option>\";\r\n              }\r\n              question_td += '</select>' + feedback_string;\r\n          break;\r\n\r\n          case \"email\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              question_td += response_html+\"<input class='form-control type='email' \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' onchange='response_check(this)' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\";\r\n              question_td += feedback_string;\r\n          break;\r\n\r\n          case \"google_slide\":\r\n          case \"instruct\":\r\n              //question_td += </td>\"; // \"<span class='text-primary'>\" + this_row[\"text\"] + \"</span>\";\r\n          break;\r\n\r\n          // tidy up this code for nice looking buttons\r\n          case \"likert\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              var options  = this_row[\"answers\"].split(\"|\");\r\n              \r\n\t\t\t\t\t\t\tif(typeof(this_row[\"values\"]) == \"undefined\"){\r\n                this_row[\"values\"] = this_row[\"answers\"];\r\n              }\r\n              \r\n\t\t\t\t\t\t\tif(typeof(this_row[\"btn_width\"]) !== \"undefined\" && this_row[\"btn-width\"]  !== \"\"){\r\n\t\t\t\t\t\t\t\tvar btn_style = \"width:\" + this_row[\"btn_width\"];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar btn_style = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar values   = this_row[\"values\"].split(\"|\");\r\n              question_td += \t\"<table class='likert_table'>\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<tr>\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<td>\";\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t* Add side_text if it exists\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tif(typeof(this_row[\"side_text\"]) !== \"undefined\" &&\r\n\t\t\t\t\t\t\t\tthis_row[\"side_text\"] !== \"\"){\r\n\t\t\t\t\t\t\t\tside_text = this_row[\"side_text\"].split(\"|\");\r\n\t\t\t\t\t\t\t\tside_text = side_text.map(function(this_side){\r\n\t\t\t\t\t\t\t\t\treturn \"<span style='padding:20px;' class='text-primary'><b>\" + this_side + \"</b></span>\";\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tside_text = [\"\",\"\"];\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tquestion_td += side_text[0];\r\n\r\n\t\t\t\t\t\t\tquestion_td +=  response_html +\r\n                              '<div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">'; //to help detect blank likert's\r\n              \r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor(var i=0; i<options.length;i++){\r\n                question_td +=  '<button type=\"button\" '+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'class=\"btn '+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'survey_btn ' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 'btn-outline-primary ' + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t this_row[\"item_name\"] + '_item row_' + row_no +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t '\"autocomplete=\"off\"' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'id = \"likert_' + row_no + '_' + i + '\" ' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'style = \"' + btn_style + '\" ' +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'onclick=\"likert_update(this,\\''+options[i]+'\\',\\''+values[i]+'\\')\">'+ \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions[i] +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'</button>';\r\n\r\n              }\r\n\t\t\t\t\t\t\tquestion_td +=  \"</div>\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tside_text[1] +\r\n                              \"<input type='hidden' class='\"+this_class+\"' id='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score' name='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score'>\"+\r\n                          \"</td>\"+\r\n                      \"</tr>\"+\r\n                  \"</table>\"+feedback_string;\r\n          break;\r\n\r\n          case \"number\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              question_td += response_html +\"<input type='number'  onchange='response_check(this)' class='form-control \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\" + feedback_string;\r\n          break;\r\n\r\n          case \"para\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              question_td += response_html+\"<textarea name='survey_\"+this_row['item_name'].toLowerCase()+\"' class='\"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' onchange='response_check(this)' style='width:100%;height:200px'></textarea>\";\r\n              question_td += feedback_string;\r\n          break;\r\n\r\n          case \"radio\":\r\n          case \"radio_vertical\":\r\n            var options = this_row[\"answers\"].split(\"|\");\r\n            var values   = this_row[\"values\"].split(\"|\");\r\n            question_td +=  response_html;\r\n            for(var i=0; i<options.length;i++){\r\n              feedback_string = generate_feedback_string(feedback_array,i,feedback_color,row_no,this_row);\r\n\r\n              question_td +=  '<div class=\"custom-control custom-radio\">'+\r\n                                '<input type=\"radio\" class=\"custom-control-input '+this_class+'  onclick=\"likert_update(this,\\''+options[i]+'\\',\\''+values[i]+'\\')\" custom-control custom-radio '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" value=\"' + options[i] + '\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\r\n                                '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\r\n                                  feedback_string +\r\n                              '</div>';\r\n\r\n\r\n            }\r\n            question_td +=  \"<input type='hidden' class='\"+this_class+\"' id='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score' name='survey_\"+this_row[\"item_name\"].toLowerCase()+\"_score'>\";\r\n          break;\r\n\r\n          case \"radio_horizontal\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              var options = this_row[\"answers\"].split(\"|\");\r\n              question_td +=  response_html;\r\n              for(var i=0; i<options.length;i++){\r\n                  question_td +=  '<div class=\"custom-control custom-radio custom-control-inline\">'+\r\n                                      '<input type=\"radio\" class=\"custom-control-input '+this_class+' custom-control custom-radio '+this_row[\"item_name\"]+'_item row_'+row_no+'\" id=\"'+this_row[\"item_name\"]+ i +'\"  onchange=\"response_check(this)\" name=\"survey_'+this_row[\"item_name\"].toLowerCase()+'\">'+\r\n                                      '<label class=\"custom-control-label\" for=\"'+this_row[\"item_name\"]+i+'\">'+options[i]+'</label>'+\r\n                                      '<div class=\"invalid-feedback\">Example invalid feedback text</div>'+\r\n                                  '</div>'\r\n              }\r\n              question_td += feedback_string;\r\n          break;\r\n\r\n          case \"report_score\":\r\n              question_td += \"<input disabled class='form-control score_\" + this_row[\"item_name\"] + \" \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\";\r\n          break;\r\n\r\n          case \"text\":\r\n              feedback_string = generate_feedback_string(feedback_array,0,feedback_color,row_no,this_row);\r\n              question_td += response_html+\"<input class='form-control \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' onchange='response_check(this)' type='text' name='survey_\"+this_row['item_name'].toLowerCase()+\"'>\";\r\n              question_td += feedback_string;\r\n          break;\r\n\r\n      }\r\n    }\r\n    if(feedback_array){\r\n        question_td += \"<button class='btn btn-outline-info feedback_btn \"+this_row[\"item_name\"]+\"_item row_\"+row_no+\"' data-toggle='tooltip' id='reveal_\"+this_row[\"item_name\"].toLowerCase()+\"_feedback'  onclick='reveal_answers(this)'>Show</button>\";\r\n    }\r\n  }\r\n//  question_td += '</td>';\r\n\r\n  if(typeof(this_row[\"type\"])== \"undefined\"){\r\n      return '';\r\n  } else {\r\n    if(this_row[\"type\"].toLowerCase() == \"instruct\"){\r\n      var this_row_html = \"<td colspan='2'>\" + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis_row[\"text\"] +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"</td>\";\r\n\t\t} else if(this_row[\"type\"].toLowerCase() == \"likert\"){\r\n\t\t\t\r\n\t\t\tif(typeof(this_row[\"side_by_side\"]) !== \"undefined\" &&\r\n\t\t\t\t this_row[\"side_by_side\"].toLowerCase() == \"yes\"){\r\n\t\t\t\t\r\n\t\t\t\tvar this_row_html=\"<td class='text-primary' id='survey_\"+this_row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+this_row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\t\t\t\t\r\n\t\t\t\t \r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar this_row_html = \"<tr>\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<td colspan='2'>\" + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis_row[\"text\"] +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"</td>\" + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"</tr>\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"<tr>\" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<td colspan='2' align='center'>\" + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion_td + \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"</td>\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"</tr>\";\r\n\t\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n    } else if(this_row[\"type\"].toLowerCase()==\"google_slide\") {\r\n      var this_row_html=\"<td colspan='2'>\"+this_row[\"text\"]+\"</label></td>\";\r\n    } else if(typeof(this_row[\"no_text\"]) !== \"undefined\" && this_row[\"no_text\"] == \"on\"){\r\n      var this_row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\r\n    } else {\r\n      if(this_row['text'].toLowerCase() == \"page_start\" | this_row['type'].toLowerCase() == \"page_start\"){\r\n        this_row_html = question_td;\r\n      }else {\r\n        var this_row_html=\"<td class='text-primary' id='survey_\"+this_row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+this_row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n      }\r\n    }\r\n    if(typeof(this_row[\"optional\"]) !== \"undefined\"){\r\n      if(this_row[\"optional\"].toLowerCase() == \"no\"){\r\n        proceed_object.name.push(this_row[\"item_name\"]);\r\n        proceed_object.type.push(this_row[\"type\"]);\r\n        proceed_object.break_no.push(page_break_management.breaks_remaining);\r\n      }\r\n    }\r\n    if(typeof(this_row[\"shuffle\"]) == \"undefined\" || this_row[\"shuffle\"].toLowerCase() == \"off\"){\r\n      this_shuffle='none';\r\n    } else {\r\n      this_shuffle=this_row[\"shuffle\"];\r\n    }\r\n    return [this_row_html,this_shuffle];\r\n  }\r\n}\r\n\r\nfunction quest_resp_perc(quest_resp_rat){\r\n\tif(typeof(quest_resp_rat) == \"undefined\"){\r\n    row_resp_perc = \"50%\";\r\n    row_ques_perc = \"50%\";\r\n  } else {\r\n    row_resp_perc = parseFloat(100-quest_resp_rat.replace(\"%\",\"\"))+\"%\";\r\n    row_ques_perc = parseFloat(quest_resp_rat.replace(\"%\",\"\"))+\"%\";\r\n  }\r\n  return [row_ques_perc,row_resp_perc];\r\n}\r\n\r\nfunction response_check(submitted_element){\r\n  switch(submitted_element.type){\r\n    case \"checkbox\":\r\n      var checked_responses = $(\"[name='\"+submitted_element.name+\"']:checked\");\r\n      if(checked_responses.length){ //i.e. more than 0\r\n        var values = [];\r\n        for(var i = 0; i < checked_responses.length; i++){\r\n          values.push(checked_responses[i].value);\r\n        }\r\n        $(\"#\"+submitted_element.name+\"_response\").val(JSON.stringify(values));\r\n      } else {\r\n        $(\"#\"+submitted_element.name+\"_response\").val(\"\");\r\n      }\r\n      break;\r\n\r\n      case \"button\":\r\n        $(\"#\"+submitted_element.name+\"_response\").val(submitted_element.innerHTML);\r\n      break;\r\n\r\n      case \"number\":\r\n      case \"select-one\":\r\n      case \"text\":\r\n      case \"textarea\":\r\n        $(\"#\"+submitted_element.name+\"_response\").val(submitted_element.value);\r\n      break;\r\n\r\n\r\n      case \"radio\":\r\n        $(\"#\"+submitted_element.name+\"_response\").val(submitted_element.value);\r\n      break;\r\n    }\r\n    update_score();\r\n}\r\n\r\nfunction retrieve_feedback(this_row){\r\n  if(typeof(this_row[\"feedback\"]) !== \"undefined\" && this_row[\"feedback\"] !== \"\"){\r\n    feedback_array = this_row[\"feedback\"].split(\"|\");\r\n    if(typeof(this_row[\"feedback_color\"]) == \"undefined\"){\r\n      bootbox.alert(\"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\");\r\n    }\r\n    feedback_color = this_row[\"feedback_color\"].split(\"|\");\r\n  } else {\r\n    feedback_array = null;\r\n    feedback_color = '';\r\n  }\r\n  return [feedback_array,feedback_color];\r\n}\r\n\r\nfunction retrieve_row_no_item_name(this_element){\r\n  var these_classes = this_element.className.split(\" \");\r\n  var row_no;\r\n  var item_name;\r\n  these_classes.forEach(function(this_class){\r\n    if (this_class.indexOf('row_') > -1) {\r\n      row_no = this_class.replace(\"row_\",\"\");\r\n    }\r\n    if (this_class.indexOf('_item') > -1) {\r\n      item_name = this_class.replace(\"_item\",\"\").toLowerCase();\r\n    }\r\n  });\r\n  return [row_no,item_name];\r\n}\r\n\r\nfunction reveal_answers(this_element){\r\n  var this_response = $(\"#\"+this_element.id.replace(\"reveal_\",\"survey_\").replace(\"_feedback\",\"_response\")).val();\r\n  response_present = this_response == \"\" ? false : true;\r\n\r\n  if(settings.feedback_before_response == false && response_present == false){\r\n    bootbox.alert(\"Please respond before trying reveal the feedback.\")\r\n  } else {\r\n    if($(\"#\"+this_element.id).hasClass(\"btn-outline-info\")){\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).show(500);\r\n      if(settings.lock_after_feedback){\r\n        var item_class = this_element.id.replace(\"_feedback\",\"_item\").replace(\"reveal_\",\"\");\r\n        $(\".\"+item_class).prop(\"disabled\",true);\r\n        document.getElementsByClassName(item_class).title = \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).html(\"Locked\");\r\n        document.getElementById(this_element.id).title = 'The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback';\r\n        $(\"#\"+this_element.id).addClass(\"disabled\");\r\n      } else {\r\n        $(\"#\"+this_element.id).html(\"Hide\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n      }\r\n    } else {\r\n      $(\"#\"+this_element.id).html(\"Show\");\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).hide(500);\r\n      $(\"#\"+this_element.id).addClass(\"btn-outline-info\");\r\n      $(\"#\"+this_element.id).removeClass(\"btn-info\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction shuffle(array) {                                   // http://stackoverflow.com/questions/962802#962890\r\n  var tmp, current, top = array.length;\r\n  if(top) while(--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction update_score(){\r\n  var scales = Object.keys(survey_obj.scales);\r\n  scales.forEach(function(scale){\r\n    this_scale = survey_obj.scales[scale];\r\n    var questions = Object.keys(this_scale.questions);\r\n    var this_score = 0;\r\n    complete_score = true;\r\n\r\n    questions.forEach(function(row_no){\r\n      var item = survey_obj.data[row_no].item_name.toLowerCase();\r\n      var this_response = $(\"#survey_\"+item+\"_response\").val(); //response\r\n      var normal_reverse = this_scale.questions[row_no];\r\n\r\n      if(normal_reverse.indexOf(\"-\") == -1){\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_item_score(survey_obj,row_no,\"values\",this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_item_score(survey_obj,row_no,\"values\",this_response,item);\r\n        }\r\n      } else {\r\n        values_reverse = normal_reverse.split(\"-\");\r\n        values_col     = values_reverse[0].toLowerCase();\r\n        normal_reverse = values_reverse[1];\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_item_score(survey_obj,row_no,values_col,this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_item_score(survey_obj,row_no,values_col,this_response,item);\r\n        }\r\n      }\r\n      if(typeof(this_value) !== \"undefined\"){\r\n        this_score += multiplier * this_value;\r\n      } else {\r\n        complete_score = false;\r\n      }\r\n    });\r\n    if(complete_score){\r\n      $(\".score_\"+scale).addClass(\"bg-success\");\r\n      $(\".score_\"+scale).removeClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'All relevant questions have been answered';\r\n    } else {\r\n      $(\".score_\"+scale).removeClass(\"text-success\");\r\n      $(\".score_\"+scale).addClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'At least one relevant questions has NOT been answered';\r\n    }\r\n    $(\".score_\"+scale).val(this_score);\r\n  });\r\n}\r\n\r\nfunction write_survey(this_survey,this_id){\r\n  scoring_object.update_scales(this_survey);\r\n  this_survey_html = \"<table class='table_break' id='table0'>\";\r\n  this_survey_object={\r\n    content:[],\r\n    shuffle:[],\r\n    content_new_order:[],\r\n    shuffled_content:[],\r\n    shuffled_arrays:{},\r\n  }\r\n\r\n  this_survey_html += \"<tr>\";\r\n  for(i = 0; i < this_survey.length; i++){\r\n    this_row = this_survey[i];\r\n    row_html = process_survey_question(this_row,i);\r\n\t\tthis_survey_object.content.push(row_html[0]);\r\n    this_survey_object.shuffle.push(row_html[1]);\r\n\t}\r\n\r\n\tunique_shuffles = this_survey_object.shuffle.filter((v,i,a)=>a.indexOf(v)==i); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\r\n\r\n\tfor(var i=0;i<unique_shuffles.length;i++){\r\n    if(typeof(unique_shuffles[i]) !== \"undefined\" &&\r\n      unique_shuffles[i] !== \"none\" &&\r\n      unique_shuffles[i] !== \"\"){\r\n        shuffled_content = this_survey_object.shuffle.map(function(element,index){\r\n    \t   if(typeof(element)!== \"undefined\" && element.toLowerCase() !== \"none\" && element.toLowerCase() == unique_shuffles[i]){\r\n  \t       return this_survey_object.content[index];\r\n    \t   }\r\n    \t}).filter(elm => typeof(elm) !== \"undefined\");\r\n    \tnew_order = shuffle(shuffled_content);\r\n    \tthis_survey_object.shuffled_arrays[unique_shuffles[i]]=new_order; // add new array with dynamic name\r\n    }\r\n\t}\r\n\r\n\t// loop through lists, taking one off from the shuffled list and replacing the row with one from the shuffled list\r\n\tfor(var i=0;i<this_survey_object.content.length;i++){\r\n    var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(this_survey_object.shuffle[i]);\r\n    if(this_index !== -1){\r\n      //take first item off relevant list and delete item\r\n      var this_item = this_survey_object.shuffled_arrays[Object.keys(this_survey_object.shuffled_arrays)[this_index]].shift();\r\n      this_survey_object.content_new_order[i]=this_item;\r\n    } else {\r\n      this_survey_object.content_new_order[i]=this_survey_object.content[i];\r\n    }\r\n\t}\r\n\r\n\tquestions_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\r\n\tquestions_in_order += \"</tr>\";\r\n\r\n\tthis_survey_html += questions_in_order;\r\n\tthis_survey_html += \"</table>\";\r\n\r\n\t$(\"#\" + this_id).html(this_survey_html);\r\n\t\r\n\t$(\"#\" + this_id).show(1000,function(){\r\n\t\t// Set all buttons to the max width\r\n\t\t/*\r\n\t\tvar maxWidth = 0;\r\n\t\t$('.btn').each(function(index, element) {\r\n\t\t\tvar curWidth = $(element).width();\r\n\t\t\tif (maxWidth < curWidth ) {\r\n\t\t\t\tmaxWidth = curWidth;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$('.survey_btn').each(function(i) {\r\n\t\t\t$(this).delay(200).animate({\r\n\t\t\t\t\"width\" : maxWidth\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t\t*/\r\n\t});\r\n\r\n\t//scroll to top\r\n\r\n\r\n\t$(\".show_tab\").on(\"click\",function(){\r\n    if(this.className.indexOf(\"disabled\") == -1){\r\n      $(\".show_tab\").removeClass(\"active\");\r\n      $(\".survey_page\").hide();\r\n      $(\"#\"+this.id.replace(\"_button\",\"\")).show();\r\n    } else {\r\n      bootbox.alert(\"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\");\r\n    }\r\n\t});\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n  $(\".custom-checkbox\").prop(\"indeterminate\",true);\r\n}\r\n\r\n//////////////////\r\n// Load survey  //\r\n//////////////////\r\ncurrent_survey = \"{{survey}}\";\r\nif(typeof(Trial) !== \"undefined\"){  // This check is to help this code work when previewing trialtypes\r\n  Trial.set_timer(function(){       // This chunk is for when the survey is run within an actual trial\r\n    load_survey(current_survey);\r\n  },100);\r\n} else {                            // This chunk is for when the survey is being previewed in the \"survey editor\"\r\n  load_survey(current_survey);\r\n}\r\n\r\n\r\n</script>", "instruct_keyboard": "<!--\r\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\r\n    A program for running experiments on the web\r\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\r\n\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License version 3 as published by\r\n    the Free Software Foundation.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n \t\t\r\n\t\tKitten release (2019-20) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\r\n*/\r\n-->\r\n<style>\r\n#instruct_text{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n#trial_contents{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:600;\r\n  height:600;\r\n}\r\n* {\r\ncursor: none;\r\n}\r\n</style>\r\n<div id=\"trial_contents\">\r\n  <div id=\"instruct_text\">{{text}}</div>\r\n</div>\r\n\r\n<script>\r\n$(window).bind('keydown', function(event) {\r\n  Trial.submit();\r\n});\r\n</script>", "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>"}, "trialtype": "mousetracker", "filetype": "", "version": 0, "user_trialtypes": {"mc_pic": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>", "rate_image": "<!--\nThis is from Borcsok, Fitzgibbins and Haffey (2020) investigation into gambling and alcohol behaviour\n-->\n<style>\n#face_img{\n  width:{{cue_width}};\n  height:{{cue_height}};\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n#instructions{\n  text-align: center;\n  font-size:20px;\n}\n#response_div{\n  margin: auto;\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n#submit_btn{\n  margin:0 auto;\n  display:none;\n}\n.response_btn{\n  margin:5px;\n  width:{{btn_width}};\n}\n</style>\n<img src=\"{{cue}}\" id=\"face_img\"/>  <!-- if you want to refer to a local image, you need to identify it's relative location to RunStudy.html -->\n<div id=\"response_div\"></div>\n<div id=\"button_container\">\n  <button class=\"btn btn-danger\" onclick=\"Trial.submit()\" id=\"submit_btn\">Submit</button>\n</div>\n<input type=\"hidden\" name=\"face_response\" id=\"face_response\"/>\n<script>\nno_stims = 0;\nresp_div_html = \"\";\nresp_upper    = 0;\nresponses_array =   [\"{{responses_1}}\",\n                     \"{{responses_2}}\",\n                     \"{{responses_3}}\"];\ninstruction_array = [\"{{instruct_1}}\",\n                     \"{{instruct_2}}\",\n                     \"{{instruct_3}}\"];\n\nrow_classes = [\"primary\",\n               \"info\",\n               \"secondary\"];\n\nfor(var i = 0; i < 3; i++){\n  responses = responses_array[i];\n  if(responses == \"\"){\n    break;\n  }\n  no_stims++;\n  \n  responses = responses.split(\"|\");\n  resp_div_html += \"<h3 class='text-\" + row_classes[i] + \"'>\" +  instruction_array[i] + \"</h3>\";\n  resp_div_html += \"<div style='margin:10px'>\";\n  resp_div_html += responses.map(function(response){\n    return \"<button name='face_rating_\" + (i+1) + \"' class='btn btn-\" + row_classes[i] + \" response_btn'>\" + response + \"</button>\";\n  }).join(\"\");\n  resp_div_html += \"<input type='hidden' id='face_response_\" + (i+1) + \"' name='face_response_\" + (i+1) + \"'>\";\n  resp_div_html += \"</div>\";\n};\n\n$(\"#response_div\").html(resp_div_html);\n$(\".response_btn\").on(\"click\",function(){\n  var response_id = $(this).attr(\"name\").replace(\"rating\",\"response\");\n  $(\"#\" + response_id).val(this.innerHTML);\n  $('[name=\"' + $(this).attr(\"name\") + '\"]').removeClass(\"btn-danger\");\n  $(this).addClass(\"btn-danger\");\n  check_responses();\n});\nfunction check_responses(){\n  valid_responses = 0;\n  for(var i = 1; i < no_stims + 1; i++){\n    if($(\"#face_response_\" + i).val() !== \"\"){\n      valid_responses++;\n    }\n  }\n  if(valid_responses == no_stims){\n    $(\"#submit_btn\").css(\"display\", \"block\");\n  }\n}\n</script>", "webgazer": "<!--\n    This is based on code from OSF repository https://osf.io/jmz79/ that accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017.\n    \n    Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a freeviewing task that works on Collector\n-->\n\n<!DOCTYPE html>\n<html>\n<head>\n    <link href=\"../libraries/webgazer/css/jquery-ui.css\" type=\"text/css\" rel=\"stylesheet\">\n    <link href=\"../libraries/webgazer/css/jquery.mobile-1.4.5.css\" type=\"text/css\" rel=\"stylesheet\">\n    <link href=\"../libraries/webgazer/css/tolcam.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"../libraries/webgazer/js/jquery-1.12.3.min.js\"></script>\n    <script src=\"../libraries/webgazer/js/jquery-ui.js\"></script>\n    <script src=\"../libraries/webgazer/js/jquery.mobile-1.4.2.min.js\"></script>\n    <script src=\"../libraries/webgazer/js/simpleheat.js\"></script>\n</head>\n<style>\n.stimuli_img{\n  width: {{image_width}};\n  object-fit: fill;\n  vertical-align: middle;\n  height: {{image_height}};\n  position: absolute;\n  transform: translate(-50%, 0);\n  left: 50%;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n#stimuli_fixation{\n  \n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -moz-transform: translateX(-50%) translateY(-50%);\n  -webkit-transform: translateX(-50%) translateY(-50%);\n  transform: translateX(-50%) translateY(-50%);\n  font-size:100px;\n  text-align:center;\n  height:150px;\n}\n#stimuli_img_left{\n  margin-left: {{left_position}};\n}\n#stimuli_img_right{\n  /* left:  75%; */\n  margin-left: {{right_position}};\n}\n</style>\n<body>\n  <div id=\"instruction\">\n      <div id=\"instruction_1\" class=\"instruction_page\">\n        This experiment is based on code from the OSF repository <a href=\"https://osf.io/jmz79/\" target=\"_blank\">https://osf.io/jmz79/</a> which accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017. Please find the abstract and information about the code, analyses, and data below. This work is intended for scientific use only.\n  Written by Kilian Semmelmann, tolcam@ksemmelm.de, 2017. <br><br>\n  \n  Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a task that works on Collector.\n      </div>\n\n      <div id=\"instruction_2\" class=\"instruction_page\">\n          <h1>Webcam Setup</h1>\n          <br />\n          <div id=\"setup_after\">\n              You can take a short break and move your head. Before continuing, please follow the instructions noted below.<br />\n          </div>\n          <br />\n          Please turn off your mobile phone and close all other programs and websites. Then carefully read and follow these instructions:<br />\n          <img src=\"../libraries/webgazer/imgs/instructions_donttilt.png\" style = \"width: 100%; margin-top: 20px; margin-bottom: 20px;\"/>\n          <br />\n          <span id=\"webcam_insert\"></span>\n          <br />\n          <button class=\"btn btn-primary\" id=\"flip_cam_btn\" style=\"display:none\">Flip cam</button>\n          <div id=\"setup_first\">\n              This study consists of multiple five-minute parts with pauses inbetween. After you clicked \"start\", please avoid moving your head. If you move too much, the calibration can fail and you might not be able to finish the study.\n          </div>\n          <br />\n      </div>\n\n      <div id=\"instruction_3\" class=\"instruction_page\">\n        <div id=\"beforetherest\">\n          <h1>Proceed</h1>\n          <br />\n          Click \"Proceed\" to move onto the next trial\n          <button onclick=\"Trial.submit()\" class=\"btn\">Proceed</button>\n        </div>\n      </div>\n\n      <div id=\"instruction_back\" class=\"instruction_navigation\">\n        <div id=\"instruction_back_text\">\n          &lt;\n        </div>\n      </div>\n      <div id=\"instruction_continue\" class=\"instruction_navigation\">\n        <div id=\"instruction_continue_text\">\n          &gt;\n        </div>\n      </div>\n  </div>\n\n  <div id=\"calibration_dot\" class=\"stimuli\"><div id=\"calibration_cnt\">0</div></div>\n  <div id=\"stimulus\" class=\"stimuli\"><img src=\"../libraries/webgazer/imgs/talking.jpg\" /></div>\n  <div id=\"stimuli_dot\" class=\"stimuli\"></div>\n  <div id=\"stimuli_bar\" class=\"stimuli\"></div>\n  <div id=\"stimuli_fixation\" class=\"stimuli\">+</div>\n  <div id=\"stimuli_prime\" class=\"stimuli\"></div>\n  <div id=\"stimuli_target\" class=\"stimuli\">X</div>\n  <img id=\"stimuli_img_left\" class=\"stimuli stimuli_img\"/>\n  <img id=\"stimuli_img_right\" class=\"stimuli stimuli_img\"/>\n  <div id=\"instruction_message\"></div>\n\n  <div id=\"message\">\n    no message\n  </div>\n</body>\n</html>\n<script>\n\n//////////////////////\n// Borcsok variables\n//////////////////////\n\nvar image_pair;\nTrial.set_timer(function(){\n  function refuse_height(){\n    bootbox.confirm(\"Your window height needs to be at least {{min_height}} before starting. Please make your window as big as possible before proceeding.\", function(result){\n      if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\n        refuse_height();\n      }\n    });\n  };\n  function refuse_width(){\n    bootbox.confirm(\"Your window width needs to be at least {{min_width}} before starting. Please make your window as big as possible before proceeding.\", function(result){\n      if(window.innerWidth < parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\n        refuse_width();\n      }\n    });\n  }\n  if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\n    refuse_height();\n  }\n  if(window.innerWidth <  parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\n    refuse_width();\n  }\n},0);\n\n\n//////////////////////\n// default settings //\n//////////////////////\n\nvar calibrations = \"{{calibrations}}\";\nvar freeview_image_file = \"{{freeview_image_file}}\".toLowerCase();\nvar design_type = \"{{design_type}}\";\nvar calibration_skip = \"{{calibration_skip}}\";\nvar image_height = \"{{image_height}}\";\nvar image_width = \"{{image_width}}\";\nvar left_side = \"{{left_side}}\";\nvar save_script = \"{{save_script}}\";\nvar stim_duration = \"{{stim_duration}}\";\nvar trials = \"{{trials}}\";\nvar trial_order = \"{{trial_order}}\";\n\n\nif(calibrations.indexOf(\"calibrations\") !== -1){\n  calibrations = 13;\n}\nif(calibration_skip.indexOf(\"calibration_skip\") !== -1){\n  calibration_skip = \"no\";\n}\nif(stim_duration.indexOf(\"stim_duration\") !== -1){\n  stim_duration = 2000;\n}\nif(left_side.indexOf(\"left_side\") !== -1){\n  left_side = \"counterbalance\";  \n}\n\n\n\n\n/************************************\n * HELPER FUNCTIONS\n ************************************/\n/**\n * Shuffles array in place.\n * @param {Array} a items The array containing the items.\n * @author http://stackoverflow.com/a/2450976/4175553\n */\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\n/************************************\n * WEBCAM PARAMETERS\n ************************************/\nvar cam = {};\ncam.overlay = '';\ncam.width = 400;\ncam.height = 300;\ncam.topDist = '0px';\ncam.leftDist = '0px';\ncam.recording = 0;\ncam.validating = 0;\ncam.calibrating = 0;\ncam.initialized = 0;\n\n/************************************\n * CALIBRATION PARAMETERS\n ************************************/\nvar calibrating = 0;\nvar t_calibration_start;\nvar calibration_no = 0;\nvar calibration = {};\ncalibration.points = [];\ncalibration.method = \"watch\"; // click or watch\ncalibration.calibrations = calibrations // how many calibration dots\ncalibration.duration = 20; // how often does one position get sampled\ncalibration.instruction = 'Please fixate on the dot <br />that will appear. <br /><br />Do not move your head,<br />only use your eyes.';\nif(\"{{skip_instruct}}\" == \"on\"){\n  calibration.instruction_duration = 0;\n} else {\n  calibration.instruction_duration = 5000;\n}\n\n/************************************\n * VALIDATION PARAMETERS\n ************************************/\nvar validating = 0;\nvar validation_no = 0;\nvar validation_current = {\"x\": 0, \"y\": 0};\nvar validation_attempt = 1;\nvar validation = {};\nvalidation.validations = 5;\nvalidation.duration = 20;\nvalidation.points = [];\nvalidation.timeout = 20000; // if no validation happens within X ms, validation will be ended and re-calibrated\nvalidation.attempts = 5; // how often can validation be failed PER validation\nvalidation.distance = 200; // offset distance in pixel to be a valid validation sample\n\n\n/************************************\n * DESIGN\n ************************************/\nvar design = {};\nvar block_no = 0;\nvar trial_no = 0;\n\neyetrack_designs = {\n  freeview:   {'type': 'freeview', 'trials': trials, 'iti': 500, 'instruction': '{{text}}', 'instruction_duration': 5000},\n  simple: {'type': 'simple', 'trials': 24, 'iti': 500, 'instruction': 'Please look at the cross.<br />When the dot appears, please look at it.<br /><br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 5000},\n  pursuit: {'type': 'pursuit', 'trials': 24, 'iti': 500, 'instruction': 'A black dot will appear. Please <br />look at it. When it turns <span style=\"color: #dd494b;\">red</span>,<br /> Please follow its movement with your eyes.<br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 7000},\n  \n}\n\nif(\"{{skip_instruct}}\" == \"on\"){\n  eyetrack_designs.freeview.instruction_duration = 0;\n} \n\n\ndesign.blocks = [\n  eyetrack_designs[[\"{{design_type}}\"]]\n];\n\n//design.blocks = shuffle(design.blocks);\ndesign.blocks_randomized = 1; // shall the blocks be shuffled?\ndesign.trials_randomized = 1; // same for trials\ndesign.calibrate = \"high\";\ndesign.recalibrate = 1;\n\n\n\n/************************************\n * DATA VARIABLES\n ************************************/\nvar data = [];\nvar data_current = {};\nvar status = '-';\n\n/**\ndata.design = jQuery.extend(true, {}, design);\n **/\n\n/************************************\n * SET UP WEBGAZER\n ************************************/\nfunction loadWebgazer() {\n  $('canvas').remove();\n  cam.initialized = 0;\n  $.getScript( \"../libraries/webgazer/js/webgazer_old.js\" )\n    .done(function( script, textStatus ) {\n      initializeWebgazer();\n      $('#message').html('Please allow for access on your Webcam on the top part of the screen. <br /><br />Remember: We will NOT transmit your video, but only process it locally and transmit numbers to our server.').show();\n    })\n    .fail(function( jqxhr, settings, exception ) {\n      $( \"div.log\" ).text( \"Triggered ajaxError handler.\" );\n    });\n}\n\n\nfunction initializeWebgazer() {\n    \n  //webgazer.clearData()\n  webgazer.setRegression('ridge') /* currently must set regression and tracker */\n    .setTracker('clmtrackr')\n    .setGazeListener(function(d, clock) {\n      //console.log(data); /* data is an object containing an x and y key which are the x and y prediction coordinates (no bounds limiting) */\n      //console.log(clock); /* elapsed time in milliseconds since webgazer.begin() was called */\n      if (d !== null) {\n\n        if (cam.calibrating == 1) {\n            var $cd = $('#calibration_dot');\n            var cx = parseInt(Math.round($cd.offset().left));\n            var cy = parseInt(Math.round($cd.offset().top));\n            var cp = d;\n            var dist = Math.sqrt(((cp.x - cx) * (cp.x - cx)) + ((cp.y - cy) * (cp.y - cy)));\n            var c = $('#calibration_cnt').html();\n            data_current.raw.push({'time': clock, 'x': cp.x, 'y': cp.y, 'cx': cx, 'cy': cy, 'dist': dist, 'c': c});\n        }\n\n\n        if (cam.validating == 1) {\n            // see whether dx and dy are within 100px radius of target\n            var dist = parseInt(Math.sqrt(((d.x - validation_current.x) * (d.x - validation_current.x)) + ((d.y - validation_current.y) * (d.y - validation_current.y))));\n            var c = parseInt($('#calibration_cnt').html());\n            if (dist < validation.distance) {\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 1});\n                if (c < calibration.duration) {\n                    $('#calibration_cnt').html(++c);\n                } else {\n                    cam.validating = 0;\n                    clearTimeout(t);\n                    $('#calibration_dot').hide();\n                    validation_no++;\n                    saveData();\n                    setTimeout(\"validate();\", 500);\n                }\n            } else {\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 0});\n            }\n        }\n\n        if (cam.recording == 1) {\n            var tx = -1;\n            var ty = -1;\n            if (data_current.task == \"simple\" || data_current.task == \"pursuit\") {\n                var $sd = $('#stimuli_dot');\n                var tx = parseInt(Math.round($sd.offset().left));\n                var ty = parseInt(Math.round($sd.offset().top));\n            }\n            data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'tx': tx, 'ty': ty, 'status': status});\n            //console.log(data.trials[trial_no].raw.length + ' ' + d.x + ' ' + d.y);\n        }\n      }\n    })\n    .begin()\n    .showPredictionPoints(false); /* shows a square every 100 milliseconds where current prediction is */\n\n  cl = webgazer.getTracker().clm;\n\n  checkWebgazer();\n}\n\n\nfunction checkWebgazer() {\n  if (webgazer.isReady()) {\n    console.log('webgazer is ready.');\n    initializeCam();\n  } else {\n    setTimeout(checkWebgazer, 100);\n  }\n}\n\n/************************************\n * SET UP WEBCAM\n ************************************/\nfunction initializeCam() {\n  var video = document.getElementById('webgazerVideoFeed');\n  video.style.display = 'block'; // block\n  video.style.position = 'relative';\n  video.width = cam.width;\n  video.height = cam.height;\n  video.style.margin = '0px';\n  $('#webgazerVideoFeed').css({\n    'left': '50%',\n    'transform': 'translate(-50%, 0)',\n    'margin': '20px'\n  }).detach().insertAfter('#webcam_insert').get(0).play();\n  flipped = false;\n  $(\"#flip_cam_btn\").show();\n  $(\"#flip_cam_btn\").on(\"click\",function(){\n    if(flipped == false){\n      flipped = true;\n      $(\"#webgazerVideoFeed\").css(\"transform\",\"scaleX(-1)\");\n      $(\"#webgazerVideoFeed\").css(\"-webkit-transform\", \"scaleX(-1)\");\n    } else {\n      flipped = false;\n      $(\"#webgazerVideoFeed\").css(\"transform\",\"scaleX(1)\");\n      $(\"#webgazerVideoFeed\").css(\"-webkit-transform\", \"scaleX(1)\");\n    }\n  });\n\n  webgazer.params.imgWidth = cam.width;\n  webgazer.params.imgHeight = cam.height;\n\n  cam.overlay = document.getElementById('overlay');\n  if (cam.overlay === null) {\n      cam.overlay = document.createElement('canvas');\n      cam.overlay.id = 'overlay';\n      document.body.appendChild(cam.overlay);\n  }\n  cam.overlay.style.position = 'absolute';\n  cam.overlay.width = cam.width;\n  cam.overlay.height = cam.height;\n  cam.overlay.style.top = cam.topDist;\n  cam.overlay.style.left = cam.leftDist;\n  cam.overlay.style.margin = '0px';\n\n  cam.initialized = 1;\n\n  $('#message').html('Webcam access successful.').delay(1000).fadeOut(1000);\n}\n\n/************************************\n * START BLOCKS\n ************************************/\nfunction prepareBlock() {\n  if (cam.initialized == 1) {\n    if (block_no < design.blocks.length) {\n      trial_no = 0;\n\n      webgazer.resume();\n      if (design.recalibrate == 1 || block_no == 0) {\n        $('#instruction_message').html(calibration.instruction).show();\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", calibration.instruction_duration);\n        setTimeout(\"startCalibration();\", design.blocks[block_no].instruction_duration + 2000);\n      } else {\n        $('#instruction_message').html(design.blocks[block_no].instruction).show();\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\n        setTimeout(\"prepareTrial();\", design.blocks[block_no].instruction_duration + 2000);\n      }\n    } else {\n      endExperiment();\n    }\n  } else {\n    setTimeout(\"prepareBlock();\", 500);\n  }\n}\n\n\n/************************************\n * CALIBRATE\n ************************************/\nfunction startCalibration() {\n  if(calibration_skip == \"skip\" || \n     calibration_skip == \"on\" ||\n     calibration_skip == \"true\"){\n    endValidation()\n  } else {\n    $('.stimuli').hide();\n    $('#calibration_dot').hide();\n    if (block_no == 0) {\n        $('#calibration_dot').click(function() {\n            calibrateHit();\n        });\n    }\n    calibration_no = 0;\n    //webgazer.clearData();\n    window.localStorage.clear();\n    //webgazer.begin();\n    t_calibration_start = new Date().getTime();\n    calibrate();\n  }\n}\n\nfunction calibrate() {\n    clearTimeout(t);\n    if (calibration_no < calibration.calibrations) {\n        $('#calibration_cnt').html(calibration.duration);\n        $c = $('#calibration_dot');\n        //var c = Math.floor(Math.random() * calibration.points.length);\n        //var p = calibration.points.splice(c, 1)[0];\n        if (calibration.points.length == 0) {\n            calibration.points = shuffle([\n                {x: \"20%\", y: \"20%\"},\n                {x: \"50%\", y: \"20%\"},\n                {x: \"80%\", y: \"20%\"},\n                {x: \"20%\", y: \"50%\"},\n                {x: \"50%\", y: \"50%\"},\n                {x: \"80%\", y: \"50%\"},\n                {x: \"20%\", y: \"80%\"},\n                {x: \"50%\", y: \"80%\"},\n                {x: \"80%\", y: \"80%\"},\n                {x: \"35%\", y: \"35%\"},\n                {x: \"65%\", y: \"35%\"},\n                {x: \"35%\", y: \"65%\"},\n                {x: \"65%\", y: \"65%\"}\n            ]);\n        }\n        var p = calibration.points.pop();\n        $c.css({\n            'left' : p.x,\n            'top' : p.y\n        });\n\n        data_current = {\n            'type': 'calibration',\n            'block': block_no,\n            'trial': calibration_no,\n            'x': p.x,\n            'y': p.y,\n            'raw': []\n        };\n\n        cam.calibrating = 1;\n        $c.show();\n        if (calibration.method == 'watch') {\n            t = setTimeout(\"autoCalibration();\", 750);\n        }\n    } else {\n        endCalibration();\n    }\n}\n\nfunction calibrateHit() {\n    var c = $('#calibration_cnt').html();\n    /*\n    if ($('#webgazerVideoFeed').css('display') == 'block') {\n        $('#webgazerVideoFeed').css({\n            top: cam.topDist,\n            left: cam.leftDist,\n            display: 'none',\n            transform: '0'\n        });\n    }*/\n    if (c > 1 && cam.calibrating == 1) {\n        $('#calibration_cnt').html(--c);\n        if (calibration.method == \"watch\") {\n            t = setTimeout(\"autoCalibration();\", 100);\n            //requestAnimationFrame(autoCalibration);\n        }\n    } else {\n        $('#calibration_cnt').html(9999);\n        clearTimeout(t);\n        cam.calibrating = 0;\n        $('#calibration_dot').hide();\n        calibration_no++;\n        saveData();\n        calibrate();\n    }\n    return false;\n}\n\nvar t;\nfunction autoCalibration() {\n    calibrateLog();\n    if (cam.calibrating == 1) {\n        calibrateHit();\n    }\n}\n\nfunction calibrateLog() {\n    var $cd = $('#calibration_dot');\n    var cx = parseInt(Math.round($cd.offset().left));\n    var cy = parseInt(Math.round($cd.offset().top));\n    webgazer.watchListener(cx, cy);\n}\n\n\nfunction endCalibration() {\n    clearTimeout(t);\n    $('#calibration_dot').unbind(\"click\");\n    startValidation();\n}\n\n\n\n/************************************\n * VALIDATE\n ************************************/\nfunction startValidation() {\n    validation_no = 0;\n    validate();\n}\n\nfunction validate() {\n    clearTimeout(t);\n    if (validation_no < validation.validations) { // if we there are validations left\n        $('#calibration_cnt').html(0);\n        var $c = $('#calibration_dot');\n        if (validation.points.length == 0) {\n            validation.points = shuffle([\n                {x: \"20%\", y: \"20%\"},\n                {x: \"80%\", y: \"20%\"},\n                {x: \"50%\", y: \"50%\"},\n                {x: \"20%\", y: \"80%\"},\n                {x: \"80%\", y: \"80%\"}\n                                        ]);\n        }\n        var vp = validation.points.pop();\n        $c.css({\n            'left' : vp.x,\n            'top' : vp.y\n        });\n        $c.show();\n        validation_current.x = Math.round($c.offset().left);\n        validation_current.y = Math.round($c.offset().top);\n\n        data_current = {\n            'type': 'validation',\n            'block': block_no,\n            'trial': validation_no,\n            'x': validation_current.x,\n            'y': validation_current.y,\n            'raw': []\n        };\n        cam.validating = 1;\n        t = setTimeout(\"validateFail();\", validation.timeout);\n//t = setTimeout('validation = 0;', 3000);\n    } else {\n        endValidation();\n    }\n}\n\nfunction validateFail() {\n  data_current.type = 'validationfail';\n  data_current.attempt = validation_attempt;\n  saveData();\n\n\n  cam.validating = 0;\n  webgazer.pause();\n\n  $('.stimuli').hide();\n  if (validation_attempt >= validation.attempts) {\n      $('#message').html('Unforuntately, the calibration failed too many times. Therefore, you can not participate in this study. Please contact <a href=\"mailto:kilian.semmelmann@rub.de\">kilian.semmelmann@rub.de</a> if you have any questions. Thanks for your interest.').show();\n  } else {\n      validation_attempt++;\n      $('#message').html('The calibration failed. <br />Please follow the instructions and try again (try ' + (validation_attempt) + ' of ' + validation.attempts + ').').show().delay(5000).fadeOut(1000);\n      $('#instruction').show();\n  }\n  // TOOD: log validation-fail\n}\n\nfunction endValidation() {\n    cam.validating = 0\n    validation_attempt = 1;\n    webgazer.pause();\n    $('#instruction_message').html(design.blocks[block_no].instruction).show();\n    setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\n    setTimeout(\"prepareTrial();\", design.blocks[block_no].instruction_duration + 2000);\n}\n\n\n\n/************************************\n * START EXPERIMENT\n ************************************/\nvar t_trial_start;\nfunction prepareTrial() {\n    status = \"prepare\";\n    $('.stimuli').hide();\n    data_current = {\n        'type': 'trial',\n        'block': block_no,\n        'trial': trial_no,\n        'raw': []\n    };\n    webgazer.resume();\n    startTrial();\n}\n\n\nfunction startTrial() {\n    t_trial_start = new Date().getTime();\n    $('#stimuli_fixation').show();\n    status = \"fixation_onset\";\n    // use start function of block-type name\n    var fn = design.blocks[block_no].type+\"Start\";\n    window[fn]();\n}\n\n\nvar heat;\nfunction endTrial() {\n    clearTimeout(t);\n    cam.recording = 0;\n    webgazer.pause();\n    status = \"end\";\n    $('.stimuli').hide();\n    trial_no++;\n    saveData();\n\n    if (trial_no < design.blocks[block_no].trials) {\n        setTimeout(\"prepareTrial();\", design.blocks[block_no].iti);\n    } else {\n        block_no++;\n        if (block_no < design.blocks.length) {\n            window.localStorage.clear();\n            webgazer.clearData();\n            //loadWebgazer();\n            //prepareBlock();\n            navigation('pause');\n        } else {\n            endExperiment();\n        }\n    }\n}\n\n\nfunction saveData() {\n  \n  data_current.raw = data_current.raw.map(function(row){\n    row.x = row.x - window.innerWidth/2;\n    row.y = row.y - window.innerHeight/2;\n    \n    if(typeof(image_pair) !== \"undefined\"){\n      Object.keys(image_pair).forEach(function(key){\n        row[key] = image_pair[key];\n      });\n    }\n    row.screen_width  = screen.width;\n    row.screen_height = screen.height;\n    //row.left_image  = image_pair.image_1;\n    //row.right_image = image_pair.image_2;\n    \n    return row;\n  });\n  \n  data.push(data_current);\n  data_current = {};\n  sendData();\n}\n\nfunction sendData() {\n  switch(parent.parent.dev_obj.context){\n    case \"localhost\":\n      data.forEach(function(trial,trial_no){\n        if (trial !== null){\n          parent.parent.eel.save_data(parent.parent.Study.get_vars.location,\n                        parent.parent.$(\"#participant_code\").val(),\n                        \"freeviewing-\" + trial_no,\n                        Papa.unparse(data[trial_no].raw))\n           parent.parent.online_save(parent.parent.Study.get_vars.location,\n                    parent.parent.$(\"#participant_code\").val() + \"-trial-\" + trial_no,\n                    parent.parent.$(\"#completion_code\").val(),\n                    parent.parent.$(\"#prehashed_code\").val(),  \n                    Papa.unparse(data[trial_no].raw),          //the data\n          save_script.split(\"|\"),\n          function(){\n            parent.parent.online_data_obj.saves_ended ++;\n          });\n          data[trial_no] = null;\n        }\n      });\n      break;\n    case \"github\":\n      data.forEach(function(trial,trial_no){\n        if (trial !== null){\n                   parent.parent.online_save(parent.parent.Study.get_vars.location,\n                    parent.parent.$(\"#participant_code\").val() + \"-trial-\" + trial_no,\n                    parent.parent.$(\"#completion_code\").val(),\n                    parent.parent.$(\"#prehashed_code\").val(),  \n                    Papa.unparse(data[trial_no].raw),          //the data\n          save_script.split(\"|\"),\n          function(){\n            parent.parent.online_data_obj.saves_ended ++;\n          });\n          data[trial_no] = null;\n        }\n      });\n      break;\n  }\n}\n\n\nfunction endExperiment() {\n  Trial.submit();\n}\n\n\n/************************************\n * SIMPLE DOT VIEWING PARADIGM\n * If you want to introduce your own paradigms, follow the same structure and extend the design array above.\n ************************************/\nvar tSimple = {};\ntSimple.positions = [];\nfunction simpleStart() {\n    // if we don't have dot-positions any more, refill the array\n    if (tSimple.positions.length == 0) {\n        tSimple.positions = shuffle([\n            {x: \"20%\", y: \"20%\"},\n            {x: \"50%\", y: \"20%\"},\n            {x: \"80%\", y: \"20%\"},\n            {x: \"20%\", y: \"50%\"},\n            {x: \"80%\", y: \"50%\"},\n            {x: \"20%\", y: \"80%\"},\n            {x: \"50%\", y: \"80%\"},\n            {x: \"80%\", y: \"80%\"}\n        ]);\n    }\n    var pos = tSimple.positions.pop();\n    $('#stimuli_dot').css({\n        'top': pos.y,\n        'left': pos.x\n    });\n    data_current.task = 'simple';\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = 'dot_' + pos.x + '_' + pos.y;\n\n    cam.recording = 1;\n    setTimeout('$(\"#stimuli_fixation\").hide(); status = \"fixation_offset\";', 1500);\n    setTimeout('simpleShowdot();', 2000);\n}\n\nfunction simpleShowdot() {\n    status = \"stimulus_onset\";\n    $(\"#stimuli_dot\").show();\n    setTimeout('status = \"stimulus_offset\"; endTrial();',  2000);\n}\n\n\n/************************************\n * POSNER VIEWING PARADIGM\n ************************************/\nfunction posnerStart() {\n    var p = Math.random() >= 0.5 ? '&gt;&gt;&gt;' : '&lt;&lt;&lt;';\n    $('#stimuli_prime').html(p);\n\n    var t = Math.random() >= 0.5 ? 'X' : 'N';\n    $('#stimuli_target').html(t);\n\n    var cond = Math.random() >= 0.7 ? 'incongruent' : 'congruent';\n\n    var tpos = 'left';\n    if ((cond == 'incongruent' && p == '&lt;&lt;&lt;') || ((cond == 'congruent' && p == '&gt;&gt;&gt;'))) {\n        tpos = 'right';\n    }\n\n    var pos = {};\n    if (tpos == 'left') {\n        pos.x = '20%';\n        pos.y = '30%';\n    } else {\n        pos.x = '80%';\n        pos.y = '30%';\n    }\n\n\n    $('#stimuli_target').css({\n        'top': pos.x,\n        'left': pos.y\n    });\n\n\n    data_current.task = 'posner';\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = 'posner_' + pos.x + '_' + pos.y + '_' + tpos;\n\n    cam.recording = 1;\n    setTimeout(\"$('#stimuli_fixation').hide();\", 1000);\n    setTimeout('posnerShowprime();', 1500);\n}\n\nfunction posnerShowprime() {\n    $('#stimuli_prime').show();\n    setTimeout(\"posnerShowTarget();\", 300);\n}\n\nfunction posnerShowTarget() {\n    $('#stimuli_prime').hide();\n    $('#stimuli_target').show();\n    setTimeout(\"endTrial();\", 1500);\n}\n\n\n/************************************\n * SMOOTH PURSUIT PARADIGM\n ************************************/\nvar tPursuit = {};\nfunction pursuitStart() {\n    $('#stimuli_fixation').hide();\n    var pos_possible = shuffle([\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"20%\"},\n        {x: \"20%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\n\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"20%\"},\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\n        {x: \"80%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\n\n        {x: \"20%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"80%\"},\n\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\n        {x: \"80%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"80%\"}\n    ]);\n    var pos = pos_possible[0];\n    $s = $('#stimuli_dot');\n    $s.css({\n        'top': pos.y,\n        'left': pos.x\n    });\n\n    $s.css({\n        'background-color': '#000'\n    });\n\n\n    data_current.task = 'pursuit';\n    data_current.x = pos.x;\n    data_current.y = pos.y;\n    data_current.condition = 'pursuit_' + pos.x + '_' + pos.y + '_' + pos.tx + '_' + pos.ty;\n\n    cam.recording = 1;\n    $s.show();\n    setTimeout(function() {\n        status = \"pursuit_start\";\n        $('#stimuli_dot').css({\n            'background-color': '#dd494b'\n        }).animate({ \"left\": pos.tx, \"top\": pos.ty },\n            2000,\n            'linear',\n        function() {\n            status = \"pursuit_end\";\n            setTimeout(\"endTrial();\", 500);\n        });\n    }, 1500);\n}\n\n\n\n/************************************\n * FREE VIEWING PARADIGM\n ************************************/\nvar tFreeview = {};\n\n\ntFreeview.stimuli = [];\n\n\n\nfunction process_freeview_image_file(){\n  console.dir(\"tFreeview\");\n  console.dir(tFreeview);\n  if(trial_order == \"random\"){\n    tFreeview.stimuli = shuffle(tFreeview.stimuli);\n  }\n  \n  \n  if(left_side == \"random\"){\n    for(var i = 0; i < tFreeview.stimuli.length; i++){\n      [left_image,right_image] = shuffle([tFreeview.stimuli[i].image_1,\n                                          tFreeview.stimuli[i].image_2]);\n      tFreeview.stimuli[i].image_1 = left_image;\n      tFreeview.stimuli[i].image_2 = right_image;\n    }\n  } else if(left_side == \"equal\" | left_side == \"counterbalance\"){\n    // select indexes to swap left and right for half the indexes\n    // all indexes:\n    var indexes = Array.from({length:tFreeview.stimuli.length},(v,k)=>k);\n        indexes = shuffle(indexes);\n    \n    //assign the first half left to right\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){          //this will only loop through half of the randomised indexes\n      var this_index = indexes[i];\n      var right_image = tFreeview.stimuli[this_index].image_1;\n      var left_image = tFreeview.stimuli[this_index].image_2;\n      tFreeview.stimuli[this_index].image_1 = left_image;\n      tFreeview.stimuli[this_index].image_2 = right_image;\n    }\n  } else if(left_side == \"image_1\"){\n    // do nothing\n  } else if(left_side == \"image_2\"){\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){\n      var right_image = tFreeview.stimuli[i].image_1;\n      var left_image = tFreeview.stimuli[i].image_2;\n      tFreeview.stimuli[i].image_1 = left_image;\n      tFreeview.stimuli[i].image_2 = right_image;\n    }\n  } else {\n    alert(\"there's a problem in the 'left_side' column - fix this before testing.\");\n  }\n};\n\n//check if the freeview file matches one of the stimuli files\nif(typeof(parent.parent.exp_json.all_stims[freeview_image_file]) !== \"undefined\"){\n  var freeview_contents = parent.parent.exp_json.all_stims[freeview_image_file];\n  var freeview_clean    = freeview_contents.map(function(row){\n    return row.filter(item => item !== null);\n  });\n  tFreeview.stimuli = Papa.parse(Papa.unparse(freeview_clean),{\n    header:true,\n    skipEmptyLines:true\n  }).data;\n  process_freeview_image_file();\n} else {\n  if(freeview_image_file.toLowerCase().indexOf(\"https://\") == -1){                //i.e. isn't stored on dropbox or some other remote location\n    freeview_image_file = \"../User/\" + freeview_image_file;\n  } \n  $.get(freeview_image_file,function(result){\n    tFreeview.stimuli = Papa.parse(result,{\n      header:true,\n      skipEmptyLines:true\n    }).data;\n    process_freeview_image_file();\n  });\n} \n\nimages_loaded = 0;\n\nfunction freeviewStart() {\n  \n  function freeview_loaded(left_image, right_image){\n    data_current.task = 'freeviewing';\n    data_current.x = $('#stimuli_img_left').css('left');\n    data_current.y = \"0%\";\n    data_current.condition = 'view_' + left_image + '_' + right_image;\n  \n    //wait until the image is loaded before proceeding\n    $(\"#stimuli_img_left\")\n  \n    cam.recording = 1;\n    setTimeout(\"$('#stimuli_fixation').hide(); status = 'fixation_offset';\", 1000);\n    setTimeout(\"freeviewShow();\", 1500);\n  }\n  \n  document.body.style.cursor = 'none';\n  \n  \n  image_pair = tFreeview.stimuli.shift();\n  \n  [left_image,right_image] = [image_pair.image_1,image_pair.image_2];\n  \n  var baseline_time = new Date().getTime();\n  \n  \n  // Make sure the images are loaded before going past fixation\n  /////////////////////////////////////////////////////////////\n  \n  $(\"#stimuli_img_left\").off(\"load\");\n  $(\"#stimuli_img_right\").off(\"load\");\n  $(\"#stimuli_img_left\").attr(\"src\" , left_image);\n  $(\"#stimuli_img_right\").attr(\"src\" , right_image);\n  \n  images_loaded = 0;\n  \n  $(\"#stimuli_img_left\").on(\"load\",function(){\n    images_loaded = images_loaded + 1;\n    if(images_loaded == 2){\n      freeview_loaded(left_image, right_image);\n    }\n  });\n  \n  $(\"#stimuli_img_right\").on(\"load\",function(){\n    images_loaded = images_loaded + 1;\n    if(images_loaded == 2){\n      freeview_loaded(left_image, right_image);\n    }\n  });\n}\n\nfunction freeviewShow() {\n    status = 'stimulus_onset';\n    $('#stimuli_img_left').show();\n    $('#stimuli_img_right').show();\n    setTimeout(\"status = 'stimulus_offset'; endTrial();\", stim_duration);\n}\n\n\n\n/************************************\n * GENERATE AND SHOW HEATMAP\n ************************************/\nfunction heatmap() {\n    // preprocess data for heatmap\n    var bins = []; // create bins and fill them\n    for (var y = 0; y < window.innerHeight; y++) {\n        for (var x = 0; x < window.innerWidth; x++) {\n            bins.push([x, y, 0]);\n        }\n    }\n    // sort fixations into bins and get max\n    var max = 0;\n    for (var i = 0; i < data[data.length - 1].raw.length; i++) {\n        var d = data[data.length - 1].raw[i];\n        var dx = Math.round(d.x);\n        var dy = Math.round(d.y);\n        var pos = (dy * window.innerWidth) + dx;\n        if (pos <= bins.length && pos >= 0) {\n            bins[pos][2] += 1;\n            if (bins[pos][2] > max) {\n                max = bins[pos][2];\n            }\n        } else {\n            console.log('dropped ' + pos);\n        }\n    }\n\n    // remove empty bins\n    var binsc = [];\n    for (var i = 0; i < bins.length; i++) {\n        if (bins[i][2] != 0) {\n            binsc.push(bins[i]);\n        }\n    }\n\n    // create heatmap\n    $('body').append(\"<canvas id=\\\"heatmap\\\"></canvas>\");\n    $('#heatmap').attr('width', window.innerWidth);\n    $('#heatmap').attr('height', window.innerHeight);\n    heat = simpleheat('heatmap');\n    heat.resize();\n    heat.radius(30,50);\n    heat.max(max).data(binsc).draw();\n\n    $('#stimuli_img').show();\n}\n\n\n/**\n * navigation\n */\nvar page = 1;\nvar oldpage = -1;\nvar d_consent = undefined;\nfunction navigation(direction) {\n  $('#message').hide();\n\n  $('#instruction_continue_text').html(\"&gt;\");\n\n\n  \n\tif (page == 2 && direction == 'continue') {\n    if (cam.initialized == 1) {\n      $('#instruction').fadeOut(1000);\n      setTimeout(\"prepareBlock();\", 2000);\n    }\n  } else if (page == 2 && direction == 'pause') {\n    $('#instruction_continue').html(\"continue\").css({'font-size': '1.7em'});\n    $('#instruction_2').find(\"h1\").html('short pause (block ' + block_no + ' of ' + design.blocks.length + \")\");\n    $('#setup_first').hide();\n    $('#setup_after').show();\n\n    $('#instruction').show(function() {\n      if (block_no == design.blocks.length) {\n        page++;\n      } else {\n        $('#instruction_2').fadeIn(300);\n        $('#webgazerVideoFeed').show();\n      }\n    });\n  } else if  (direction == 'continue') {\n    page++;\n  } else if (direction == 'back') {\n    page--;\n  }\n  page = page < 1 ? 1 : page;\n  page = page > $('.instruction_page').length ? $('.instruction_page').length : page;\n  page <= 1 ? $('#instruction_back').hide() : $('#instruction_back').show();\n  page >= $('.instruction_page').length ? $('#instruction_continue').hide() : $('#instruction_continue').show();\n  page >= 3 ? $('#instruction_back,#instruction_continue').hide() : \"\";\n  block_no > 0 ? $('#instruction_back').hide() : \"\";\n\n  if (oldpage != page) { // if we stay at the same page, we avoid unnecessary animations\n    $('.instruction_page').hide();\n    $('#instruction_'+page).fadeIn(300);\n  }\n  // start up webcam\n  if (page == 2 && cam.initialized == 0) {\n      loadWebgazer();\n  }\n  oldpage = page;\n}\n\n\nvar cl;\nvar t_start = new Date().getTime();\n$('document').ready(function() {\n  $('#stimulus').hide();\n  $('#calibration_dot').hide();\n  $('#setup_after').hide();\n  $('#instruction_message').hide();\n  $('#therest').hide();\n\n\n  $('#start_button').click(function() {\n    $(this).hide();\n    prepareBlock();\n  });\n\n  $('body').keypress(function(e) {\n    //e.preventDefault();\n    switch(e.keyCode) {\n\n    }\n  });\n\n  $('#instruction_continue').click(function() {\n    navigation('continue');\n  });\n\n  $('#instruction_back').click(function() {\n    navigation('back');\n  });\n\n  $( \"#f_crowdflowerid\" ).tooltip({\n    show: {\n      effect: \"slideDown\",\n      delay: 250\n    }\n  });\n\n\n  /*\n  $('#f_birthday').datepicker({\n      dateFormat: 'yy/mm/dd',\n      changeYear: true,\n      changeMonth: true,\n      yearRange: \"-100:+0\"\n  });\n  */\n  var select = $('#f_birthday');\n  for (var i=18;i <= 100; i++){\n    select.append('<option value=\"'+i+'\">'+i+'</option>')\n  }\n\n  window.localStorage.clear();\n    \n  var ss = window.location.hash.substring(1);\n  $('#cf_reference,#asd_reference,#rub_reference,#cf_code').hide();\n  if (ss == \"cf\") { // crowdflower-reference\n    $('#cf_reference,#cf_code').show();\n  } else if (ss == \"rub\") {\n    $('#rub_reference').show();\n\t} else {\t\t\n    $('#asd_reference').show();\n\t}\n\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n  var is_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  if (is_chrome || is_firefox) {\n    page = 0;\n    navigation('start');\n  } else {\n    $('#instruction').hide();\n    $('#message').html('Thank you very much for your interest in our study.<br /><br />Unfortunately, your browser is not supported by our website. To participate, you need either the browser \"Google Chrome\" or \"Firefox\".<br /><br />Do download one of these securely and free of charge, please follow one of these links: <a href=\"https://www.google.com/chrome/browser/desktop/\" target=\"_blank\">Google Chrome</a> or <a href=\"https://www.mozilla.org/de/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>').show();\n  }\n});\n\n\n/**\n function drawLoop() {\n    requestAnimFrame(drawLoop);\n    var p = webgazer.getCurrentPrediction();\n    if (p !== null) {\n        console.log(p);\n        $('body').append('<span class=\"p\" style=\"top: '+p.y+'px; left: '+p.x+'px\"></span>');\n        measurements++;\n    }\n    t = (new Date().getTime() - start)/1000;\n    cam.overlay.getContext('2d').clearRect(0,0,cam.width,cam.height);\n    if (cl.getCurrentPosition()) {\n        //console.log(cl.getCurrentPosition()[0]);\n        //cl.draw(overlay);\n    }\n}\n */\n\n\n\n\n\n\nwindow.onbeforeunload = function() {\n  //webgazer.end(); //Uncomment if you want to save the data even if you reload the page.\n}\n</script>\n", "cam_uncertainty": "<!--\n-- Once Ant hears from Indu - finalise the stimuli list\n\n-- choose up to three times to unlock a video\n\n-- 1 vs. 1\n-- 1 vs. 2\n-- 1 vs. 3\n-- 2 vs. 2\n-- 2 vs. 3\n-- 3 vs. 3\n\nLocks are counterbalanced between social vs. nonsocial\n\n(look at Indu's matlab script to confirm). \n\n--look through a datasheet after collecting one participant (make sure it's all gdpr)\n\n\n\nDebrief - give the participant a \"withdrawal\" code (e.g. their completion code). Make it clear to them that they can use this to withdraw.\n\n\n\n--ask Indu to send me the info and consent sheets (or the whole ethics; and debrief).\n\nwrite a protocol for Indu and her undergrad\n-->\n\n<style>\n#everything_div{\n  margin:auto;\n  width:725px;\n  /* padding:50px; */\n  height:400px;\n  text-align: center;\n  position:absolute;\n  top:0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n}\n\n#left_img{\n  position:absolute;\n  left:0px;\n  top:0px;\n}\n\n#right_img{\n  position:absolute;\n  left:400px;\n  top:0px;\n}\n#block_left_lock_1{\n  left:125px;\n}\n#block_left_lock_2{\n  left:0px;\n}\n#block_left_lock_3{\n  left:250px;\n}\n#block_right_lock_1{\n  left:525px;\n}\n#block_right_lock_2{\n  left:400px;\n}\n#block_right_lock_3{\n  left:650px;\n}\n#countdown_div{\n  text-align: center;\n  padding:150px;\n  z-index:10;\n  font-size:100px;\n  background-color:white;\n  position:relative;\n  display:none;\n}\n#left_lock_1{\n  left:125px;\n}\n#left_lock_2{\n  left:0px;\n}\n#left_lock_3{\n  left:250px;\n}\n#right_lock_1{\n  left:525px;\n}\n#right_lock_2{\n  left:400px;\n}\n#right_lock_3{\n  left:650px;\n}\n.block_lock{\n  position:absolute;\n  width:50px;\n  height:50px;\n  z-index:2;\n  display:none;\n  top:0px;\n}\n.lock_img{\n  position:absolute;\n  width:50px;\n  height:50px;\n  z-index:2;\n  display:none;\n  top:0px;\n}\n.stim_style{\n  height:325px;\n  width:325px;\n  z-index:1;\n}\n.video_stim{\n  margin:auto;\n  display:none;\n  height:400px;\n  width:600px;\n  text-align: center;\n  position:absolute;\n  top:0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\tz-index:5;\n}\n</style>\n<div id=\"everything_div\">\n  \n  <img id='left_img' src=\"{{left_back}}\" class=\"stim_style\" />\n  <video id=\"left_video\" class=\"stim_style video_stim\" muted>\n    <source src=\"{{left_video}}\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n  </video>\n  <img id='right_img' src=\"{{right_back}}\" class=\"stim_style\" />\n  <video id=\"right_video\"  class=\"stim_style video_stim\" muted>\n    <source src=\"{{right_video}}\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n  </video>\n  <img id=\"left_lock_1\"        class=\"lock_img left_lock\"  src=\"{{lock_img}}\"/>\n  <img id=\"left_lock_2\"        class=\"lock_img left_lock\"  src=\"{{lock_img}}\"/>\n  <img id=\"left_lock_3\"        class=\"lock_img left_lock\"  src=\"{{lock_img}}\"/>\n  <img id=\"right_lock_1\"       class=\"lock_img right_lock\" src=\"{{lock_img}}\"/>\n  <img id=\"right_lock_2\"       class=\"lock_img right_lock\" src=\"{{lock_img}}\"/>\n  <img id=\"right_lock_3\"       class=\"lock_img right_lock\" src=\"{{lock_img}}\"/>\n  <img id=\"block_left_lock_1\"  class=\"block_lock\"          src=\"{{block_lock_img}}\"/>\n  <img id=\"block_left_lock_2\"  class=\"block_lock\"          src=\"{{block_lock_img}}\"/>\n  <img id=\"block_left_lock_3\"  class=\"block_lock\"          src=\"{{block_lock_img}}\"/>\n  <img id=\"block_right_lock_1\" class=\"block_lock\"          src=\"{{block_lock_img}}\"/>\n  <img id=\"block_right_lock_2\" class=\"block_lock\"          src=\"{{block_lock_img}}\"/>\n  <img id=\"block_right_lock_3\" class=\"block_lock\"          src=\"{{block_lock_img}}\"/>\n  <div id=\"countdown_div\"></div>\n</div>\n<input type=\"hidden\" id=\"left_right_chosen\" name=\"left_right_chosen\">\n<input type=\"hidden\" id=\"social_chosen\"     name=\"social_chosen\">\n<input type=\"hidden\" id=\"lock_1_rt\"         name=\"lock_1_rt\">\n<input type=\"hidden\" id=\"lock_2_rt\"         name=\"lock_2_rt\">\n<input type=\"hidden\" id=\"lock_3_rt\"         name=\"lock_3_rt\">\n<input type=\"hidden\" id=\"vid_rt\"            name=\"vid_rt\">\n\n<script>\nlocks_obj = {\n  left_locks:   \"{{left_locks}}\",\n  right_locks:  \"{{right_locks}}\",\n  left_social:  \"{{left_social}}\",\n  right_social: \"{{right_social}}\",\n  locks_clicked: 0\n}\n$(\"#left_lock_1\").show();\n\nif(locks_obj.left_locks > 1){\n  $(\"#left_lock_2\").show();\n}\nif(locks_obj.left_locks == 3){\n  $(\"#left_lock_3\").show();\n}\n\n\n$(\"#right_lock_1\").show();\nif(locks_obj.right_locks > 1){\n  $(\"#right_lock_2\").show();\n}\nif(locks_obj.right_locks == 3){\n  $(\"#right_lock_3\").show();\n}\n\nfunction lock_click(this_id){\n  $(\".lock_img\").unbind();\n  setTimeout(function(){\n    bind_lock();\n  },{{lock_time}});\n  \n  \n  var left_right_lock = this_id.split(\"_\")[0];\n  \n  var opposite_lock = left_right_lock == \"left\" ? \"right\" : \"left\";\n  \n  $(\".\" + opposite_lock + \"_lock\").hide();\n  \n  //block_left_lock_1\n  var locks_loop = parseFloat(locks_obj[opposite_lock + \"_locks\"]) + 1;\n  for(var i = 1; i < locks_loop; i++){\n    \n    $(\"#block_\" + opposite_lock + \"_lock_\" + i).show();\n    \n  }\n  \n  \n  locks_obj.locks_clicked++;\n  $(\"#lock_\" + locks_obj.locks_clicked + \"_rt\").val(Trial.elapsed());\n  $(\"#\" + this_id).fadeOut({{lock_time}});\n  $(\".lock_img\").unbind();\n  if($(\".\" + left_right_lock + \"_lock:visible\").length == 1){\n    $(\"#left_right_chosen\").val(left_right_lock);\n    $(\"#social_chosen\").val(locks_obj[left_right_lock + \"_social\"]);\n    $(\".block_lock\").hide();\n    setTimeout(function(){\n      $(\"#\" + left_right_lock + \"_img\").css(\"z-index\",3);\n      $(\"#\" + left_right_lock + \"_img\").animate({\n        left :  \"0px\",\n        top  :  \"0px\",\n        width:  \"100%\",\n        height: \"100%\"\n      },function(){\n        \n        \n        if(left_right_lock == \"left\"){\n          var countdown = \"{{left_timer}}\";\n        } else {\n          var countdown = \"{{right_timer}}\";\n        }\n        // add countdown here\n        $(\"#countdown_div\").show();\n        $(\"#countdown_div\").html(countdown);\n        var countdown_interval = setInterval(function(){\n          countdown--;\n          $(\"#countdown_div\").html(countdown);\n          if(countdown < 0){\n            $(\"#countdown_div\").hide();\n            clearInterval(countdown_interval);\n            $(\"#\" + left_right_lock + \"_video\").show();\n            $(\"#\" + left_right_lock + \"_video\")[0].play();\n            $(\"#\" + left_right_lock  +\"_video\").on('ended',function(){\n              $(\"#vid_rt\").val(Trial.elapsed());\n              Trial.submit();\n            });    \n          }\n        },1000);\n      });\n    },\"{{lock_time}}\");    \n  }\n}\n\nfunction bind_lock(){\n  $(\".lock_img\").on(\"click\",function(){\n    this_id = $(this)[0].id;\n    lock_click(this_id);\n  });\n}\nbind_lock()\n</script>", "asdf": "", "gdfdg": "asdf\nasdf", "gfds": "", "mousetracker": "<!--\n\n/*\n* Mousetracking code for running experiments on Collector.\n* This code should also hopefully be helpful for running mousetracking without Collector\n* Stimuli in the default version of this based on videos by Dr. Robrecht van der Wel\n* Authors: Dr. Anthony Haffey, Dr Kristian Tempelmans Plat, Prasannajeet Mane\n*/\n\n-->\n<style>\n/* elements by class */\n.movie_area{\n\tposition:      absolute;\n\twidth:         1024px;\n\theight:        768px;\n\ttop:           1px;\n\tleft:          0px;\n\tz-index:       4;\n}\n\n.start_tracking{\n\tposition:      absolute;\n\ttop:           726px;\n\tleft:          502px;\n\tz-index:       5;\n\tborder-style:  solid;\n\tborder-color:  red;\n\twidth:         20px;\n\theight:        20px;\n\tborder-radius: 10px;\n\tdisplay:       none;\n}\n\n.start_video{\n  position:         absolute;\n  top:              726px;\n  left:             502px;\n\tz-index:          5;\n\tborder:           none;\n\theight:           20px;\n\twidth:            20px;\n\tdisplay:          none;\n\tborder-radius:    50%;\n\tbackground-color: green;\n}\n\n/* elements by id */\n\n#background{\n\tposition: absolute;\n\ttop:      1px;\n\twidth:    1024px;\n\theight:   768px;\n\tz-index:  2;\n}\n#canvas{\n  position:     absolute;\n\ttop:          1px;\n\tleft:         1px;\n  border-style: solid;\n  border-color: black;\n  height:       1024px;\n  width:        768x;\n}\n#correct_button{\n\tposition: absolute;\n\ttop:      400px;\n\tleft:     437px;\n\tz-index:  6;\n}\n#error_button{\n\tposition: absolute;\n\ttop:      400px;\n\tleft:     390px;\n\tz-index:  6;\n}\n#error_feedback{\n\tposition: absolute;\n\ttop:      234px;\n\tleft:     362px;\n\twidth:    300;\n\theight:   300px;\n\tz-index:  7;\n\tdisplay:  none;\n}\n#loading_vid{\n  position: absolute;\n\tmargin:   auto;\n\twidth:    400px;\n\ttop:      50%;\n}\n#pic_default{\n\tposition: absolute;\n\twidth:    1024px;\n\theight:   768px;\n\tz-index:  2;\n}\n#prepare_screen{\n\tposition: absolute;\n\ttop:      1px;\n\tleft:     1px;\n\twidth:    1024px;\n\theight:   768px;\n}\n#processing_div{\n  display:  none;\n}\n#response_area{\n\tposition: absolute;\n  width:    1024px;\n  height:   768px;\n\ttop:      1px;\n\tleft:     1px;\n\tz-index:  1;\n}\n#response_area_target{\n\tposition: absolute;\n  width:    1024px;\n  height:   768px;\n\ttop:      1px;\n\tleft:     1px;\n\tz-index:  2;\n}\n#resp_left{\n\tposition:         absolute;\n\twidth:            190px;\n\theight:           70px;\n\ttop:              128px;\n\tleft:             70px;\n\tz-index:          5;\n\tbackground-color: transparent;\n\tborder:           none;\n}\n#resp_right{\n\tposition:         absolute;\n\twidth:            190px;\n\theight:           70px;\n\ttop:              128px;\n\tleft:             766px;\n\tz-index:          5;\n\tbackground-color: transparent;\n\tborder:           none;\n}\n#rotated_canvas{\n  position:     relative;\n  border-style: solid;\n  border-color: black;\n  height:       1024px;\n  width:        768px;\n}\n#too_slow_button{\n\tposition: absolute;\n\ttop:      400px;\n\tleft:     390px;\n\tz-index:  6;\n}\n#too_slow_feedback{\n\tposition: absolute;\n\ttop:      234px;\n\tleft:     362px;\n\tz-index:  7;\n\tdisplay:  none;\n}\n#trial_content_div{\n  position: absolute;\n  top:      1;\n  bottom:   0;\n  left:     0;\n  right:    0;\n  margin:   auto;\n  height:   768px;\n  width:    1024px;\n  position: relative;\n}\n</style>\n\n\n<div id=\"trial_content_div\">\n  <span id=\"replaceable_movie_span\"></span>\n  <input id=\"resp_left\"        type=\"button\"                       value = \"\"                                                           style=\"display:none\">\n  <input id=\"resp_right\"       type=\"button\"                       value = \"\"                                                           style=\"display:none\">\n  <input id=\"too_slow_button\"  type=\"button\" class=\"process_trial\" value = \"Please respond faster next time\"                            style=\"display:none\">\n  <input id=\"error_button\"     type=\"button\" class=\"process_trial\" value = \"Please click on the ball next time\"                         style=\"display:none\">\n  <input id=\"correct_button\"   type=\"button\" class=\"process_trial\" value = \"Click here to continue\"                                     style=\"display:none\">\n  <input id=\"RequiredResponse\" type=\"text\"                         value = \"{{correctid}}\"                      name=\"RequiredResponse\" style=\"display:none\">\n    \t\t\t\n  <div id=\"prepare_screen\">\n  \t<img id=\"response_area\"         src = \"{{pic_now}}\"       style = \"display:none\">\n  \t<img id=\"response_area_target\"  src = \"{{pic_target}}\"    style = \"display:none\">\n  \t<img id=\"pic_default\"           src = \"{{pic_default}}\"   style = \"display:none\">\n  \t<img id=\"background\"            src = \"{{background}}\"    style = \"display:none\">\n  </div>\n  \n  <div id=\"error_feedback\">\n    <img id=\"ErrorImg\"   src = \"../User/Stimuli/mt_exemplar/Errorimg.png\">\n  </div>\n    \n  <div id=\"too_slow_feedback\">\n    <img id=\"TooSlowImg\" src = \"../User/Stimuli/mt_exemplar/TooSlow.png?dl=0\">\n  </div>\n    \n  <textarea name=\"x_array\" style=\"display:none\" id=\"x_array_textarea\"></textarea>\n  <textarea name=\"y_array\" style=\"display:none\" id=\"y_array_textarea\"></textarea>\n    \n  <textarea name=\"ActualResponseId\"    id=\"ActualResponseId\"    style=\"display:none\"></textarea>\n  <textarea name=\"correct_response_id\" id=\"correct_response_id\" style=\"display:none\"></textarea>\n  <!-- ActualResponse will be stored as follows: 0 = too slow; 1 = left; 2 = right; -->\n  <!-- CorrectResponse will be stored as follows: 1 = should be left; 2 = should be right -->\n    \n  <input type=\"hidden\" name=\"time_to_start_tracking\" id=\"start_tracking_input\">\n</div>   \n\n<div id='loading_vid'>Loading the trial... If it doesn't load within 30 seconds the task will try to reload the stimuli. \n                      If it doesn't load within a couple of minutes, please contact the researcher who recruited you. \n                      DO not refresh the page! </div>\n\n<input type=\"hidden\" name=\"error_message\"     id=\"error_message\">\n<input type=\"hidden\" name=\"trial_accuracy\"    id=\"trial_accuracy\">\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n\n\n<script>\nCorrectSide          = \"{{correctid}}\";\nskip_processing_view = \"{{skip_line_display}}\";\nphase_type           = \"{{phase}}\";\nshuffle_type         = \"{{shuffle 1}}\";\nbackground_img       = \"{{background}}\";\nvideo_src            = \"{{movie}}\";\n\ndraw_trial();\n\nvar viewportWidth  = $(\"body\").innerWidth();\nvar viewportHeight = $(\"body\").innerHeight();\n\nvar response_window_timeout;\n\nTracker_stopper             = 1;                                                // to stop attempts at tracking before the task is ready.\nbackground_and_video_loaded = 0;\n\nif (CorrectSide == \"Left\") {\n  CorrectResponseVal = 1;\n} else if (CorrectSide == \"Right\") {\n  CorrectResponseVal = 2;\n}\n\n$(\"#correct_response_id\").val(CorrectResponseVal);\n\ntimed_check_of_video_loading = setInterval (function(){\n  if(background_and_video_loaded !== 2){\n    bootbox.alert(\"video slow to load, trying to reload it\");\n    draw_trial();\n  } else {\n    clearInterval(timed_check_of_video_loading);\n  }\n},30000);\n\n/*\n* Functions\n*/\nfunction auto_start_tracking(){\n  clicked_start = 1;\n  $(\".movie_area\").hide();\n  $(\".start_tracking\").hide();\n  \n  if (Slow_state == 0){\n    $(\"#resp_left\").show();\n    $(\"#resp_right\").show();\n  }\n  \n  Tracker_stopper         = 0;\n  x_array                 = [];\n  y_array                 = [];\n  baseline_time           = (new Date()).getTime();\n  timestamp_array         = [];\n  response_window_timeout = setTimeout(response_window,3000);\n  $(\".start_tracking_input\").val(baseline_time-post_video_baseline_time);\n  \n  $(\"#background, #resp_left, #resp_right,#prepare_screen\").mousemove(function(event){\n    var _mouseX = event.clientX;\n    var _mouseY = event.clientY;\n    var offset = $(\".movie_area\").offset(); \n    _mouseX -= offset.left;\n    _mouseY -= offset.top;\n    new_x = _mouseX;\n    new_y = _mouseY;\n    x_array.push(_mouseX);\n    y_array.push(_mouseY);\n    this_timestamp = (new Date()).getTime()-baseline_time;\n    timestamp_array.push(this_timestamp);\n    $(\"#x_array_textarea\").val(x_array);\n    $(\"#y_array_textarea\").val(y_array);\n    if(new_y < 686 & changed_pic == 0){                                         //this is 50px above the midpoint of the .start_tracking button.\n      changed_pic = 1;  \n      $('#response_area_target').show();\n    }\n  });\n};\n\nfunction draw_movie(){\n  var video_html = '<video id=\"movie_area\" class=\"movie_area\" style = \"display:none\">'+\n                      '<source src=\"{{movie}}\" type=\"video/mp4\">'+\n                       ' Your browser does not support the video tag.'+\n                    '</video>'+\n                    '<input id=\"start_video\"    class=\"start_video\"     type=\"button\" style=\"display:none\">'+ \n                    '<input id=\"start_tracking\" class=\"start_tracking\"  type=\"button\" style=\"display:none\">';\n  $(\"#replaceable_movie_span\").html(video_html);\n\n  $(\".movie_area\").on('loadstart', function() { \n    if(background_and_video_loaded > 0){\n      background_and_video_loaded = 2;\n      $(\"#loading_vid\").hide();\n      $(\"#background\").show();\n      $(\".start_video\").show();\n    } else {\n      background_and_video_loaded = 1;\n    }\n  })\n  .on('error', function() { \n    console.log(\"error loading movie\");\n  });\n  myVideo = document.getElementById(\"movie_area\");\n}\n\n\nfunction draw_trial(){\n  draw_movie();\n  $(\".start_video\").on(\"click\", function(){\n    function playPause() { \n      if (myVideo.paused) {\n        myVideo.play(); \n      } else {\n        myVideo.pause(); \n      }\n    }\n    changed_pic = 0;\n    clicked_start = 0;\n    $(\"#background\").hide();\n    $(\".start_tracking\").hide();\n    $(\".start_video\").hide();\n    $(\"#response_area\").hide();\n    $(\"#response_area_target\").hide();                                          //for quick movement specifically\n    $(\".movie_area\").show();\n    playPause();\n    $('.movie_area').show().trigger(\"play\").bind('ended', function () {\n      post_video_baseline_time = (new Date()).getTime();\n      $('.start_tracking').show();\n      $(\"#response_area\").show();\n      $(\".movie_area\").hide();\n    });\n  \tSlow_state = 0;\n  \tTimeLimit_stopper = 0;\n  });\n  $('.start_tracking').on('click', function(){\n    auto_start_tracking();\n  });    \n}\n\nfunction participant_error(long_message,short_error){\n  clearTimeout(response_window_timeout);                                        // cancel timer \n  if(phase_type.toLowerCase().indexOf(\"prac\") !== -1){\n    bootbox.alert (\"Restarting practice trial\");\n    $(\"#too_slow_feedback\").hide();                                             //only necessary for the too slow click trials\n    $(\"#too_slow_button\").hide();                                               //only necessary for the too slow click trials\n    $(\"#error_button\").hide();                                                  //only necessary for wrong trials\n    draw_trial();\n  } else {\n    bootbox.alert(\"Moving on to next trial.\", function(){                       //these errors always have mouse co-ordinates, so need to be reported before processing the trial.\n      process_trial_function(short_error);\n    }); \n  }\n  bootbox.alert(long_message);\n}\n\nfunction process_trial_function(error_message){\n  $(\"#error_message\").val(error_message);\n    \n\n  /* Trajectory start and end */\n\n  start_x = parseFloat($(\".start_tracking\").css(\"left\").replace(\"px\",\"\")) + \n            parseFloat($(\".start_tracking\").css(\"width\").replace(\"px\",\"\"))/2; \n  start_y = parseFloat($(\".start_tracking\").css(\"top\").replace(\"px\",\"\")) + \n            parseFloat($(\".start_tracking\").css(\"height\").replace(\"px\",\"\"))/2;\n    \n  if(CorrectSide == \"Left\"){                                                  // end_x and end_y depend on the trial type (whether it ends on the left or right)\n    end_x   =  parseFloat($(\"#resp_left\").css(\"left\").replace(\"px\",\"\"));    \n    end_y   =  parseFloat($(\"#resp_left\").css(\"top\").replace(\"px\",\"\")) + \n               parseFloat($(\"#resp_left\").css(\"height\").replace(\"px\",\"\"));\n  } else {                                                                    // assume it is right\n    end_x   =  parseFloat($(\"#resp_right\").css(\"left\").replace(\"px\",\"\")) + \n               parseFloat($(\"#resp_left\").css(\"width\").replace(\"px\",\"\"));   \n    end_y   =  parseFloat($(\"#resp_right\").css(\"top\").replace(\"px\",\"\")) + \n               parseFloat($(\"#resp_left\").css(\"height\").replace(\"px\",\"\"));\n  }\n    \n  /* Line properties */                                                       \n  m       = (start_y - end_y)/(end_x-start_x);                                //y = mx+c\n  c       = start_y - m*start_x;\n  \n  auc_object = {\n    calculate_x_gap: function(y_value, \n                              x_value){\n      quickest_x = (y_value-c)/m;\n      return (quickest_x-x_value);\n    }\n  }\n  x_gap_array = [];\n  y_gap_array = [];\n    \n  /* Trajectory rotation */\n\n  // rotate here\n  var deltaX = end_x - start_x;\n  var deltaY = start_y - end_y;\n  var rad = Math.atan2(deltaY, deltaX); // In radians\n  var deg = rad * (180 / Math.PI);\n  \n  [rot_end_x,rot_end_y] = rotate(start_x,start_y,end_x,end_y,-deg);\n  rotated_x = [];\n  rotated_y = [];\n    \n    if(typeof(parent.x_array) !== \"undefined\"){\n      for(i=0;i<parent.x_array.length;i++){\n        \n        [new_x_val,new_y_val] = rotate(start_x,start_y,parent.x_array[i],parent.y_array[i],-deg);\n        rotated_x.push(new_x_val);\n        rotated_y.push(new_y_val);\n      }\n      \n      parent.x_line_start = start_x;\n    \tparent.x_line_end = rot_end_x;\n    \tparent.y_line_start = start_y;\n    \tparent.y_line_end = rot_end_y;\n      \n      canvas.appendChild(createLine(start_x, start_y, end_x, end_y,\"black\"));\n      rotated_canvas.appendChild(createLine(start_x, start_y, rot_end_x, rot_end_y,\"black\"));\n      \n      // process rotated data - identify y-values that are equidistant on the x-axis //\n      \n      // use rounded up values\n      for(i=0;i<rotated_x.length;i++){\n        rotated_x[i]=Math.ceil(rotated_x[i]);\n        rotated_y[i]=Math.ceil(rotated_y[i]);\n      }\n  \t\n      /* Filling of gaps by interpolation */\n       \t\n      every_y_array=[];\n      every_x_array=[];\n      every_timestamp_array=[];\n      \n      for(i=0;i<rotated_x.length-1;i++){\n        var x_gap_size= rotated_x[i+1]-rotated_x[i];\n        every_y_array.push(rotated_y[i]);\n        every_x_array.push(rotated_x[i]);\n        every_timestamp_array.push(parent.timestamp_array[i]);\n      \n        if(x_gap_size > 1){\n          for(j=0;j<x_gap_size-1;j++){\n            new_x_value = rotated_x[i]+1+j;\n            new_y_value = rotated_y[i]+(1+j)*(rotated_y[i+1]-rotated_y[i])/x_gap_size;\n      \t  new_time_value = parent.timestamp_array[i]+(1+j)*(parent.timestamp_array[i+1] - parent.timestamp_array[i])/x_gap_size;\n            every_x_array.push(new_x_value);\n            every_y_array.push(new_y_value);\n      \t  every_timestamp_array.push(new_time_value);\n          }\n        }\n        \n      \telse if(x_gap_size < -1){\n      \t\tvar inverted_gap_size = x_gap_size*(-1);\n      \t\tfor(j=0;j<inverted_gap_size-1;j++){\n      \t\t\tnew_x_value = rotated_x[i]-1-j;\n      \t\t\tnew_y_value = rotated_y[i]-(1+j)*(rotated_y[i+1]-rotated_y[i])/x_gap_size;\n      \t\t\tnew_time_value = parent.timestamp_array[i]+(1+j)*(parent.timestamp_array[i+1] - parent.timestamp_array[i])/inverted_gap_size;\n      \t\t\tevery_x_array.push(new_x_value);\n      \t\t\tevery_y_array.push(new_y_value);\n      \t\t\tevery_timestamp_array.push(new_time_value);\n      \t\t}\n      \t}\n      } \n  \n      // Add last value of rotated_x and rotated_y to every_x_array and every_y_array, respectively, as these values were not included in the iterations above\n      every_x_array.push(rotated_x[rotated_x.length-1]);\n      every_y_array.push(rotated_y[rotated_y.length-1]);\n      every_timestamp_array.push(parent.timestamp_array[parent.timestamp_array.length-1]);\n      \n      /* Get reaction time */\n          \n      // X, Y & T arrays; RT (corrected for the fact that timepoint 1 in timestamp_array has a value of 1 instead of 0)\n      // But not sure if this offset of 1 ms is also reflected in final timepoint\n      ReactionTime = parent.timestamp_array[parent.timestamp_array.length-1];\n      console.dir(ReactionTime);\n      $(\"#RT\").val(ReactionTime);\n      \n  \t/* Average Y distance calculation */\n  \t\n      var y_sum = 0;\n      for( var i = 0; i < every_y_array.length; i++ ){\n          y_sum += every_y_array[i];\n      }\n      \n      // y_avg is now calculated with difference between horizontal line and recorded Y value\n      // instead of with absolute y values only\n      \n      var y_avg = rot_end_y - (y_sum/every_y_array.length);\n      $(\"#y_average_dist\").val(y_avg);\n      \n      \n      // calculate standard deviation \n      y_stdev = calculate_sd(every_y_array);\n      \n      $(\"#y_stdev_dist\").val(y_stdev);\n      \n      for(i=end_y;i<start_y;i++){\n        y_gap_array[i-end_y]=i;\n      }\n      for(i=end_y;i<start_y;i++){\n        y_gap_array[i-end_y]=i;\n      }\n      \n      // add coloring in to convey time\n      \n      // based on Madox on http://stackoverflow.com/questions/4270485/drawing-lines-on-html-page\n      \n      \n  /* calculate maximum deviation from curve */\n      //Max_dev is the highest value (e.g. would pick 20 instead of -100)\n      //Max_dev is the highest deviation from 0 and can be either positive or negative\n      \n      var y_diff = [];\n      for(var i=0; i<every_y_array.length; i++) {\n      \ty_diff.push(rot_end_y - every_y_array[i]);\n      }\n      \n      var diff_max = Math.max.apply(Math,y_diff);\n      var diff_min = Math.min.apply(Math,y_diff);\n      \n      var abs_diff_max = Math.abs(diff_max);\n      var abs_diff_min = Math.abs(diff_min);\n      \n      var Max_dev = [];\n      \n      if ((abs_diff_max - abs_diff_min) > 0){\n          Max_dev.push(diff_max);\n      }\n      else if ((abs_diff_max - abs_diff_min) < 0) {\n      \tMax_dev.push(diff_min);\n      }\n      else if ((abs_diff_max - abs_diff_min) == 0) {\n      \tMax_dev.push(0);\n      }\n      \n      \n   /* Calculate number of X flips and Y flips, based on original, non-rotated trajectory */\n      \n      // Currently, also a 'jitter count' is kept. This saves how many times a flip occurs for just one value (e.g. x_direction_memory: 1,1,1,1,1,-1,1,1,1)\n      //   This is most probably an artefact, caused by 1. miniscule hand movement 2. rough surface\n      //   3. most likely: issue with updating of picture when trajectory crosses the 600 px line.\n      // \t 'filtered_x_flips' and 'filtered_y_flips' solve this issue, but are currently not displayed in the post-trial response boxes.\n      //   Another possible issue: length of arrays and delta_arrays not the same. But this could be because delta_arrays probably begins at the first actual change.\n      \n      x_flips = 0;\n      filtered_x_flips = 0;\n      x_delta_array = [];\n      x_direction_memory = [];\n      x_jitter_count = 0;\n      y_flips = 0;\n      filtered_y_flips = 0;\n      y_delta_array = [];\n      y_direction_memory = [];\n      y_jitter_count = 0;\n      \n      for (var i=1; i<parent.x_array.length; i++)  {\n      x_delta_array.push(parent.x_array[i] - parent.x_array[i-1]);}\t\t\n      \n      for (var i=0; i<x_delta_array.length; i++)   {\n      \tif (x_delta_array[i] == 0) {\n      \t\tx_direction_memory.push(x_direction_memory[i-1]);}\n      \telse if (x_delta_array[i] > 0) {\n      \t\tx_direction_memory.push(1);}\n      \telse if (x_delta_array[i] < 0)  {\n      \t\tx_direction_memory.push(-1);}\n      \t}\n      \n      for (var i=1; i<x_direction_memory.length; i++)   {\n      \tif ((x_direction_memory[i] * x_direction_memory[i-1]) == -1) {\n      \t\tx_flips += 1;}\n      \tif ((x_direction_memory[i] != x_direction_memory[i-1]) && (x_direction_memory[i] != x_direction_memory[i+1]))\n      \t\t{x_jitter_count += 1;}\n      \t} \n      \n      if (x_jitter_count > 0) {\n      filtered_x_flips = x_flips - (2*x_jitter_count);}\n      \n      \n      for (var i=1; i<parent.y_array.length; i++)  {\n      y_delta_array.push(parent.y_array[i] - parent.y_array[i-1]);}\t\t\n      \n       for (var i=0; i<y_delta_array.length; i++)   {\n      \tif (y_delta_array[i] == 0) {\n      \t\ty_direction_memory.push(y_direction_memory[i-1]);}\n      \telse if (y_delta_array[i] > 0) {\n      \t\ty_direction_memory.push(1);}\n      \telse if (y_delta_array[i] < 0)  {\n      \t\ty_direction_memory.push(-1);}\t\n       }\n      \n        for (var i=1; i<y_direction_memory.length; i++)   {\n      \t\tif (((y_direction_memory[i] * y_direction_memory[i-1]) == -1) && (y_direction_memory[i-1] != y_direction_memory[i+1])) {\n      \t\ty_flips += 1;}\n      \t\tif ((y_direction_memory[i] != y_direction_memory[i-1]) && (y_direction_memory[i] != y_direction_memory[i+1]))\n      \t\t{y_jitter_count += 1;}\n      \t} \n      \t\n      if (y_jitter_count > 0) {\n          filtered_y_flips = y_flips - (2*y_jitter_count);\n      }\n  \t\n  \n      $(\"#X_flips\").val(x_flips);\n      // Keep in mind that this includes jitter.\n      // Also, x_flips and y_flips are calculated based on the rotated trajectory.\n      // An 'ideal' curve in a False_participant trial would show 1 x_flip in the original trajectory, but 0 x_flips in the rotated trajectory.\n      $(\"#Y_flips\").val(y_flips);\n      \n  /* Array storage */\n  \n      // Store x, y and timestamp values as response\n      $(\"#y_diff_array_textarea\").val(y_diff);\n      $(\"#x_val_array_textarea\").val(every_x_array);\n      $(\"#timestamp_textarea\").val(parent.timestamp_array);\n  \t$(\"#every_timestamp_textarea\").val(every_timestamp_array);\n      \n      // X-array corrected for its starting position, i.e. all values reduced by x[0]\n      \n      x1_val_array = [];\n      for (i=0;i<every_x_array.length;i++){\n      \tx1_val_array[i] = every_x_array[i]-every_x_array[0]+1\n      }\n      $(\"#x1_val_array_textarea\").val(x1_val_array);\n     \n  \n   /* Trajectory length */\n   \n      // Calculate length of trajectory, by using Pythagorean theorem\n       // Note: the minus in these for-loops is justified, as calculation of dx and dy should stop at the penultimate value\n       // Due to zero-based indexing, last iteration should work with i = length-2 and i = length-1\n      \n      every_x_delta_array = [];\n      every_y_delta_array = [];\n      \n      for (var i=0;i<every_x_array.length-1;i++){\n      \tevery_x_delta_array[i] = every_x_array[i+1] - every_x_array[i]\n      }\n      \n      for (var i=0;i<every_y_array.length-1;i++){\n      \tevery_y_delta_array[i] = every_y_array[i+1] - every_y_array[i]\n      }\n      \n       // Array with length of hypotenuses: for every increase in x, get the difference in y and calculate the length of the hypotenuse\n      Pyt_array = [];\n      \n      for (var i=0;i<every_x_delta_array.length;i++){\n      \tdx = every_x_delta_array[i];\n      \tdy = every_y_delta_array[i];\n      \tsquared_dx = Math.pow(dx,2);\n      \tsquared_dy = Math.pow(dy,2);\n      \tsquared_hyp = squared_dx + squared_dy;\n      \thypotenuse = Math.sqrt(squared_hyp);\n      \tPyt_array[i] = hypotenuse;\n      }\n      \t\n      \n      $(\"#d_length_array_textarea\").val(Pyt_array);\n      \n      Traj_length_val = 0;\n      \n      for (i=0;i<Pyt_array.length;i++){\n      \tTraj_length_val += Pyt_array[i];\n      }\n      \n      $(\"#Traj_length\").val(Traj_length_val);\n      \n   /* AUC calculation */\n   \n      var area = [];\n      var AUC_above = 0;\n      var AUC_below = 0;\n      \n      for (i=0;i<every_x_array.length-1;i++){\n      \t\n      \tif (every_x_array[i+1] == every_x_array[i]){\n      \t\tarea[i] = 0; \n      \t}\telse if (every_x_array[i+1] != every_x_array[i]){\n      \t\tarea[i] = (y_diff[i+1] + y_diff[i])/2;\n      \t\tif (area[i] > 0){\n      \t\t\tAUC_above += area[i];\n      \t\t}\telse if (area[i] < 0){\n      \t\t\tAUC_below += area[i];\n    \t    }\n        }\n      }\n  \t\n  \t// Store AUC_above and AUV_below correctly based on target position\n  \t if( CorrectSide == \"Left\"){\n          real_AUC_above = AUC_below;\n          real_AUC_below = AUC_above;\n  \t\t\n  \t\tAUC_above = real_AUC_above * -1;\n  \t\t\n  \t\tif (AUC_above != 0){\n  \t\tAUC_above *-1;}\n  \t\t\n  \t\tAUC_below = real_AUC_below * -1;\n  \t\tif (AUC_below != 0){\n  \t\tAUC_below *-1;}\n      }\n      \n      // This part is needed to summate AUC_above and AUC_below (makes AUC_below positive)\n      var rectified_below = AUC_below * -1;\n      var total_AUC = AUC_above + rectified_below;\n      \n      var area_sum = 0;\n      for (var i=0;i<area.length;i++){\n      \tarea_sum += area[i];\n      }\n      \n  \tif( CorrectSide == \"Left\"){\n  \tarea_sum = area_sum * -1;}\n  \t\n      $(\"#AUC_array_textarea\").val(area);\n      $(\"#AUC_diff\").val(area_sum);\n      $(\"#AUC\").val(total_AUC);\n      $(\"#AUC_above_val\").val(AUC_above);\n      $(\"#AUC_below_val\").val(AUC_below);\n      \n      $(\"#Max_dev\").val(Max_dev);\n      \n  /* store data for final processing */\n      \n  \ttrial_data = {},\n  \n      parent.uber_data.x_arrays.push(every_x_array);\n      trial_data.x_arrays = [every_x_array];\n      \n      if( CorrectSide == \"Left\"){\n          var y_array = y_diff.map(function(x){ return x*-1 });\n          parent.uber_data.y_arrays.push(y_array);\n          trial_data.y_arrays  =[y_array];\n      } else {\n          parent.uber_data.y_arrays.push(y_diff);\n          trial_data.y_arrays  = [y_diff];\n      }\n      \n    parent.uber_data.mean_y.push(y_avg);\n  \tparent.uber_data.std_y.push(y_stdev);\n  \tparent.uber_data.max_dev.push(Max_dev);\n  \tparent.uber_data.RT.push(ReactionTime);\n  \tparent.uber_data.AUC_total.push(total_AUC);\n  \tparent.uber_data.AUC_diff.push(area_sum);\n  \tparent.uber_data.AUC_above.push(AUC_above);\n  \tparent.uber_data.AUC_below.push(AUC_below);\n  \tparent.uber_data.x_flips.push(x_flips);\n  \tparent.uber_data.y_flips.push(y_flips);\n  \tparent.uber_data.condition.push(this_condition);\n    parent.uber_data.timestamps.push(every_timestamp_array);  \n  \tparent.uber_data.traj_length.push(Traj_length_val);\n  \tconsole.dir(parent.uber_data);\n  \tparent.uber_data.shuffle_type.push(shuffle_type);\n  \n  \t// save trial by trial\n  \ttrial_data.mean_y=[y_avg];\n  \ttrial_data.std_y=[y_stdev];\n  \ttrial_data.max_dev=[Max_dev];\n  \ttrial_data.RT=[ReactionTime];\n  \ttrial_data.AUC_total=[total_AUC];\n  \ttrial_data.AUC_diff=[area_sum];\n  \ttrial_data.AUC_above=[AUC_above];\n  \ttrial_data.AUC_below=[AUC_below];\n  \ttrial_data.x_flips=[x_flips];\n  \ttrial_data.y_flips=[y_flips];\n  \ttrial_data.condition=[this_condition];\n    trial_data.timestamps=[every_timestamp_array];  \n  \ttrial_data.traj_length=[Traj_length_val];\n  \ttrial_data.shuffle_type=[shuffle_type];\n  \t\n  \t\n  \tif(typeof(parent.User_Data) == \"undefined\" | parent.User_Data.Username == \"Admin:Simulator\"){\n      var this_username = \"simulator\";\n      var experiment_name = \"simulator_blah\";\n    } else {\n      var this_username   = parent.User_Data.Username;\n      var experiment_name = parent.User_Data.Exp_Name;\n    }\n      \n    // need to add experiment name\n    var trial_no = parent.Collector_Experiment.data.globals.position;\n    //var trial_no = parent.uber_data.mean_y.length; //arbitrary which variable from parent.uber_data is used\n    \n    Trial.submit();\n    //ajax_json_read_write(experiment_name+\"_\"+this_username+\"_\"+\"TrialNo_\"+trial_no+\".json\",JSON.stringify(trial_data),\"Write\",\"json\");\n  }\n}\n\nfunction response_window() {\n\tif (TimeLimit_stopper == 0){\n\t\t$(\"#too_slow_feedback\").show();\n\t\tTracker_stopper = 1;\n\t\t$(\"#too_slow_feedback\").delay(3000).hide(0);\n\t\t$(\"#too_slow_button\").show();\n\t\t$(\"#trial_accuracy\").val(0);\n\t\t$(\"#resp_left\").hide();\n\t\t$(\"#resp_right\").hide();\n\t\tSlow_state = 1;\n\t\tActualResponseVal = 0;\n\t\t$(\"#ActualResponseId\").val(ActualResponseVal);\n\t\tvar message = \"Too slow!\";\n\t\tparticipant_error(message,\"slow_click\");\n\t}\n}\n\n\n/*\n* Actions by id\n*/\n$(\"#background\").on('load', function() {\n  if(background_and_video_loaded == 1){\n    background_and_video_loaded = 2;\n    $(\"#loading_vid\").hide();\n    $(\"#background\").show();\n\n    if(response_area.complete == 0){\n      $(\"#response_area\").on(\"load\",function(){\n        $(\".start_video\").show();\n      })\n    } else {\n      $(\".start_video\").show();\n    }\n  } else {\n    background_and_video_loaded = 1;\n  }\n}).on('error', function() { \n  console.log(\"error loading image\"); \n});\n$('#resp_left').on('click', function(){\n  ActualResponseVal = 1;\n  TimeLimit_stopper = 1;\n  Tracker_stopper = 1;\n  $(\"#resp_left\").hide();\n  $(\"#resp_right\").hide();\n  $(\"#ActualResponseId\").val(ActualResponseVal);\n    \n\tif (CorrectSide == \"Left\") {\n\t  $(\"#trial_accuracy\").val(1);\n    $(\"#correct_button\").show();\n  } else if (CorrectSide == \"Right\") {\n    $(\"#trial_accuracy\").val(0);\n    $(\"#error_button\").show();\n    $(\"#error_feedback\").show(0);\n    $(\"#error_feedback\").delay(3000).hide(0);\n    participant_error(\"Incorrect response. Please click on the box with the ball in it.\",\n                      \"incorrect_response\");\n\t}\n});\n  \n$('#resp_right').on('click', function(){\n\tActualResponseVal = 2;\n  TimeLimit_stopper = 1;\n  Tracker_stopper = 1;\n  $(\"#resp_left\").hide();\n  $(\"#resp_right\").hide();\n  $(\"#ActualResponseId\").val(ActualResponseVal);    \n\t\n\tif (CorrectSide == \"Left\") {\n    $(\"#trial_accuracy\").val(0);\n    $(\"#error_button\").show();\n    $(\"#error_feedback\").show(0);\n    $(\"#error_feedback\").delay(3000).hide(0);\n    participant_error(\"Incorrect response. Please click on the box with the ball in it.\",\n                      \"incorrect_response\");\n\t}\telse if (CorrectSide == \"Right\") {\n    $(\"#trial_accuracy\").val(1);\n    $(\"#correct_button\").show();\n\t}\n});\n\n/*\n* Actions by class\n*/\n$(\".process_trial\").on(\"click\",function(){\n  $(\"#trial_content_div\").hide();\n  if(skip_processing_view.toLowerCase() == \"no\"){\n    $(\"#processing_div\").hide();\n\t}\n  process_trial_function();\n});\n</script>\n\n<!-- \n  /*\n  * Analysis \n  */\n-->\n<div id=\"processing_div\">\n  <input id=\"submit\" type=\"submit\" value=\"Finish trial\" readonly>\n  <table>\n    <tr>\n      <td>\n        <div id=\"canvas\"></div>\n      </td>\n      <td>\n        <div id=\"rotated_canvas\"></div>\n      </td>\n    </tr>\n  </table>\n  <input type=\"button\" value=\"Create picture\" id=\"create_picture\" onclick=\"draw_picture()\">\n  <div id=\"data_table\">\n    <table width = \"1100\">\n      <tr>\n        <td><p>Mean Y distance </p></td>\n        <td><input type=\"text\" name=\"y_average_dist\" id=\"y_average_dist\" readonly></td>\n        <td><p>SD for Y distance</p> </td>\n        <td><input type=\"text\" name=\"y_stdev_dist\" id=\"y_stdev_dist\" readonly> </td>\n      </tr>\n\n      <tr>\n        <td><p>Maximum deviation</p></td>\n        <td><input type=\"text\" name=\"Max_dev\" id=\"Max_dev\" readonly></td>\n        <td><p>RT</p></td>\n        <td><input type=\"text\" name=\"RT\" id=\"RT\" readonly></td>\n      </tr>\n      \n      <tr>\n      <td><p>AUC above hor line in pixels</p></td>\n        <td><input type=\"text\" name=\"AUC_above\" id=\"AUC_above_val\" readonly></td>\n      <td><p>AUC below hor line in pixels</p></td>\n        <td><input type=\"text\" name=\"AUC_below\" id=\"AUC_below_val\" readonly></td>\n      </tr>\n      \n      <tr>\n      <td><p>AUC (Above-Below)</p></td>\n        <td><input type=\"text\" name=\"AUC_diff\" id=\"AUC_diff\" readonly></td>\n      <td><p>Overall AUC in pixels</p></td>\n        <td><input type=\"text\" name=\"AUC\" id=\"AUC\" readonly></td>\n      </tr>\n      \n      <tr>\n        <td><p>Raw timestamp array</p></td>\n        <td><textarea name=\"timestamp_textarea\" id=\"timestamp_textarea\" readonly></textarea></td>\n        <td><p>Full timestamp array</p></td>\n        <td><textarea name=\"every_timestamp_textarea\" id=\"every_timestamp_textarea\" readonly></textarea></td>\n      </tr>\n\n      <tr>\n        <td><p>X-flips</p></td>\n        <td><input type=\"text\" name=\"X_flips\" id=\"X_flips\" readonly></td>\n        <td><p>Y-flips</p></td>\n        <td><input type=\"text\" name=\"Y_flips\" id=\"Y_flips\" readonly></td>\n      </tr>\n\n      <tr>\n        <td><p>X values</p></td>\n        <td><textarea name=\"x_val_array\" id=\"x_val_array_textarea\" readonly></textarea></td>\n        <td><p>Y values</p></td>\n        <td><textarea name=\"y_diff_array\" id=\"y_diff_array_textarea\" readonly></textarea></td>\n      </tr>\n\n      <tr>\n        <td><p>X values (1-)</p></td>\n        <td><textarea name=\"x1_val_array\" id=\"x1_val_array_textarea\" readonly></textarea></td>\n        <td><p>AUC array</p></td>\n        <td><textarea name=\"AUC_array\" id=\"AUC_array_textarea\" readonly></textarea></td>\n      </tr>\n      \n      <tr>\n        <td><p>Hypotenuse array</p></td>\n        <td><textarea name=\"d_length_array\" id=\"d_length_array_textarea\" readonly></textarea></td>\n        <td><p>Trajectory length</p></td>\n        <td><input type=\"text\" name=\"Traj_length\" id=\"Traj_length\" readonly></td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<script>\n\nfunction draw_picture(){\n  for(i=0;i<(parent.y_array.length-1);i++){    \n    canvas.appendChild(createLine(parent.x_array[i], \n                                  parent.y_array[i], \n                                  parent.x_array[i+1], \n                                  parent.y_array[i+1],\n                                  \"red\"));\n  }\n  for(i=0;i<(parent.y_array.length-1);i++){    \n    rotated_canvas.appendChild(createLine(rotated_x[i], \n                                          rotated_y[i],\n                                          rotated_x[i+1],\n                                          rotated_y[i+1],\n                                          \"blue\"));\n  }\n  for(i=0;i<(every_x_array.length-1);i++){    \n    rotated_canvas.appendChild(createLine(every_x_array[i], \n                                          every_y_array[i], \n                                          every_x_array[i+1], \n                                          every_y_array[i+1],\n                                          \"yellow\"));\n  }\n}\n\n\n/* Rotation setup */\n\nfunction rotate(cx, cy, x, y, angle) { // from theftprevention on http://stackoverflow.com/questions/17410809/how-to-calculate-rotation-in-2d-in-javascript\n    var radians = (Math.PI / 180) * angle,\n        cos = Math.cos(radians),\n        sin = Math.sin(radians),\n        nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\n        ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n    return [nx, ny];\n}\n\n/* Calculate general line characteristics */\n\nfunction calculate_mean(input_array){\n  var sum = 0;\n  array_length = input_array.filter(Number).length;\n  \n  for( var i = 0; i < input_array.length; i++ ){\n    if(!isNaN(parseInt(input_array[i]))){\n      sum += parseInt( input_array[i], 10 ); //don't forget to add the base\n    }\n  }\n  return sum/array_length;\n}\n\nfunction calculate_sd(input_array){\n  var sd = 0;\n  array_length = input_array.filter(Number).length;\n      \n  for( var i = 0; i < input_array.length; i++ ){\n    if(!isNaN(parseInt(input_array[i]))){\n      sd += Math.pow((Math.abs(parseInt( input_array[i], 10 ) - calculate_mean(input_array))),2); //don't forget to add the base\n    }\n  }\n  return Math.sqrt(sd/(array_length-1));\n}\n\n\nfunction createLineElement(x, y, length, angle, this_colour) {\n    var line = document.createElement(\"div\");\n    var styles = 'border: 1px solid '+ this_colour +'; '\n               + 'width: ' + length + 'px; '\n               + 'height: 0px; '\n               + '-moz-transform: rotate(' + angle + 'rad); '\n               + '-webkit-transform: rotate(' + angle + 'rad); '\n               + '-o-transform: rotate(' + angle + 'rad); '  \n               + '-ms-transform: rotate(' + angle + 'rad); '  \n               + 'position: absolute; '\n               + 'top: ' + y + 'px; '\n               + 'left: ' + x + 'px; ';\n    line.setAttribute('style', styles);  \n    return line;\n}\n\nfunction createLine(x1, y1, x2, y2, this_color) {\n    var a = x1 - x2,\n        b = y1 - y2,\n        c = Math.sqrt(a * a + b * b);\n\n    var sx = (x1 + x2) / 2,\n        sy = (y1 + y2) / 2;\n\n    var x = sx - c / 2,\n        y = sy;\n\n    var alpha = Math.PI - Math.atan2(-b, a);\n    //var this_color = \"blue\";\n\n    return createLineElement(x, y, c, alpha, this_color);\n}\n\n\nif(typeof(parent.uber_data) == \"undefined\"){\n    //create it\n    parent.uber_data = {\n        accuracy : [],\n        mean_y: [],\n\t\tstd_y: [],\n        max_dev: [],\n\t\tRT: [],\n\t\tAUC_total: [],\n\t\tAUC_diff: [],\n\t\tAUC_above: [],\n\t\tAUC_below: [],\n\t\tx_flips: [],\n\t\ty_flips: [],\n\t\tx_arrays: [],\n        y_arrays: [],\n\t\ttimestamps: [],\n\t\ttraj_length: [],\n        condition: [],\n        shuffle_type: [],\n    }\n}\n\n\n\n/* Create raw trajectory */\n\n\n/* --- Trajectory and data processing per trial --- */\n\n\n</script>", "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>"}, "graphic": {"trialtype": "", "trialtypes": {}, "hovered_element": "", "relevant_styles": ["background-color", "border-color", "border-radius", "border-style", "border-width", "color", "font-size", "height", "left", "top", "width", "z-index"]}}, "data": {"scripts": {}, "servers": {"ocollector.org": {"server": "ocollector.org", "script_url": "https://ocollector.org/StoreData7.php", "register_url": "https://ocollector.org/Register6.php"}, "open-collector.org": {"server": "open-collector.org", "script_url": "https://open-collector.org/StoreData.php", "register_url": "https://open-collector.org/Register.php"}}}, "keys": {"archived": [], "public_key": "q+QFJgkGF6eb8SzHJUUnPonMQY0xHjPkPXtqHkwEo1A="}, "autoloaded_boosts": {}, "mods": {}, "autoloaded_mods": {}}